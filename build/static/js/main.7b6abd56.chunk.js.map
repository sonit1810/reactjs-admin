{"version":3,"sources":["mock_data/MemberGroup/list.js","mock_data/User/list.js","mock_data/User/auth.js","configs/PagesUrl.js","redux/auth/action.js","components/Common/Spinner.js","screens/User/Login.js","redux/layout/action.js","components/Layout/CustomMenu.js","configs/siteConfig.js","configs/systemConfig.js","helpers/Ultis.js","components/Layout/Sidebar.js","components/Layout/Header.js","components/Layout/Footer.js","screens/Dashboard/Index.js","redux/user/action.js","components/User/Form.js","helpers/Notification.js","components/User/Add.js","screens/User/Add.js","common/Paginator.js","components/User/Popup/Filter.js","components/User/List.js","screens/User/List.js","components/User/Edit.js","screens/User/Edit.js","components/User/FormDetails.js","components/User/Delete.js","screens/User/Delete.js","components/User/Details.js","screens/User/Detail.js","redux/category/action.js","components/Category/Popup/Filter.js","components/Category/List.js","screens/Category/List.js","components/Category/Form.js","components/Category/Add.js","screens/Category/Add.js","components/Category/Edit.js","screens/Category/Edit.js","components/Category/FormDetails.js","components/Category/Delete.js","screens/Category/Delete.js","redux/roomType/action.js","components/RoomType/Popup/Filter.js","components/RoomType/List.js","screens/RoomType/List.js","components/RoomType/Form.js","components/RoomType/Add.js","screens/RoomType/Add.js","components/RoomType/Edit.js","screens/RoomType/Edit.js","components/RoomType/FormDetails.js","components/RoomType/Delete.js","screens/RoomType/Delete.js","redux/roomFacility/action.js","components/RoomFacility/Popup/Filter.js","components/RoomFacility/List.js","screens/RoomFacility/List.js","components/RoomFacility/Form.js","components/RoomFacility/Add.js","screens/RoomFacility/Add.js","components/RoomFacility/Edit.js","screens/RoomFacility/Edit.js","components/RoomFacility/FormDetails.js","components/RoomFacility/Delete.js","screens/RoomFacility/Delete.js","redux/page/action.js","components/Page/Popup/Filter.js","components/Page/List.js","screens/Page/List.js","screens/Page/Detail.js","components/Page/Form.js","components/Page/Add.js","screens/Page/Add.js","components/Page/Edit.js","screens/Page/Edit.js","components/Page/FormDetails.js","components/Page/Delete.js","screens/Page/Delete.js","redux/room/action.js","components/Room/Popup/Filter.js","components/Room/List.js","screens/Room/List.js","services/UserService.js","services/MemberGroupService.js","services/PromotionService.js","mock_data/Provider.js","redux/user/reducer.js","redux/auth/reducer.js","redux/languageSwitcher/actions.js","redux/languageSwitcher/reducer.js","redux/layout/reducer.js","redux/category/reducer.js","redux/roomFacility/reducer.js","redux/roomType/reducer.js","redux/page/reducer.js","redux/room/reducer.js","redux/categoryPage/action.js","redux/categoryPage/reducer.js","redux/promotion/action.js","redux/promotion/reducer.js","redux/role/action.js","redux/role/reducer.js","redux/homepage/action.js","redux/homepage/reducer.js","redux/gallery/action.js","redux/gallery/reducer.js","redux/service/action.js","redux/service/reducer.js","redux/information/action.js","redux/information/reducer.js","redux/reducers.js","services/RoleService.js","redux/user/saga.js","redux/auth/saga.js","services/CategoryService.js","services/RoomTypeService.js","redux/category/saga.js","redux/roomType/saga.js","services/RoomFacilityService.js","redux/roomFacility/saga.js","services/PageService.js","redux/page/saga.js","services/RoomService.js","redux/room/saga.js","services/CategoryPageService.js","redux/categoryPage/saga.js","redux/promotion/saga.js","redux/role/saga.js","services/HomepageService.js","redux/homepage/saga.js","services/GalleryService.js","redux/gallery/saga.js","services/ServiceService.js","redux/service/saga.js","services/InformationService.js","redux/information/saga.js","redux/sagas.js","redux/store.js","services/SuperFetch.js","services/SuperFetchBase.js","services/ImageService.js","services/CKEditorUploadAdapter.js","components/Room/FormDetails.js","components/Room/Detail.js","screens/Room/Detail.js","common/DatePickerWithFormmik.js","components/Room/Form.js","components/Room/Add.js","screens/Room/Add.js","components/Room/Edit.js","screens/Room/Edit.js","components/Room/Delete.js","screens/Room/Delete.js","components/Room/ListImage.js","screens/Room/ListImage.js","components/Service/Popup/Filter.js","components/Service/List.js","screens/Service/List.js","components/Service/Form.js","components/Service/Add.js","screens/Service/Add.js","components/Service/Edit.js","screens/Service/Edit.js","components/Service/FormDetails.js","components/Service/Detail.js","screens/Service/Detail.js","components/Service/Delete.js","screens/Service/Delete.js","components/Promotion/Popup/Filter.js","components/Promotion/List.js","screens/Promotion/List.js","components/Promotion/FormDetails.js","components/Promotion/Detail.js","screens/Promotion/Detail.js","components/Promotion/Form.js","components/Promotion/Add.js","screens/Promotion/Add.js","components/Promotion/Edit.js","screens/Promotion/Edit.js","components/Promotion/Delete.js","screens/Promotion/Delete.js","components/Role/Popup/Filter.js","components/Role/List.js","screens/Role/List.js","components/Homepage/Popup/Filter.js","components/Homepage/List.js","screens/Homepage/List.js","components/Homepage/Form.js","components/Homepage/Add.js","screens/Homepage/Add.js","components/Homepage/Edit.js","screens/Homepage/Edit.js","components/Homepage/FormDetails.js","components/Homepage/Delete.js","screens/Homepage/Delete.js","components/Gallery/Popup/Filter.js","components/Gallery/List.js","screens/Gallery/List.js","components/Gallery/Form.js","components/Gallery/Add.js","screens/Gallery/Add.js","components/Gallery/Edit.js","screens/Gallery/Edit.js","components/Gallery/FormDetails.js","components/Gallery/Delete.js","screens/Gallery/Delete.js","components/Information/Popup/Filter.js","components/Information/List.js","screens/Information/List.js","components/Information/Form.js","components/Information/Add.js","screens/Information/Add.js","components/Information/Edit.js","screens/Information/Edit.js","components/Information/FormDetails.js","components/Information/Detail.js","screens/Information/Detail.js","components/Information/Delete.js","screens/Information/Delete.js","components/Layout/PageNotFound.js","RestrictedRouter.js","Router.js","languageProvider/entries/en-US.js","languageProvider/entries/ja-JP.js","languageProvider/entries/vi-VN.js","languageProvider/index.js","App.js","redux/boot.js","index.js","registerServiceWorker.js"],"names":["module","exports","id","memberGroupName","membership","numberOfMembers","batchPause","remark","updatedDate","fullname","gender","city","timezone","PAGE_ROOT","PAGE_DASHBOARD","PAGE_CATEGORY_LIST","PAGE_MASTER_PAGE_LIST","PAGE_PROMOTION_LIST","PAGE_USER_LIST","PAGE_ROOM_TYPE_LIST","PAGE_ROOM_FACILITY_LIST","PAGE_ROOM_LIST","PAGE_SERVICE_LIST","PAGE_HOMEPAGE_GALLERY_LIST","PAGE_GALLERY_LIST","PAGE_INFORMATION_LIST","authActions","AUTH_CHECK_AUTHORIZATION","AUTH_AUTHORIZE","AUTH_AUTHORIZE_SUCCESS","AUTH_AUTHORIZE_FAILED","AUTH_UPDATE_PARAM","AUTH_GET_USER_SUCCESS","AUTH_GET_USER_FAILED","AUTH_LOGOUT","checkAuthorization","type","authorize","payload","updateParam","logout","SpinnerComponent","props","this","show","Spinner","style","position","left","top","animation","React","Component","ScreensUserLogin","isLoggedIn","history","push","PageUrls","document","body","classList","remove","add","event","preventDefault","username","target","value","password","messages","languageSwitcher","languageMessages","className","to","onSubmit","doLogin","bind","placeholder","onChange","changeUsername","changePassword","layoutReducer","isCallingApi","withRouter","connect","state","authReducer","actions","layoutActions","LAYOUT_LEFT_MENU_SET_ITEM","LAYOUT_LEFT_MENU_SET_ALL_ITEM_CLOSE","LAYOUT_SET_IS_CALLING_API","LAYOUT_SET_IS_CALLING_API_FINISH","setLeftMenuItem","item","menuItem","setAllLeftMenuItemCloseExceptCurrent","current","calling","CustomMenu","menuKey","parseInt","eventKey","hasChild","isOpen","leftMenuItems","filter","length","children","url","callbackToggle","decoratedOnClick","useAccordionToggle","onClick","toggleAction","siteConfig","apiRoot","siteRoot","apiTimeout","title","fakeData","version","defaultItemPerPage","dateFormat","dateTimeFormat","monthFormat","language","default","options","languageId","locale","text","systemConfig","appId","clearToken","localStorage","removeItem","getToken","data","getItem","Map","err","setToken","setItem","getCurrentLanguage","lang","selectedLanguage","forEach","getAuthorizeData","get","jsonData","JSON","parse","undefined","tokenInfo","token_type","access_token","getTokenInfo","isSuper","roles","indexOf","Sidebar","isCheck","handleCheck","path","pathCheck","matchPath","e","currentTarget","dataset","check","setState","userInfo","Accordion","defaultActiveKey","data-widget","matchPathCustom","location","pathname","PagesUrl","Collapse","Fragment","Header","toggle","collapsed","handleResize","classCollaps","window","innerWidth","addEventListener","removeEventListener","zIndex","href","data-toggle","role","Dropdown","alignRight","variant","size","Toggle","name","email","Menu","Item","tag","Link","gotoChangePassword","doLogout","Footer","ScreensDashboardIndex","userActions","USER_UPDATE_FILTER","USER_GET_LIST","USER_GET_LIST_SUCCESS","USER_GET_LIST_FAILED","USER_GET_DETAIL","USER_GET_DETAIL_SUCCESS","USER_STATUS_SUCCESS","USER_STATUS_FAILED","USER_ADD","USER_ADD_SUCCESS","USER_EDIT","USER_EDIT_SUCCESS","USER_DELETE","USER_DELETE_SUCCESS","USER_RESET_FORM_DATA","USER_GET_ROLE_LIST","USER_GET_ROLE_LIST_SUCCESS","USER_GET_ROLE_LIST_FAILED","updateFilter","getList","params","edit","delete","getById","getRoleList","resetFormData","userReducer","roleList","formData","initialValues","Object","keys","key","formik","useFormik","enableReinitialize","values","submitHandler","Form","handleSubmit","Tabs","Tab","Group","Label","Control","handleChange","as","map","d","message","config","duration","maxCount","msg","success","i","Array","isArray","error","warning","info","UserAdd","validate","errors","notification","ScreensUserAdd","Breadcrumb","active","isLoading","Paginator","onChangeItemPerpageInternal","onChangeItemPerPageInternalFunc","onChangePageNumberInternal","onChangePageNumberInternalFunc","onTogglePopupFilter","onTogglePopupFilterFunc","onTypingSearch","onChangeItemPerPage","pageSize","onChangePageNumber","filterData","filterDataCheck","filterStyle","page","items_per_page","per_page","sort","sort_by_column","searchText","hasFilterData","entries","color","itemPerPage","autoComplete","defaultCurrent","defaultPageSize","currentPage","total","showLessItems","showTotal","range","RangePicker","DatePicker","dateString","console","log","Filter","onApplyFilter","user_group","drm","Modal","aria-labelledby","centered","onHide","closePopup","closeButton","Title","Body","htmlFor","handleChangeParamsInternal","ranges","Today","moment","startOf","endOf","showTime","format","handleDiscardsFilterButton","handleApplyFilterButton","UserList","showPopupFilter","handlePaging","handleItemPerPage","handleFilter","pageNumber","a","listData","items","row","PAGE_USER_EDIT","PAGE_USER_DELETE","togglePopupFilter","Table","bordered","hover","responsive","width","rowSpan","renderList","ScreensUserList","UserEdit","match","userId","ScreensUserEdit","disabled","UserDelete","ScreensUserDelete","UserDetails","userPost","ScreensUserDetails","categoryActions","CATEGORY_UPDATE_FILTER","CATEGORY_GET_LIST","CATEGORY_GET_LIST_SUCCESS","CATEGORY_GET_LIST_FAILED","CATEGORY_GET_DETAIL","CATEGORY_GET_DETAIL_SUCCESS","CATEGORY_GET_DETAIL_FAILED","CATEGORY_STATUS_SUCCESS","CATEGORY_STATUS_FAILED","CATEGORY_ADD","CATEGORY_ADD_SUCCESS","CATEGORY_EDIT","CATEGORY_EDIT_SUCCESS","CATEGORY_DELETE","CATEGORY_DELETE_SUCCESS","CATEGORY_DELETE_FAILED","CATEGORY_RESET_FORM_DATA","CATEGORY_GET_LIST_GROUP","CATEGORY_GET_LIST_GROUP_SUCCESS","getListGroup","applyFilter","discardFilter","changeSearchText","changeSearchTextFunc","s","categoryReducer","CategoryList","en","vi","jp","kanji","romaji","description","PAGE_CATEGORY_EDIT","PAGE_CATEGORY_DELETE","colSpan","ScreensCategoryList","listGroup","code","name_en","name_vi","name_jp_kanji","name_jp_romaji","description_en","description_vi","description_jp_kanji","description_jp_romaji","group_id","CategoryAdd","ScreensCaterogyAdd","CategoryEdit","categoryId","ScreensCategoryEdit","CategoryDelete","ScreensCategoryDelete","roomTypeActions","ROOM_TYPE_UPDATE_FILTER","ROOM_TYPE_GET_LIST","ROOM_TYPE_GET_LIST_SUCCESS","ROOM_TYPE_GET_LIST_FAILED","ROOM_TYPE_GET_DETAIL","ROOM_TYPE_GET_DETAIL_SUCCESS","ROOM_TYPE_STATUS_SUCCESS","ROOM_TYPE_STATUS_FAILED","ROOM_TYPE_ADD","ROOM_TYPE_ADD_SUCCESS","ROOM_TYPE_EDIT","ROOM_TYPE_EDIT_SUCCESS","ROOM_TYPE_DELETE","ROOM_TYPE_DELETE_SUCCESS","ROOM_TYPE_RESET_FORM_DATA","ROOM_TYPE_UPDATE_SORT_LIST","ROOM_TYPE_UPDATE_SORT_LIST_SUCCESS","ROOM_TYPE_UPDATE_SORT_LIST_FAILED","updateSortList","changeHot","changeHotFunc","hot","roomTypeReducer","RoomTypeList","sortMode","sortList","onDragEnd","result","destination","list","startIndex","endIndex","from","splice","removed","reorder","source","index","sort_order","PAGE_ROOM_TYPE_EDIT","PAGE_ROOM_TYPE_DELETE","mode","display","switchToSortMode","droppableId","provided","snapshot","droppableProps","ref","innerRef","isDraggingOver","background","padding","draggableId","toString","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","grid","margin","ScreensRoomTypeList","name_kr","kr","description_kr","sub_types","Check","label","checked","setFieldValue","render","arrayHelpers","sub_type","controlId","includes","idx","RoomTypeAdd","ScreensRoomTypeAdd","RoomTypeEdit","buttonStyle","ScreensRoomTypeEdit","RoomTypeDelete","ScreensRoomTypeDelete","variantActions","VARIANT_UPDATE_FILTER","VARIANT_GET_LIST","VARIANT_GET_LIST_SUCCESS","VARIANT_GET_LIST_FAILED","VARIANT_GET_DETAIL","VARIANT_GET_DETAIL_SUCCESS","VARIANT_STATUS_SUCCESS","VARIANT_STATUS_FAILED","VARIANT_ADD","VARIANT_ADD_SUCCESS","VARIANT_EDIT","VARIANT_EDIT_SUCCESS","VARIANT_DELETE","VARIANT_DELETE_SUCCESS","VARIANT_RESET_FORM_DATA","roomFacilityReducer","RoomFacilityList","PAGE_ROOM_FACILITY_EDIT","PAGE_ROOM_FACILITY_DELETE","ScreensRoomFacilityList","RoomFacilityAdd","ScreensRoomFacilityAdd","RoomFacilityEdit","variantId","ScreensRoomFacilityEdit","RoomFacilityDelete","ScreensRoomFacilityDelete","pageActions","PAGE_UPDATE_FILTER","PAGE_GET_LIST","PAGE_GET_LIST_SUCCESS","PAGE_GET_LIST_FAILED","PAGE_GET_DETAIL","PAGE_GET_DETAIL_SUCCESS","PAGE_GET_DETAIL_FAILED","PAGE_STATUS_SUCCESS","PAGE_STATUS_FAILED","PAGE_ADD","PAGE_ADD_SUCCESS","PAGE_EDIT","PAGE_EDIT_SUCCESS","PAGE_DELETE","PAGE_DELETE_SUCCESS","PAGE_DELETE_FAILED","PAGE_UPLOAD_IMAGE","PAGE_UPLOAD_IMAGE_SUCCESS","PAGE_UPLOAD_IMAGE_FAILED","PAGE_UPLOAD_LOGO","PAGE_UPLOAD_LOGO_SUCCESS","PAGE_UPLOAD_LOGO_FAILED","PAGE_GET_LIST_GROUP","PAGE_GET_LIST_GROUP_SUCCESS","PAGE_RESET_FORM_DATA","uploadImage","uploadLogo","changeGroup","changeGroupFunc","pageReducer","PageList","layout","max_item","textAlign","alt","src","sample_image","ScreensPageList","ScreensPageDetail","sample_image_origin","uploadButtonLabel","Text","singleImage","withIcon","buttonText","pictureSelected","pictureDataURLs","handleImageSelected","imgExtension","maxFileSize","withPreview","buttonStyles","PageAdd","localImageFile","localImageData","image","handleUploadImage","ScreensPageAdd","PageEdit","pageId","ScreensPageEdit","PageDelete","ScreensPageDelete","roomActions","ROOM_UPDATE_FILTER","ROOM_GET_LIST","ROOM_SEARCH_LIST","ROOM_GET_LIST_SUCCESS","ROOM_GET_LIST_FAILED","ROOM_GET_DETAIL","ROOM_GET_DETAIL_SUCCESS","ROOM_STATUS_SUCCESS","ROOM_STATUS_FAILED","ROOM_ADD","ROOM_ADD_SUCCESS","ROOM_EDIT","ROOM_EDIT_SUCCESS","ROOM_DELETE","ROOM_DELETE_SUCCESS","ROOM_GET_LIST_ROOM_TYPE","ROOM_GET_LIST_ROOM_TYPE_SUCCESS","ROOM_UPLOAD_IMAGE","ROOM_UPLOAD_IMAGE_SUCCESS","ROOM_UPLOAD_IMAGE_FAILED","ROOM_GET_LIST_GROUP","ROOM_GET_LIST_GROUP_SUCCESS","ROOM_RESET_FORM_DATA","ROOM_GET_LIST_ROOM_FACILITY","ROOM_GET_LIST_ROOM_FACILITY_SUCCESS","ROOM_ADD_IMAGE","ROOM_ADD_IMAGE_SUCCESS","ROOM_ADD_IMAGE_FAILED","ROOM_DELETE_IMAGE","ROOM_DELETE_IMAGE_SUCCESS","ROOM_DELETE_IMAGE_FAILED","ROOM_SEARCH_FE","getListRoomType","getListRoomFacility","addImage","deleteImage","getListFE","changeStatus","changeStatusFunc","room_type_id","status","listRoomType","roomReducer","RoomList","price","toLocaleString","currency","galleries","images","thumbnail","column","toLowerCase","newFilter","renderTitle","ScreensRoomList","Urls","LOGIN","LOGOUT","REFRESH_TOKEN","GET_LOGGED_USER_INFO","LIST","ADD","EDIT","DELETE","SHOW","UserService","login","SuperFetch","post","getLoggedUserInfo","put","MemberGroupService","PromotionService","services","getDataOfPage","require","getDataById","mockData","temp","search","createdDate","offset","segment","slice","actualPage","initState","loading","CHANGE_LANGUAGE","changeLanguage","dispatch","getState","languageMessage","isLeftMenuOpen","current_page","keyword","memberGroup","pagination","imageData","big","thumb","listDataBE","listRoomFacility","images_origin","facilities","price_text","categoryPageActions","CATEGORY_PAGE_GET_LIST","CATEGORY_PAGE_GET_LIST_STATUS_SUCCESS","CATEGORY_PAGE_GET_LIST_STATUS_FAILED","CATEGORY_PAGE_DETAIL","CATEGORY_PAGE_DETAIL_STATUS_SUCCESS","CATEGORY_PAGE_DETAIL_STATUS_FAILED","CATEGORY_PAGE_ADD","CATEGORY_PAGE_ADD_STATUS_SUCCESS","CATEGORY_PAGE_ADD_STATUS_FAILED","CATEGORY_PAGE_EDIT","CATEGORY_PAGE_EDIT_STATUS_SUCCESS","CATEGORY_PAGE_EDIT_STATUS_FAILED","CATEGORY_PAGE_DELETE","CATEGORY_PAGE_DELETE_STATUS_SUCCESS","CATEGORY_PAGE_DELETE_STATUS_FAILED","CATEGORY_PAGE_ROOM_GET_LIST","CATEGORY_PAGE_ROOM_GET_LIST_STATUS_SUCCESS","CATEGORY_PAGE_ROOM_GET_LIST_STATUS_FAILED","CATEGORY_PAGE_ROOM_EDIT","CATEGORY_PAGE_ROOM_EDIT_STATUS_SUCCESS","CATEGORY_PAGE_ROOM_EDIT_STATUS_FAILED","getPageList","getCategoryDetail","addPageToCategory","selectedPageTemplate","editPageToCategory","deleteCategoryPage","getCategoryPageProductList","updateCategoryPageProduct","categoryPageParams","category_id","page_id","page_position","pageData","productData","pages","promotionActions","PROMOTION_UPDATE_FILTER","PROMOTION_GET_LIST","PROMOTION_SEARCH_LIST","PROMOTION_GET_LIST_SUCCESS","PROMOTION_GET_LIST_FAILED","PROMOTION_GET_DETAIL","PROMOTION_GET_DETAIL_SUCCESS","PROMOTION_STATUS_SUCCESS","PROMOTION_STATUS_FAILED","PROMOTION_ADD","PROMOTION_ADD_SUCCESS","PROMOTION_EDIT","PROMOTION_EDIT_SUCCESS","PROMOTION_DELETE","PROMOTION_DELETE_SUCCESS","PROMOTION_GET_LIST_PROMOTION_TYPE","PROMOTION_GET_LIST_PROMOTION_TYPE_SUCCESS","PROMOTION_UPLOAD_IMAGE","PROMOTION_UPLOAD_IMAGE_SUCCESS","PROMOTION_UPLOAD_IMAGE_FAILED","PROMOTION_GET_LIST_GROUP","PROMOTION_GET_LIST_GROUP_SUCCESS","PROMOTION_RESET_FORM_DATA","PROMOTION_GET_LIST_PROMOTION_VARIANT","PROMOTION_GET_LIST_PROMOTION_VARIANT_SUCCESS","PROMOTION_GET_LIST_ROOM","PROMOTION_GET_LIST_ROOM_SUCCESS","PROMOTION_GET_LIST_ROOM_FAILED","getListRoom","short_description","start_date","end_date","image_origin","room_id","listRoom","roleActions","ROLE_UPDATE_FILTER","ROLE_GET_LIST","ROLE_GET_LIST_SUCCESS","ROLE_GET_LIST_FAILED","ROLE_STATUS_SUCCESS","ROLE_STATUS_FAILED","ROLE_RESET_FORM_DATA","homepageActions","HOMEPAGE_UPDATE_FILTER","HOMEPAGE_GET_LIST","HOMEPAGE_GET_LIST_SUCCESS","HOMEPAGE_GET_LIST_FAILED","HOMEPAGE_GET_DETAIL","HOMEPAGE_GET_DETAIL_SUCCESS","HOMEPAGE_GET_DETAIL_FAILED","HOMEPAGE_STATUS_SUCCESS","HOMEPAGE_STATUS_FAILED","HOMEPAGE_ADD","HOMEPAGE_ADD_SUCCESS","HOMEPAGE_EDIT","HOMEPAGE_EDIT_SUCCESS","HOMEPAGE_DELETE","HOMEPAGE_DELETE_SUCCESS","HOMEPAGE_DELETE_FAILED","HOMEPAGE_UPLOAD_IMAGE","HOMEPAGE_UPLOAD_IMAGE_SUCCESS","HOMEPAGE_UPLOAD_IMAGE_FAILED","HOMEPAGE_UPLOAD_LOGO","HOMEPAGE_UPLOAD_LOGO_SUCCESS","HOMEPAGE_UPLOAD_LOGO_FAILED","HOMEPAGE_GET_LIST_GROUP","HOMEPAGE_GET_LIST_GROUP_SUCCESS","HOMEPAGE_RESET_FORM_DATA","galleryActions","GALLERY_UPDATE_FILTER","GALLERY_GET_LIST","GALLERY_GET_LIST_SUCCESS","GALLERY_GET_LIST_FAILED","GALLERY_GET_DETAIL","GALLERY_GET_DETAIL_SUCCESS","GALLERY_GET_DETAIL_FAILED","GALLERY_STATUS_SUCCESS","GALLERY_STATUS_FAILED","GALLERY_ADD","GALLERY_ADD_SUCCESS","GALLERY_EDIT","GALLERY_EDIT_SUCCESS","GALLERY_DELETE","GALLERY_DELETE_SUCCESS","GALLERY_DELETE_FAILED","GALLERY_UPLOAD_IMAGE","GALLERY_UPLOAD_IMAGE_SUCCESS","GALLERY_UPLOAD_IMAGE_FAILED","GALLERY_UPLOAD_LOGO","GALLERY_UPLOAD_LOGO_SUCCESS","GALLERY_UPLOAD_LOGO_FAILED","GALLERY_GET_LIST_GROUP","GALLERY_GET_LIST_GROUP_SUCCESS","GALLERY_RESET_FORM_DATA","serviceActions","SERVICE_UPDATE_FILTER","SERVICE_GET_LIST","SERVICE_SEARCH_LIST","SERVICE_GET_LIST_SUCCESS","SERVICE_GET_LIST_FAILED","SERVICE_GET_DETAIL","SERVICE_GET_DETAIL_SUCCESS","SERVICE_STATUS_SUCCESS","SERVICE_STATUS_FAILED","SERVICE_ADD","SERVICE_ADD_SUCCESS","SERVICE_EDIT","SERVICE_EDIT_SUCCESS","SERVICE_DELETE","SERVICE_DELETE_SUCCESS","SERVICE_GET_LIST_SERVICE_TYPE","SERVICE_GET_LIST_SERVICE_TYPE_SUCCESS","SERVICE_UPLOAD_IMAGE","SERVICE_UPLOAD_IMAGE_SUCCESS","SERVICE_UPLOAD_IMAGE_FAILED","SERVICE_GET_LIST_GROUP","SERVICE_GET_LIST_GROUP_SUCCESS","SERVICE_RESET_FORM_DATA","SERVICE_GET_LIST_SERVICE_FACILITY","SERVICE_GET_LIST_SERVICE_FACILITY_SUCCESS","informationActions","INFORMATION_UPDATE_FILTER","INFORMATION_GET_LIST","INFORMATION_SEARCH_LIST","INFORMATION_GET_LIST_SUCCESS","INFORMATION_GET_LIST_FAILED","INFORMATION_GET_DETAIL","INFORMATION_GET_DETAIL_SUCCESS","INFORMATION_STATUS_SUCCESS","INFORMATION_STATUS_FAILED","INFORMATION_ADD","INFORMATION_ADD_SUCCESS","INFORMATION_EDIT","INFORMATION_EDIT_SUCCESS","INFORMATION_DELETE","INFORMATION_DELETE_SUCCESS","INFORMATION_GET_LIST_INFORMATION_TYPE","INFORMATION_GET_LIST_INFORMATION_TYPE_SUCCESS","INFORMATION_UPLOAD_IMAGE","INFORMATION_UPLOAD_IMAGE_SUCCESS","INFORMATION_UPLOAD_IMAGE_FAILED","INFORMATION_GET_LIST_GROUP","INFORMATION_GET_LIST_GROUP_SUCCESS","INFORMATION_RESET_FORM_DATA","INFORMATION_GET_LIST_INFORMATION_FACILITY","INFORMATION_GET_LIST_INFORMATION_FACILITY_SUCCESS","action","found","newList","user","logo","field","stringify","categoryPageReducer","promotionReducer","roleReducer","homepageReducer","galleryReducer","serviceReducer","informationReducer","RoleService","fetchData","fetchDataById","addData","editData","deleteData","displayMessage","rootSaga","takeLatest","call","takeEvery","all","fork","loginSuccess","loginError","CategoryPageService","RoomTypeService","CategoryService","RoomFacilityService","PageService","upload","ImageService","nothumb","dataUploadImage","RoomService","listVariant","newGalleries","needDelete","store","CATE_PAGE_PRODUCT","listCatePageProduct","replace","addCategoryPage","editCategoryPage","fetchCategoryPageProductData","editDataById","newRecord","page_info","HomepageService","GalleryService","ServiceService","InformationService","userSaga","authSaga","categorySaga","roomTypeSaga","roomFacilitySaga","pageSaga","roomSaga","categoryPageSaga","promotionSaga","roleSaga","homepageSaga","gallerySaga","serviceSaga","informationSaga","createBrowserHistory","sagaMiddleware","createSagaMiddleware","middlewares","routerMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","combineReducers","reducers","router","connectRouter","form","formReducer","applyMiddleware","run","authorizeInfo","handleError","layoutAction","response","statusText","Promise","reject","service","axios","create","headers","baseURL","timeout","interceptors","use","handleSuccess","request","checkTokenExpired","expiredAt","expires_at","Date","now","method","responseType","res","Authorization","join","resolve","MockDataProvider","getData","then","FormData","append","CKEditorUploadAdapter","loader","file","_initRequest","_initListeners","_sendRequest","xhr","abort","XMLHttpRequest","open","genericErrorText","error_message","evt","lengthComputable","uploadTotal","uploaded","loaded","setRequestHeader","send","editorConfig","toolbar","styles","table","contentToolbar","extraPlugins","editor","plugins","createUploadAdapter","isDetail","images_source","images_thumbnail","images_origin_source","images_origin_thumbnail","price_text_en","price_text_vi","price_text_jp_kanji","price_text_jp_romaji","price_text_kr","DecoupledEditor","onInit","ui","getEditableElement","parentElement","insertBefore","view","element","RoomDetails","ScreensRoomDetail","DatePickerWithFormik","startDateId","endDateId","setFieldTouched","useState","focusedInput","setFocusedInput","startDate","endDate","onDatesChange","onFocusChange","RoomAdd","ScreensRoomAdd","RoomEdit","files","ScreensRoomEdit","RoomDelete","ScreensRoomDelete","RoomListImage","onDrop","handelDeleteImage","stopPropagation","imagesOrigin","galleries_show","ScreensRoomListImage","ServiceList","ScreensServiceList","ServiceAdd","ScreensServiceAdd","ServiceEdit","ScreensServiceEdit","ServiceDetails","ScreensServiceDetail","ServiceDelete","ScreensServiceDelete","ScreensPromotionList","short_description_en","short_description_vi","short_description_jp_kanji","short_description_jp_romaji","component","required","inline","short_description_kr","PromotionDetail","promotionId","ScreensPromotionDetail","PromotionAdd","ScreensPromotionAdd","PromotionEdit","ScreensPromotionEdit","PromotionDelete","ScreensPromotionDelete","RoleList","guard_name","ScreensRoleList","HomepageList","ScreensHomepageList","HomepageAdd","ScreensHomepageAdd","HomepageEdit","ScreensHomepageEdit","HomepageDelete","ScreensHomepageDelete","GalleryList","ScreensGalleryList","GalleryAdd","ScreensGalleryAdd","GalleryEdit","ScreensGalleryEdit","GalleryDelete","ScreensGalleryDelete","InformationList","ScreensInformationList","InformationAdd","ScreensInformationAdd","InformationEdit","ScreensInformationEdit","InformationDetails","ScreensInformationDetail","InformationDelete","ScreensInformationDelete","PageNotFound","privateComponents","exact","ScreensCategoryAdd","ScreensUserRegister","ScreensUserDetail","ScreensHomePageList","ScreensHomePageAdd","ScreensHomePageEdit","ScreensHomePageDelete","GroupRestrictedRoute","singleRoute","otherProps","RestrictedRoute","rest","EnLang","enMessages","antd","antdEn","appLocaleData","JpLan","jpMessages","antdJp","AppLocale","Enlang","Jplang","viMessages","antdVi","addLocaleData","currentAppLocale","App","Helmet","charSet","rel","catch","ReactDOM","getElementById","navigator","swUrl","process","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller"],"mappings":"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","file":"static/js/main.7b6abd56.chunk.js","sourcesContent":["const data = [\n    { id: 1, memberGroupName: \"Group 1\", membership: \"Bronze\", numberOfMembers: \"1人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:01\" },\n    { id: 2, memberGroupName: \"Group 2\", membership: \"Silver\", numberOfMembers: \"2人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:02\" },\n    { id: 3, memberGroupName: \"Group 3\", membership: \"Gold\", numberOfMembers: \"3人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:03\" },\n    { id: 4, memberGroupName: \"Group 4\", membership: \"Platinum\", numberOfMembers: \"4人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:04\" },\n    { id: 5, memberGroupName: \"Group 5\", membership: \"Diamond\", numberOfMembers: \"5人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:05\" },\n    { id: 6, memberGroupName: \"Group 6\", membership: \"Bronze\", numberOfMembers: \"6人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:06\" },\n    { id: 7, memberGroupName: \"Group 7\", membership: \"Silver\", numberOfMembers: \"7人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:07\" },\n    { id: 8, memberGroupName: \"Group 8\", membership: \"Gold\", numberOfMembers: \"8人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:08\" },\n    { id: 9, memberGroupName: \"Group 9\", membership: \"Platinum\", numberOfMembers: \"9人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:09\" },\n    { id: 10, memberGroupName: \"Group 10\", membership: \"Diamond\", numberOfMembers: \"10人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:10\" },\n    { id: 11, memberGroupName: \"Group 11\", membership: \"Diamond\", numberOfMembers: \"11人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:11\" },\n    { id: 12, memberGroupName: \"Group 12\", membership: \"Bronze\", numberOfMembers: \"12人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:12\" },\n    { id: 13, memberGroupName: \"Group 13\", membership: \"Gold\", numberOfMembers: \"13人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:13\" },\n    { id: 14, memberGroupName: \"Group 14\", membership: \"Platinum\", numberOfMembers: \"14人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:14\" },\n    { id: 15, memberGroupName: \"Group 15\", membership: \"Gold\", numberOfMembers: \"15人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:15\" },\n    { id: 16, memberGroupName: \"Group 16\", membership: \"Bronze\", numberOfMembers: \"16人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:16\" },\n    { id: 17, memberGroupName: \"Group 17\", membership: \"Silver\", numberOfMembers: \"17人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:17\" },\n    { id: 18, memberGroupName: \"Group 18\", membership: \"Gold\", numberOfMembers: \"18人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:18\" },\n    { id: 19, memberGroupName: \"Group 19\", membership: \"Silver\", numberOfMembers: \"19人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:19\" },\n    { id: 20, memberGroupName: \"Group 20\", membership: \"Diamond\", numberOfMembers: \"20人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:20\" },\n    { id: 21, memberGroupName: \"Group 21\", membership: \"Platinum\", numberOfMembers: \"21人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:21\" },\n    { id: 22, memberGroupName: \"Group 22\", membership: \"Silver\", numberOfMembers: \"22人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:22\" },\n    { id: 23, memberGroupName: \"Group 23\", membership: \"Gold\", numberOfMembers: \"23人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:23\" },\n    { id: 24, memberGroupName: \"Group 24\", membership: \"Platinum\", numberOfMembers: \"24人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:24\" },\n    { id: 25, memberGroupName: \"Group 25\", membership: \"Diamond\", numberOfMembers: \"25人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:25\" },\n    { id: 26, memberGroupName: \"Group 26\", membership: \"Silver\", numberOfMembers: \"26人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:27\" },\n    { id: 27, memberGroupName: \"Group 27\", membership: \"Silver\", numberOfMembers: \"27人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:28\" },\n    { id: 28, memberGroupName: \"Group 28\", membership: \"Gold\", numberOfMembers: \"28人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:29\" },\n    { id: 29, memberGroupName: \"Group 29\", membership: \"Platinum\", numberOfMembers: \"29人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:30\" },\n    { id: 30, memberGroupName: \"Group 30\", membership: \"Gold\", numberOfMembers: \"30人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:31\" },\n    { id: 31, memberGroupName: \"Group 31\", membership: \"Gold\", numberOfMembers: \"31人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:32\" },\n    { id: 32, memberGroupName: \"Group 32\", membership: \"Gold\", numberOfMembers: \"32人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:33\" },\n    { id: 33, memberGroupName: \"Group 33\", membership: \"Gold\", numberOfMembers: \"33人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:34\" },\n    { id: 34, memberGroupName: \"Group 34\", membership: \"Platinum\", numberOfMembers: \"34人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:35\" },\n    { id: 35, memberGroupName: \"Group 35\", membership: \"Diamond\", numberOfMembers: \"35人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:36\" },\n    { id: 36, memberGroupName: \"Group 36\", membership: \"Bronze\", numberOfMembers: \"36人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:37\" },\n    { id: 37, memberGroupName: \"Group 37\", membership: \"Bronze\", numberOfMembers: \"37人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:38\" },\n    { id: 38, memberGroupName: \"Group 38\", membership: \"Gold\", numberOfMembers: \"38人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:39\" },\n    { id: 39, memberGroupName: \"Group 39\", membership: \"Bronze\", numberOfMembers: \"39人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:40\" },\n    { id: 40, memberGroupName: \"Group 40\", membership: \"Platinum\", numberOfMembers: \"40人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:41\" },\n    { id: 41, memberGroupName: \"Group 41\", membership: \"Platinum\", numberOfMembers: \"51人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:42\" },\n    { id: 42, memberGroupName: \"Group 42\", membership: \"Bronze\", numberOfMembers: \"52人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:43\" },\n    { id: 43, memberGroupName: \"Group 43\", membership: \"Silver\", numberOfMembers: \"53人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:44\" },\n    { id: 44, memberGroupName: \"Group 44\", membership: \"Gold\", numberOfMembers: \"54人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:45\" },\n    { id: 45, memberGroupName: \"Group 45\", membership: \"Diamond\", numberOfMembers: \"55人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:46\" },\n    { id: 46, memberGroupName: \"Group 46\", membership: \"Bronze\", numberOfMembers: \"56人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:47\" },\n    { id: 47, memberGroupName: \"Group 47\", membership: \"Bronze\", numberOfMembers: \"57人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:48\" },\n    { id: 48, memberGroupName: \"Group 48\", membership: \"Gold\", numberOfMembers: \"58人\", batchPause: \"一時停止\", remark: \"備考\", updatedDate: \"2018年03月07日 10:50:49\" }\n];\n\nmodule.exports = data;\n","const data = [\n    {id: 1, fullname : \"First Last 1\", gender: 1, city: \"Tokyo\", timezone: \"Asia/Tokyo\"},\n    {id: 2, fullname : \"First Last 2\", gender: 2, city: \"Newyork\", timezone: \"Asia/Newyork\"},\n    {id: 3, fullname : \"First Last 3\", gender: 1, city: \"Tokyo\", timezone: \"Asia/Tokyo\"},\n    {id: 4, fullname : \"First Last 4\", gender: 1, city: \"Bali\", timezone: \"Asia/Bali\"},\n    {id: 5, fullname : \"First Last 5\", gender: 2, city: \"Ha Noi\", timezone: \"Asia/HaNoi\"},\n    {id: 6, fullname : \"First Last 6\", gender: 1, city: \"Jarkatta\", timezone: \"Asia/Jarkatta\"},\n    {id: 7, fullname : \"First Last 7\", gender: 1, city: \"Tokyo\", timezone: \"Asia/Tokyo\"},\n    {id: 8, fullname : \"First Last 8\", gender: 1, city: \"Tokyo\", timezone: \"Asia/Tokyo\"},\n    {id: 9, fullname : \"First Last 9\", gender: 2, city: \"Sysney\", timezone: \"Asia/Sysney\"},\n    {id: 10, fullname : \"First Last 10\", gender: 1, city: \"Tokyo\", timezone: \"Asia/Tokyo\"},\n    {id: 11, fullname : \"First Last 11\", gender: 1, city: \"Bangkok\", timezone: \"Asia/Bangkok\"},\n    {id: 12, fullname : \"First Last 12\", gender: 2, city: \"Tokyo\", timezone: \"Asia/Tokyo\"},\n    {id: 13, fullname : \"First Last 13\", gender: 1, city: \"Tokyo\", timezone: \"Asia/Tokyo\"},\n    {id: 14, fullname : \"First Last 14\", gender: 2, city: \"Brussel\", timezone: \"Asia/Brussels\"},\n    {id: 15, fullname : \"First Last 15\", gender: 1, city: \"Ho Chi Minh\", timezone: \"Asia/HaNoi\"},\n    {id: 16, fullname : \"First Last 16\", gender: 1, city: \"Ho Chi Minh\", timezone: \"Asia/HaNoi\"},\n    {id: 17, fullname : \"First Last 17\", gender: 2, city: \"Da Nang\", timezone: \"Asia/HaNoi\"},\n    {id: 18, fullname : \"First Last 18\", gender: 1, city: \"Tokyo\", timezone: \"Asia/Tokyo\"},\n    {id: 19, fullname : \"First Last 19\", gender: 2, city: \"Seoul\", timezone: \"Asia/Seoul\"},\n    {id: 20, fullname : \"First Last 20\", gender: 1, city: \"Tokyo\", timezone: \"Asia/Tokyo\"}\n];\n\nmodule.exports = data;\n","const data = [\n    {id: 1, fullname : \"First Last\", gender: 1, city: \"Tokyo\", timezone: \"Asia/Tokyo\"}\n];\n\nmodule.exports = data;\n","export const PAGE_ROOT = '/';\nexport const PAGE_LOGIN = '/login';\nexport const PAGE_DASHBOARD = '/dashboard';\n\nexport const PAGE_CATEGORY_LIST = '/category/list';\nexport const PAGE_CATEGORY_DETAIL = '/category/detail';\nexport const PAGE_CATEGORY_ADD = '/category/add';\nexport const PAGE_CATEGORY_EDIT = '/category/edit';\nexport const PAGE_CATEGORY_DELETE = '/category/delete';\n\nexport const PAGE_GROUP_LIST = '/group/list';\nexport const PAGE_GROUP_DETAIL = '/group/detail';\nexport const PAGE_GROUP_ADD = '/group/add';\nexport const PAGE_GROUP_EDIT = '/group/edit';\nexport const PAGE_GROUP_DELETE = '/group/delete';\n\nexport const PAGE_MASTER_PAGE_LIST = '/page/list';\nexport const PAGE_MASTER_PAGE_DETAIL = '/page/detail';\nexport const PAGE_MASTER_PAGE_ADD = '/page/add';\nexport const PAGE_MASTER_PAGE_EDIT = '/page/edit';\nexport const PAGE_MASTER_PAGE_DELETE = '/page/delete';\n\nexport const PAGE_MENU_CATEGORIES = '/menu/categories';\nexport const PAGE_MENU_CATEGORY_PAGES = '/menu/:groupId/categories/:categoryId/:categoryName/pages';\nexport const PAGE_MENU_CATEGORY_PAGE_PRODUCTS = '/menu/:groupId/categories/:categoryId/:categoryName/pages/:pageId/products';\n\nexport const PAGE_PROMOTION_LIST = '/promotions/list';\nexport const PAGE_PROMOTION_DETAIL = '/promotions/detail';\nexport const PAGE_PROMOTION_ADD = '/promotions/add';\nexport const PAGE_PROMOTION_EDIT = '/promotions/edit';\nexport const PAGE_PROMOTION_DELETE = '/promotions/delete';\n\nexport const PAGE_ROLE_LIST = '/roles/list';\n\nexport const PAGE_USER_LIST = '/user/list';\nexport const PAGE_USER_ADD = '/user/add';\nexport const PAGE_USER_DETAIL = '/user/detail';\nexport const PAGE_USER_EDIT = '/user/edit';\nexport const PAGE_USER_DELETE = '/user/delete';\n\nexport const PAGE_ROOM_TYPE_LIST = '/room-types/list';\nexport const PAGE_ROOM_TYPE_DETAIL = '/room-types/detail';\nexport const PAGE_ROOM_TYPE_ADD = '/room-types/add';\nexport const PAGE_ROOM_TYPE_EDIT = '/room-types/edit';\nexport const PAGE_ROOM_TYPE_DELETE = '/room-types/delete';\n\nexport const PAGE_ROOM_FACILITY_LIST = '/room-facility/list';\nexport const PAGE_ROOM_FACILITY_DETAIL = '/room-facility/detail';\nexport const PAGE_ROOM_FACILITY_ADD = '/room-facility/add';\nexport const PAGE_ROOM_FACILITY_EDIT = '/room-facility/edit';\nexport const PAGE_ROOM_FACILITY_DELETE = '/room-facility/delete';\n\nexport const PAGE_ROOM_LIST = '/room/list';\nexport const PAGE_ROOM_DETAIL = '/room/detail';\nexport const PAGE_ROOM_ADD = '/room/add';\nexport const PAGE_ROOM_EDIT = '/room/edit';\nexport const PAGE_ROOM_DELETE = '/room/delete';\nexport const PAGE_ROOM_LIST_IMAGE = '/room/list-image';\n\nexport const PAGE_SERVICE_LIST = '/services/list';\nexport const PAGE_SERVICE_DETAIL = '/services/detail';\nexport const PAGE_SERVICE_ADD = '/services/add';\nexport const PAGE_SERVICE_EDIT = '/services/edit';\nexport const PAGE_SERVICE_DELETE = '/services/delete';\n\nexport const PAGE_HOMEPAGE_GALLERY_LIST = '/homepage/list';\nexport const PAGE_HOMEPAGE_GALLERY_ADD = '/homepage/add';\nexport const PAGE_HOMEPAGE_GALLERY_EDIT = '/homepage/edit';\nexport const PAGE_HOMEPAGE_GALLERY_DELETE = '/homepage/delete';\n\nexport const PAGE_GALLERY_LIST = '/gallery/list';\nexport const PAGE_GALLERY_ADD = '/gallery/add';\nexport const PAGE_GALLERY_EDIT = '/gallery/edit';\nexport const PAGE_GALLERY_DELETE = '/gallery/delete';\n\nexport const PAGE_INFORMATION_LIST = '/information/list';\nexport const PAGE_INFORMATION_DETAIL = '/information/detail';\nexport const PAGE_INFORMATION_ADD = '/information/add';\nexport const PAGE_INFORMATION_EDIT = '/information/edit';\nexport const PAGE_INFORMATION_DELETE = '/information/delete';\n","const authActions = {\n    AUTH_CHECK_AUTHORIZATION: \"AUTH_CHECK_AUTHORIZATION\",\n    AUTH_AUTHORIZE: \"AUTH_AUTHORIZE\",\n    AUTH_AUTHORIZE_SUCCESS: \"AUTH_AUTHORIZE_SUCCESS\",\n    AUTH_AUTHORIZE_FAILED: \"AUTH_AUTHORIZE_FAILED\",\n    AUTH_UPDATE_PARAM: \"AUTH_UPDATE_PARAM\",\n    AUTH_GET_USER_SUCCESS: \"AUTH_GET_USER_SUCCESS\",\n    AUTH_GET_USER_FAILED: \"AUTH_GET_USER_FAILED\",\n    AUTH_LOGOUT: \"AUTH_LOGOUT\",\n\n    checkAuthorization: () => ({ type: authActions.AUTH_CHECK_AUTHORIZATION }),\n\n    authorize(payload) {\n        return {\n            type: authActions.AUTH_AUTHORIZE,\n            payload: payload\n        }\n    },\n    updateParam(payload) {\n        return {\n            type: authActions.AUTH_UPDATE_PARAM,\n            payload: payload\n        }\n    },\n    logout() {\n        return {\n            type: authActions.AUTH_LOGOUT\n        }\n    },\n};\nexport default authActions;\n","import React from 'react';\nimport  { Spinner } from 'react-bootstrap';\n\nclass SpinnerComponent extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        const { props } = this;\n        if (props.show ) {\n            return (\n                <Spinner style={{position: 'absolute', left: '50%', top: '10%'}} animation=\"border\">\n                </Spinner>\n            ) ;\n        } else {\n            return ('');\n        }\n    }\n}\n\nexport default (SpinnerComponent);\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport actions from '../../redux/auth/action';\nimport { withRouter } from 'react-router-dom';\nimport * as PageUrls from \"../../configs/PagesUrl\";\nimport {Link} from 'react-router-dom';\nimport SpinnerComponent from \"../../components/Common/Spinner\";\n\nclass ScreensUserLogin extends React.Component {\n\n    constructor(props) {\n        super(props);\n        if (this.props.isLoggedIn) {\n            this.props.history.push(PageUrls.PAGE_DASHBOARD);\n        }\n    }\n\n    componentDidMount() {\n        document.body.classList.remove('skin-blue');\n        document.body.classList.remove('sidebar-mini');\n        document.body.classList.add('login-page');\n    }\n    componentWillUnmount() {\n        document.body.classList.add('skin-blue');\n        document.body.classList.add('sidebar-mini');\n        document.body.classList.remove('login-page');\n    }\n    doLogin(event) {\n        event.preventDefault();\n        this.props.authorize(this.props.payload);\n    }\n\n    changeUsername(event) {\n        this.props.updateParam({\n            ...this.props.payload,\n            username: event.target.value\n        });\n    }\n\n    changePassword(event) {\n        this.props.updateParam({\n            ...this.props.payload,\n            password: event.target.value\n        });\n    }\n\n    render() {\n\n        const messages = this.props.languageSwitcher.languageMessages;\n        //const locale = this.props.languageSwitcher.language.locale;\n\n        return (\n            <div className=\"login-box\">\n                <div className=\"login-logo\">\n                    <Link to=\"#\"><b className=\"mr-10 login-title\">Vi tinh Duc Vy</b> CMS</Link>\n                </div>\n                <div className=\"login-box-body\">\n                    <p className=\"login-box-msg\">{messages['login.title']}</p>\n                    <form onSubmit={this.doLogin.bind(this)}>\n                        <div className=\"form-group has-feedback\">\n                            <span className=\"fa fa-user form-control-feedback feedback-left\"></span>\n                            <input type=\"text\" className=\"form-control form-control-left\" placeholder={messages['login.username']}\n                                   onChange={this.changeUsername.bind(this)} />\n                        </div>\n                        <div className=\"form-group has-feedback\">\n                            <span className=\"fa fa-lock form-control-feedback feedback-left\"></span>\n                            <input type=\"password\" className=\"form-control form-control-left\" placeholder={messages['login.password']}\n                                   onChange={this.changePassword.bind(this)}\n                            />\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-6 offset-6\">\n                                <button type=\"submit\" className=\"btn btn-primary btn-block btn-flat\" >{messages['login.login']}</button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                <SpinnerComponent show={this.props.layoutReducer.isCallingApi}> </SpinnerComponent>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.authReducer,\n    ...state\n  });\n\nexport default withRouter(connect(mapStateToProps,actions)(ScreensUserLogin));\n","const layoutActions = {\n\n    LAYOUT_LEFT_MENU_SET_ITEM: \"LAYOUT_LEFT_MENU_SET_ITEM\",\n    LAYOUT_LEFT_MENU_SET_ALL_ITEM_CLOSE: \"LAYOUT_LEFT_MENU_SET_ALL_ITEM_CLOSE\",\n    LAYOUT_SET_IS_CALLING_API: \"LAYOUT_SET_IS_CALLING_API\",\n    LAYOUT_SET_IS_CALLING_API_FINISH: \"LAYOUT_SET_IS_CALLING_API_FINISH\",\n\n    setLeftMenuItem(item) {\n        return {\n            type: layoutActions.LAYOUT_LEFT_MENU_SET_ITEM,\n            menuItem: item\n        }\n    },\n    setAllLeftMenuItemCloseExceptCurrent(current) {\n        return {\n            type: layoutActions.LAYOUT_LEFT_MENU_SET_ALL_ITEM_CLOSE,\n            current: current\n        }\n    },\n    isCallingApi(calling) {\n        return {\n            type: layoutActions.LAYOUT_SET_IS_CALLING_API,\n            calling: calling\n        }\n    }\n};\nexport default layoutActions;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/layout/action\";\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\n\nclass CustomMenu extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            menuKey: parseInt(this.props.eventKey),\n            hasChild: this.props.hasChild\n        };\n        this.props.setLeftMenuItem({id: this.state.menuKey, isOpen: false});\n    }\n\n    toggleAction() {\n        this.props.setAllLeftMenuItemCloseExceptCurrent(this.state.menuKey);\n    }\n\n    render() {\n\n        function CustomToggle({ children, eventKey, url, callbackToggle, isOpen }) {\n\n            const decoratedOnClick = useAccordionToggle(eventKey, () => {\n                callbackToggle();\n            });\n\n            let className = 'link-disabled';\n            if (isOpen) {\n                className = 'menu-active';\n            }\n\n            return (\n                <Link\n                    to={url}\n                    onClick={decoratedOnClick}\n                    className={className}\n                >\n                    {children}\n                </Link>\n            );\n        }\n\n        let isOpen = false;\n        const item = this.props.leftMenuItems.filter((item) => {\n            return this.state.menuKey === item.id;\n        });\n        if (item.length > 0) {\n            isOpen = item[0].isOpen;\n        }\n\n        return (\n            <CustomToggle url='#' eventKey={this.props.eventKey}\n                          callbackToggle={this.toggleAction.bind(this)} isOpen={isOpen} >\n                {this.props.children}\n                { this.state.hasChild ?\n                    <span className=\"pull-right-container\">\n                        { isOpen ?\n                            <i className='fa fa-angle-down pull-right ant-menu-item-active'/>\n                            : <i className='fa fa-angle-right pull-right'/> }\n                    </span>\n                    : ''}\n            </CustomToggle>\n        );\n\n    }\n}\nconst mapStateToProps = (state) => ({\n    ...state.layoutReducer,\n    ...state\n});\nexport default connect(mapStateToProps, actions)(CustomMenu);","const siteConfig = {\n    apiRoot : 'https://vitinhducvy.com/api/v1/',\n    // apiRoot : 'http://35.185.166.37:2000/api/v1/',\n    // apiRoot : 'http://localhost:7001/api/v1/',\n    siteRoot : 'https://vitinhducvy.com/',\n    apiTimeout: 90000,\n    title: 'Vi tính Đức Vy - CMS',\n    fakeData: false,\n    version: '1.0',\n    defaultItemPerPage: 30,\n    dateFormat: 'YYYY-MM-DD',\n    dateTimeFormat: 'YYYY-MM-DD HH:mm:ss',\n    monthFormat: 'YYYY-MM',\n    language: {\n        default: 'vietnam',\n        options: [\n            {\n                languageId: \"vietnam\",\n                locale: \"vi\",\n                text: \"Tieng Viet\",\n            },\n            {\n                languageId: \"english\",\n                locale: \"en\",\n                text: \"English\",\n            }\n        ]\n    },\n};\n\nexport default siteConfig;\n","import siteConfig from \"./siteConfig\";\n\nconst systemConfig = {\n    appId: \"SUNFLOWER\",\n};\nexport default systemConfig;","import { Map } from 'immutable';\nimport siteConfig from \"../configs/siteConfig\";\nimport systemConfig from \"../configs/systemConfig\";\n\nexport function clearToken() {\n    localStorage.removeItem('data' + systemConfig.appId);\n}\n\nexport function getToken() {\n    try {\n        const data = localStorage.getItem('data' + systemConfig.appId);\n        return new Map({ data });\n    } catch (err) {\n        clearToken();\n        return new Map();\n    }\n}\n\nexport function setToken(data) {\n    localStorage.setItem('data' + systemConfig.appId, data);\n}\n\nexport function getCurrentLanguageLocale() {\n    // alert(navigator.language.split(/[-_]/)[0]);\n    return navigator.language.split(/[-_]/)[0];  // language without region code\n}\n\nexport function setCurrentLanguage(languageId) {\n    return localStorage.setItem('id_language', languageId);\n}\n\nexport function getCurrentLanguage(lang) {\n    //default 1\n    let selectedLanguage = siteConfig.language.options[0];\n    siteConfig.language.options.forEach(language => {\n        if (language.languageId === lang) {\n            selectedLanguage = language;\n            setCurrentLanguage(lang);\n        }\n    });\n    return selectedLanguage;\n}\n\nexport function getAuthorizeData() {\n    const data = getToken().get('data');\n    if (data) {\n        const jsonData = JSON.parse(data);\n        if (jsonData.tokenInfo === undefined) {\n          return \"NO TOKEN INFO\";\n        };\n        return jsonData.tokenInfo.token_type + \" \" + jsonData.tokenInfo.access_token;\n    } else {\n        return 'no_data';\n    }\n}\n\nexport function getTokenInfo() {\n    const data = getToken().get('data');\n    if (data) {\n        const cachedData = JSON.parse(data);\n        return cachedData.tokenInfo;\n    } else {\n        return false;\n    }\n}\n\nexport function toVND(x) {\n    return x.toLocaleString('it-IT', {style : 'currency', currency : 'VND'});\n}\n\nexport function isSuper(roles) {\n    if (roles === undefined) return false;\n    return roles.indexOf('ROLE_SUPER_ADMIN') !== -1;\n}\n\nexport function isAdmin(roles) {\n    if (roles === undefined) return false;\n    return roles.indexOf('ROLE_ADMIN') !== -1;\n}\n","import React from 'react';\nimport * as PagesUrl from '../../configs/PagesUrl';\nimport { Link, withRouter, matchPath } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { Accordion } from 'react-bootstrap';\nimport CustomMenu from \"./CustomMenu\";\nimport {isAdmin, isSuper} from \"../../helpers/Ultis\";\n\nclass Sidebar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isCheck : true\n        };\n        this.handleCheck = this.handleCheck.bind(this);\n    }\n\n    matchPathCustom(path, pathCheck) {\n        return matchPath(path, pathCheck);\n    }\n\n    componentWillMount() {\n        // if(this.matchPathCustom(this.props.location.pathname, { path: PagesUrl.PAGE_HIERARCHICAL_SITE_SELECT, exact: true }) ) {\n        //     this.setState({\n        //         isCheck : false\n        //     });\n        // }\n    }\n\n    handleCheck(e) {\n        if(e.currentTarget.dataset.check) {\n            this.setState({\n                isCheck : true\n            });\n        } else {\n            this.setState({\n                isCheck : false\n            });\n        }\n    }\n\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        if (!isSuper(this.props.authReducer.userInfo.roles) && !isAdmin(this.props.authReducer.userInfo.roles)) {\n            return (\n                <React.Fragment>\n                    403 Forbidden\n                </React.Fragment>\n            )\n        }\n\n        return (\n            <Accordion defaultActiveKey=\"0\">\n                <aside className=\"main-sidebar\">\n                    <section className=\"sidebar\">\n                        <ul className=\"sidebar-menu\" data-widget=\"tree\">\n                            <li className=\"header\"> </li>\n                            <li onClick={this.handleCheck} className={this.matchPathCustom(this.props.location.pathname, { path: PagesUrl.PAGE_DASHBOARD }) ? 'active' : ''}>\n                                <Link to={PagesUrl.PAGE_DASHBOARD}>\n                                    <i className=\"fa fa-dashboard\"> </i>\n                                    <span>{messages['layout.sidebar.dashboard']}</span>\n                                </Link>\n                            </li>\n                            {/*<li className=\"treeview\">*/}\n                                {/*<CustomMenu eventKey=\"1\" url=\"#\" hasChild={true} >*/}\n                                    {/*<i className=\"fa fa-clone\"> </i>*/}\n                                    {/*<span>Manage Menu</span>*/}\n                                {/*</CustomMenu>*/}\n                                {/*<Accordion.Collapse eventKey=\"1\">*/}\n                                    {/*<ul className=\"treeview-menu\">*/}\n                                        {/*<li>*/}\n                                            {/*<Link to={PagesUrl.PAGE_MENU_CATEGORIES}>*/}\n                                                {/*<i className=\"fa fa-address-book\"> </i>*/}\n                                                {/*<span>Menu</span>*/}\n                                            {/*</Link>*/}\n                                        {/*</li>*/}\n                                    {/*</ul>*/}\n                                {/*</Accordion.Collapse>*/}\n                            {/*</li>*/}\n                            <li className=\"treeview\">\n                                <CustomMenu eventKey=\"2\" url=\"#\" hasChild={true} >\n                                    <i className=\"fa fa-database\"> </i>\n                                    <span>Quản lý</span>\n                                </CustomMenu>\n                                <Accordion.Collapse eventKey=\"2\">\n                                    <ul className=\"treeview-menu\">\n                                        <li onClick={this.handleCheck} className={this.matchPathCustom(this.props.location.pathname, { path: PagesUrl.PAGE_ROOM_LIST }) ? 'active' : ''}>\n                                            <Link to={PagesUrl.PAGE_ROOM_LIST}>\n                                                <i className=\"fa fa-microchip\"> </i>\n                                                <span>Sản phẩm</span>\n                                            </Link>\n                                        </li>\n                                        <li onClick={this.handleCheck} className={this.matchPathCustom(this.props.location.pathname, { path: PagesUrl.PAGE_ROOM_TYPE_LIST }) ? 'active' : ''}>\n                                            <Link to={PagesUrl.PAGE_ROOM_TYPE_LIST}>\n                                                <i className=\"fa fa-folder\"> </i>\n                                                <span>Danh mục</span>\n                                            </Link>\n                                        </li>\n                                        {/*<li onClick={this.handleCheck} className={this.matchPathCustom(this.props.location.pathname, { path: PagesUrl.PAGE_ROOM_FACILITY_LIST }) ? 'active' : ''}>*/}\n                                            {/*<Link to={PagesUrl.PAGE_ROOM_FACILITY_LIST}>*/}\n                                                {/*<i className=\"fa fa-flask\"> </i>*/}\n                                                {/*<span>Room Facilities</span>*/}\n                                            {/*</Link>*/}\n                                        {/*</li>*/}\n                                    </ul>\n                                </Accordion.Collapse>\n                            </li>\n                            {/*<li className=\"treeview\">*/}\n                                {/*<CustomMenu eventKey=\"3\" url=\"#\" hasChild={true} >*/}\n                                    {/*<i className=\"fa fa-credit-card\"> </i>*/}\n                                    {/*<span>Manage Promotion</span>*/}\n                                {/*</CustomMenu>*/}\n                                {/*<Accordion.Collapse eventKey=\"3\">*/}\n                                    {/*<ul className=\"treeview-menu\">*/}\n                                        {/*<li onClick={this.handleCheck} className={this.matchPathCustom(this.props.location.pathname, { path: PagesUrl.PAGE_PROMOTION_LIST }) ? 'active' : ''}>*/}\n                                            {/*<Link to={PagesUrl.PAGE_PROMOTION_LIST}>*/}\n                                                {/*<i className=\"fa fa-address-book\"> </i>*/}\n                                                {/*<span>Promotion</span>*/}\n                                            {/*</Link>*/}\n                                        {/*</li>*/}\n                                    {/*</ul>*/}\n                                {/*</Accordion.Collapse>*/}\n                            {/*</li>*/}\n                            <li className=\"treeview\">\n                                <CustomMenu eventKey=\"7\" url=\"#\" hasChild={true} >\n                                    <i className=\"fa fa-credit-card\"> </i>\n                                    <span>Hình ảnh</span>\n                                </CustomMenu>\n                                <Accordion.Collapse eventKey=\"7\">\n                                    <ul className=\"treeview-menu\">\n                                        <li onClick={this.handleCheck} className={this.matchPathCustom(this.props.location.pathname, { path: PagesUrl.PAGE_HOMEPAGE_GALLERY_LIST }) ? 'active' : ''}>\n                                            <Link to={PagesUrl.PAGE_HOMEPAGE_GALLERY_LIST}>\n                                                <i className=\"fa fa-image\"> </i>\n                                                <span>Hình slide</span>\n                                            </Link>\n                                        </li>\n                                        <li onClick={this.handleCheck} className={this.matchPathCustom(this.props.location.pathname, { path: PagesUrl.PAGE_GALLERY_LIST }) ? 'active' : ''}>\n                                            <Link to={PagesUrl.PAGE_GALLERY_LIST}>\n                                                <i className=\"fa fa-image\"> </i>\n                                                <span>Thư viện hình ảnh</span>\n                                            </Link>\n                                        </li>\n                                    </ul>\n                                </Accordion.Collapse>\n                            </li>\n                            <li className=\"treeview\">\n                                <CustomMenu eventKey=\"8\" url=\"#\" hasChild={true} >\n                                    <i className=\"fa fa-credit-card\"> </i>\n                                    <span>Thông tin</span>\n                                </CustomMenu>\n                                <Accordion.Collapse eventKey=\"8\">\n                                    <ul className=\"treeview-menu\">\n                                        {/*<li onClick={this.handleCheck} className={this.matchPathCustom(this.props.location.pathname, { path: PagesUrl.PAGE_SERVICE_LIST }) ? 'active' : ''}>*/}\n                                            {/*<Link to={PagesUrl.PAGE_SERVICE_LIST}>*/}\n                                                {/*<i className=\"fa fa-address-book\"> </i>*/}\n                                                {/*<span>Dịch vụ</span>*/}\n                                            {/*</Link>*/}\n                                        {/*</li>*/}\n                                        <li onClick={this.handleCheck} className={this.matchPathCustom(this.props.location.pathname, { path: PagesUrl.PAGE_INFORMATION_LIST }) ? 'active' : ''}>\n                                            <Link to={PagesUrl.PAGE_INFORMATION_LIST}>\n                                                <i className=\"fa fa-address-book\"> </i>\n                                                <span>Báo giá</span>\n                                            </Link>\n                                        </li>\n                                    </ul>\n                                </Accordion.Collapse>\n                            </li>\n                            { isSuper(this.props.authReducer.userInfo.roles) ?\n                            <li className=\"treeview\">\n                                <CustomMenu eventKey=\"5\" url=\"#\" hasChild={true} >\n                                    <i className=\"fa fa-users\"> </i>\n                                    <span>{messages['layout.sidebar.manageUserAndRole']}</span>\n                                </CustomMenu>\n                                <Accordion.Collapse eventKey=\"5\">\n                                    <ul className=\"treeview-menu\">\n                                        <li onClick={this.handleCheck} className={this.matchPathCustom(this.props.location.pathname, { path: PagesUrl.PAGE_USER_LIST }) ? 'active' : ''}>\n                                            <Link to={PagesUrl.PAGE_USER_LIST}>\n                                                <i className=\"fa fa-user\"> </i>\n                                                <span>Người dùng</span>\n                                            </Link>\n                                        </li>\n                                        <li onClick={this.handleCheck} className={this.matchPathCustom(this.props.location.pathname, { path: PagesUrl.PAGE_ROLE_LIST }) ? 'active' : ''}>\n                                            <Link to={PagesUrl.PAGE_ROLE_LIST}>\n                                                <i className=\"fa fa-users\"> </i>\n                                                <span>Quyền</span>\n                                            </Link>\n                                        </li>\n                                    </ul>\n                                </Accordion.Collapse>\n                            </li> :''}\n                        </ul>\n                    </section>\n                </aside>\n            </Accordion>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state,\n    ...state.layoutReducer\n});\n\nexport default withRouter(connect(mapStateToProps)(Sidebar));\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport authActions from \"../../redux/auth/action\";\nimport {Dropdown, Spinner} from \"react-bootstrap\";\nimport {PAGE_USER_LIST} from \"../../configs/PagesUrl\";\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapsed: false,\n            classCollaps: ''\n        };\n    }\n\n    toggle = () => {\n        this.setState({\n            collapsed: !this.state.collapsed\n        });\n        this.handleResize();\n    };\n\n    handleResize = e => {\n        const windowSize = window.innerWidth;\n        const classCollaps = (windowSize > 767) ? 'sidebar-collapse' : 'sidebar-open';\n        this.setState({\n            classCollaps: classCollaps\n        });\n    };\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.handleResize);\n        window.addEventListener(\"load\", this.handleResize);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.handleResize);\n        window.removeEventListener(\"load\", this.handleResize);\n    }\n\n    componentDidUpdate() {\n        if (this.state.collapsed) {\n            if (this.state.classCollaps !== '') {\n                document.body.classList.add(this.state.classCollaps);\n            }\n        } else {\n            if (this.state.classCollaps !== '') {\n                document.body.classList.remove(this.state.classCollaps);\n            }\n        }\n    }\n\n    doLogout() {\n        this.props.logout();\n    }\n\n    gotoChangePassword() {\n        this.props.history.push(PAGE_USER_LIST);\n    }\n\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <header className=\"main-header\">\n                <Link to=\"/\" className=\"logo\">\n                    <span className=\"logo-mini\"><b>{messages['layout.logo.name']}</b></span>\n                    <span className=\"logo-lg\"><b>{messages['layout.logo.name']}</b></span>\n                </Link>\n                <nav className=\"navbar navbar-static-top p-0\" style={{zIndex: -1}}>\n                    <Link to={'#'} href=\"#\" className=\"sidebar-toggle\" data-toggle=\"push-menu\" role=\"button\"\n                          onClick={this.toggle} >\n                        <span className=\"sr-only\">Toggle navigation</span>\n                    </Link>\n                    <Dropdown alignRight>\n                        { this.props.isCallingApi ?\n                            <Spinner animation=\"border\" variant=\"danger\" size=\"sm\" />\n                            : ''}\n                        <Dropdown.Toggle id=\"dropdown-user-custom\">\n                            <i className=\"fa fa-cog mr-md-2\"> </i>\n                            <span className=\"d-none d-md-inline-block\">{this.props.authReducer.userInfo.name}({this.props.authReducer.userInfo.email})</span>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            <Dropdown.Item eventKey=\"1\" tag={Link} to={'#'} onClick={this.gotoChangePassword.bind(this)}>{messages['layout.link.changePassword']}</Dropdown.Item>\n                            {/*<Dropdown.Item eventKey=\"2\" tag={Link} to=\"#\">{messages['layout.link.2StepAuthenticationSetting']}</Dropdown.Item>*/}\n                            <Dropdown.Item eventKey=\"3\" tag={Link} to=\"#\" onClick={this.doLogout.bind(this)}>{messages['layout.link.logout']}</Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </nav>\n            </header>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.layoutReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, authActions)(Header));\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/auth/action\";\nimport siteConfig from \"../../configs/siteConfig\";\nimport moment from \"moment\";\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <footer className=\"main-footer\">\n               <div className=\"pull-right hidden-xs\">\n                   <b> {messages['layout.footer.version']} </b>\n                   {siteConfig.version}\n               </div>\n               <strong>\n                   <a href=\"tel: 0908229022\">S3</a> @\n                   <span className=\"hidden-xs\"> 2020 </span>\n                   CMS Tool\n               </strong>\n            </footer>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.layoutReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(Footer));\n","import React from 'react';\n\nconst ScreensDashboardIndex = () => (\n    <div className=\"content-wrapper dashboard\">\n        <section className=\"content-header\">\n            <h1>\n                Dashboard\n            </h1>\n        </section>\n        <section className=\"content\">\n            <div className=\"row\">\n                <div className=\"col-xs-9\">\n                    <div className=\"col-xs-12\">\n\n                    </div>\n                    <div className=\"col-xs-12\">\n\n                    </div>\n                </div>\n                <div className=\"col-xs-3\">\n\n                </div>\n            </div>\n        </section>\n    </div>\n); \n\nexport default ScreensDashboardIndex;\n","const userActions = {\n    USER_UPDATE_FILTER: \"USER_UPDATE_FILTER\",\n    USER_GET_LIST: \"USER_GET_LIST\",\n    USER_GET_LIST_SUCCESS: \"USER_GET_LIST_SUCCESS\",\n    USER_GET_LIST_FAILED: \"USER_GET_LIST_FAILED\",\n    USER_GET_DETAIL: \"USER_GET_DETAIL\",\n    USER_GET_DETAIL_SUCCESS: \"USER_GET_DETAIL_SUCCESS\",\n    USER_STATUS_SUCCESS: \"USER_STATUS_SUCCESS\",\n    USER_STATUS_FAILED: \"USER_STATUS_FAILED\",\n    USER_ADD: \"USER_ADD\",\n    USER_ADD_SUCCESS: \"USER_ADD_SUCCESS\",\n    USER_EDIT: \"USER_EDIT\",\n    USER_EDIT_SUCCESS: \"USER_EDIT_SUCCESS\",\n    USER_DELETE: \"USER_DELETE\",\n    USER_DELETE_SUCCESS: \"USER_DELETE_SUCCESS\",\n    USER_RESET_FORM_DATA: \"USER_RESET_FORM_DATA\",\n    USER_GET_ROLE_LIST: \"USER_GET_ROLE_LIST\",\n    USER_GET_ROLE_LIST_SUCCESS: \"USER_GET_ROLE_LIST_SUCCESS\",\n    USER_GET_ROLE_LIST_FAILED: \"USER_GET_ROLE_LIST_FAILED\",\n\n    updateFilter(filter) {\n        return {\n            type: userActions.USER_UPDATE_FILTER,\n            filter: filter\n        }\n    },\n    getList(filter) {\n        return {\n            type: userActions.USER_GET_LIST,\n            filter: filter\n        }\n    },\n    add(params) {\n        return {\n            type: userActions.USER_ADD,\n            params: params\n        }\n    },\n    edit(params) {\n        return {\n            type: userActions.USER_EDIT,\n            params: params\n        }\n    },\n    delete(params) {\n        return {\n            type: userActions.USER_DELETE,\n            params: params\n        }\n    },\n    getById(params) {\n        return {\n            type: userActions.USER_GET_DETAIL,\n            params: params\n        }\n    },\n    getRoleList(params) {\n        return {\n            type: userActions.USER_GET_ROLE_LIST,\n            params: params\n        }\n    },\n    resetFormData() {\n        return {\n            type: userActions.USER_RESET_FORM_DATA\n        }\n    },\n};\nexport default userActions;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport { useFormik } from 'formik';\nimport Form from \"react-bootstrap/Form\";\nimport {PAGE_USER_LIST} from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../Common/Spinner\";\n\nconst UserForm = (props) => {\n        const lang = props.languageSwitcher.languageMessages;\n        const { roleList, formData } = props;\n\n        let initialValues = {\n            id: formData.id,\n            name: formData.name,\n            email: formData.email,\n            password: formData.password !== undefined ? formData.password : '',\n            roles: formData.roles[0]\n        };\n        //convert null value to empty, else formik will not work\n        Object.keys(initialValues).forEach(key => {\n            if (initialValues[key] === undefined || initialValues[key] === null) {\n                initialValues[key] = '';\n            }\n        });\n\n        let formik = useFormik({\n            initialValues: initialValues,\n            enableReinitialize: true,\n            onSubmit: values => {\n                props.submitHandler(values);\n            },\n        });\n\n        return (\n            <div className=\"box box-primary\">\n                <SpinnerComponent show={props.isCallingApi}> </SpinnerComponent>\n                <Form onSubmit={formik.handleSubmit}>\n                    <div className=\"box-body\">\n                        <Tabs defaultActiveKey=\"home\">\n                            <Tab eventKey=\"home\" title=\"General\">\n                                <Form.Group>\n                                    <Form.Label>Tên</Form.Label>\n                                    <Form.Control\n                                        id=\"name\"\n                                        name=\"name\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Email</Form.Label>\n                                    <Form.Control\n                                        id=\"email\"\n                                        name=\"email\"\n                                        type=\"email\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.email}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Password</Form.Label>\n                                    <Form.Control\n                                        id=\"password\"\n                                        name=\"password\"\n                                        type=\"password\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.password}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"description\" title=\"Roles\">\n                                <Form.Group>\n                                    <Form.Label>Roles</Form.Label>\n                                    <Form.Control as=\"select\"\n                                                  id=\"roles\"\n                                                  name=\"roles\"\n                                                  onChange={formik.handleChange}\n                                                  value={formik.values.roles}>\n                                        <option value=\"0\">{lang['common.select.default']}</option>\n                                        { roleList.map(d => (\n                                            <option key={d.id} value={d.name}>{d.name}</option>\n                                        ))}\n                                    </Form.Control>\n                                </Form.Group>\n                            </Tab>\n                        </Tabs>\n                    </div>\n                    <div className=\"box-footer text-center\">\n                        <button type=\"submit\" className=\"btn btn-info\">{lang['layout.button.save']}</button>\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={(event) => {props.history.push(PAGE_USER_LIST)} }>{lang['layout.button.cancel']}</button>\n                    </div>\n                </Form>\n            </div>\n        );\n};\nconst mapStateToProps = (state) => ({\n    ...state.userReducer,\n    ...state.layoutReducer,\n    ...state\n});\nexport default withRouter(connect(mapStateToProps, {})(UserForm));\n","import { notification, message } from 'antd';\nimport React from \"react\";\nmessage.config({\n    top: 100,\n    duration: 2,\n    maxCount: 1,\n});\n\n\nclass Notification {\n    success(msg) {\n        // notification.success({\n        //     message: msg,\n        //     duration: 5,\n        // });\n        message.success(msg);\n    }\n    error(msg) {\n        let i = 0;\n        if (Array.isArray(msg)) {\n            // notification.error({\n            //     message: msg.map((item) => {\n            //         i++;\n            //         return (<div key={i}>{item}</div>);\n            //     }),\n            //     duration: 4,\n            // });\n            message.error(\n                msg.map((item) => {\n                    i++;\n                    return (<div key={i}>{item}</div>);\n                })\n            );\n        } else {\n            // notification.error({\n            //     message: msg,\n            //     duration: 4,\n            // });\n            message.error(msg);\n        }\n\n    }\n    warning(msg) {\n        // notification.warning({\n        //     message: msg,\n        //     duration: 4,\n        // });\n        message.warning(msg);\n    }\n    info(msg) {\n        // notification.info({\n        //     message: msg,\n        //     duration: 4,\n        // });\n        message.info(msg);\n    }\n}\n\nexport default new Notification();","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/user/action\";\nimport { withRouter } from 'react-router-dom';\nimport UserForm from './Form';\nimport notification from \"../../helpers/Notification\";\n\nclass UserAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.resetFormData();\n    }\n\n    onSubmit = values => {\n        if (!this.validate(values)) {\n            return;\n        }\n\n        const data = {\n            id: values.id,\n            name: values.name,\n            email: values.email,\n            password: values.password,\n            roles: values.roles,\n        };\n        //add user\n        this.props.add({\n            data: data\n        });\n    };\n\n    validate(values) {\n\n        let errors = [];\n        if (values.name === '') {\n            errors.push('Name is required');\n        }\n        if (values.email === '') {\n            errors.push('Email is required');\n        }\n        if (values.password === '') {\n            errors.push('Password is required');\n        }\n        if (values.roles === '') {\n            errors.push('Role is required');\n        }\n\n        if (errors.length > 0) {\n            notification.error(errors);\n            return false;\n        }\n        return true;\n    }\n\n    componentDidMount() {\n        this.props.getRoleList();\n    }\n\n    render() {\n        return (\n            <UserForm\n                submitHandler={this.onSubmit}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.userReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(UserAdd));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport actions from \"../../redux/user/action\";\nimport { Link, withRouter } from 'react-router-dom';\nimport { Breadcrumb } from \"react-bootstrap\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport * as PageUrls from '../../configs/PagesUrl';\nimport UserAdd from '../../components/User/Add';\n\nclass ScreensUserAdd extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_USER_LIST}>\n                            {messages['user.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['user.add.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <UserAdd />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensUserAdd));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport actions from \"../redux/user/action\";\nimport siteConfig from \"../configs/siteConfig\";\nimport { Pagination } from \"antd\";\nimport { Icon } from 'antd';\n\nclass Paginator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onChangeItemPerpageInternal = this.onChangeItemPerPageInternalFunc.bind(this);\n        this.onChangePageNumberInternal = this.onChangePageNumberInternalFunc.bind(this);\n        this.onTogglePopupFilter = this.onTogglePopupFilterFunc.bind(this);\n        this.onTypingSearch = this.onTypingSearch.bind(this);\n    }\n\n    onChangeItemPerPageInternalFunc(event) {\n        this.props.onChangeItemPerPage(parseInt(event.target.value));\n    }\n\n    onChangePageNumberInternalFunc(current, pageSize) {\n        this.props.onChangePageNumber(current);\n    }\n\n    onTogglePopupFilterFunc() {\n        this.props.onTogglePopupFilter();\n    }\n    onTypingSearch(e) {\n        this.props.onTypingSearch(e);\n    }\n    \n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { filterData } = this.props;\n\n        const filterDataCheck = {...filterData};\n        const filterStyle = {};\n        if (filterData !== undefined) {\n            //remove default params\n            delete filterDataCheck.page;\n            delete filterDataCheck.items_per_page;\n            delete filterDataCheck.per_page;\n            delete filterDataCheck.sort;\n            delete filterDataCheck.sort_by_column;\n            delete filterDataCheck.searchText;\n            let hasFilterData = false;\n            Object.entries(filterDataCheck).forEach(([key,value]) => {\n                if (value !== '' && value !== 0) {\n                    hasFilterData = true;\n                }\n            });\n            if (hasFilterData) {\n                filterStyle.color = 'red';\n            }\n        }\n\n        return (\n            <div className=\"row m-0\">\n                <div className=\"col-md-2 p-0 pr-md-2\">\n                    <div className=\"dataTables_length\">\n                        <label className=\"mb-0\">\n                            <select name=\"datatable_length\" className=\"form-control form-control-sm d-inline-block\" value={this.props.itemPerPage}\n                                onChange={this.onChangeItemPerpageInternal}>\n                                <option value=\"15\">15</option>\n                                <option value=\"25\">25</option>\n                                <option value=\"30\">30</option>\n                                <option value=\"50\">50</option>\n                                <option value=\"100\">100</option>\n                                <option value=\"999999999999\">All</option>\n                            </select>\n                            &nbsp;{messages['layout.filter.rowDisplay']}\n                        </label>\n                    </div>\n                </div>\n                <div className=\"col-md-4 p-0 pr-md-2\">\n                    <input placeholder={messages['layout.filter.find']}\n                           className=\"form-control\"\n                           autoComplete=\"off\"\n                           type=\"search\"\n                           value={filterData.searchText}\n                           onChange={(e) => this.onTypingSearch(e)}\n                    />\n                </div>\n                <div className=\"col-md-6 text-md-right p-0 pl-md-2 mt-2 mt-md-0\">\n                    <button onClick={this.onTogglePopupFilter} type=\"button\" className=\"btn btn-secondary btn-sm btn-filter\">\n                        <Icon type=\"filter\" />\n                        <span style={filterStyle}  className=\"d-inline-block align-middle ml-1\">\n                            {messages['layout.list.filter']}\n                        </span>\n                    </button>\n                    <div className=\"dataTables_paginate paging_simple_numbers d-inline-block align-middle ml-1\" id=\"example1_paginate\">\n                        <Pagination\n                            defaultCurrent={1}\n                            defaultPageSize={siteConfig.defaultItemPerPage}\n                            current={this.props.currentPage}\n                            total={this.props.total}\n                            pageSize={this.props.itemPerPage}\n                            showLessItems={true}\n                            onChange={this.onChangePageNumberInternal}\n                            showTotal={(total, range) => `${range[0]}-${range[1]} of ${total}`}\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => ({\n    ...state,\n});\n\nexport default connect(mapStateToProps, actions)(Paginator);","import React from 'react';\nimport { connect } from \"react-redux\";\nimport actions from \"../../../redux/user/action\";\nimport moment from 'moment';\nimport { DatePicker } from 'antd';\nimport { Icon } from 'antd';\nimport { Modal } from 'react-bootstrap';\n\nconst { RangePicker } = DatePicker;\n\nfunction onChange(value, dateString) {\n  console.log('Selected Time: ', value);\n  console.log('Formatted Selected Time: ', dateString);\n}\n\nclass Filter extends React.Component {\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props) {\n        super(props);\n    }\n\n    handleChangeParamsInternal(event) {\n        const key = event.target.name;\n        const value = event.target.value;\n\n        this.props.updateFilter({\n            ...this.props.filter,\n            [key]: value\n        });\n    }\n\n    handleDiscardsFilterButton() {\n        this.props.onApplyFilter({\n            username: '',\n            user_group: '',\n            drm: ''\n        });\n    }\n\n    handleApplyFilterButton() {\n        this.props.onApplyFilter({});\n    }\n\n    render() {\n        const lang = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <Modal\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                show={this.props.show}\n                onHide={this.props.closePopup}\n                className=\"popup_inner popup_inner_filter\"\n            >\n                <Modal.Header closeButton className=\"box-header-filter\">\n                    <Modal.Title id=\"contained-modal-title-vcenter\" className=\"box-title-filter\">\n                        Filter Params\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form className=\"form-horizontal\">\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"user\" className=\"col-md-3 control-label\">Search 1</label>\n                            <div className=\"col-md-9\">\n                                <input type=\"text\" className=\"form-control \"\n                                    onChange={this.handleChangeParamsInternal.bind(this)}\n                                       id=\"user\" name=\"username\" placeholder=\"Enter any chars to search\" />\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"user_group\" className=\"col-sm-3 control-label\">Type</label>\n                            <div className=\"col-sm-9\">\n                                <select className=\"form-control\" id=\"user_group\" name=\"user_group\" onChange={this.handleChangeParamsInternal.bind(this)}>\n                                    <option value=\"\">Choose</option>\n                                    <option value=\"master\">Sample 1</option>\n                                    <option value=\"dev\">Sample 2</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"\" className=\"col-sm-3 control-label\">Notified at</label>\n                            <div className=\"col-sm-9 text noti-preset-edit-datepicker\">\n                                <RangePicker\n                                    ranges={{\n                                        Today: [moment(), moment()],\n                                        'This Month': [moment().startOf('month'), moment().endOf('month')],\n                                    }}\n                                    showTime\n                                    format=\"YYYY/MM/DD HH:mm:ss\"\n                                    onChange={onChange}\n                                />\n                            </div>\n                        </div>\n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button onClick={this.handleDiscardsFilterButton.bind(this)} type=\"button\" className=\"btn btn-secondary\">\n                        <i className=\"fa fa-times mr-1\"> </i>\n                        {lang['layout.button.discardFilter']}\n                    </button>\n                    <button type=\"button\" className=\"btn btn-primary ml-1\" onClick={this.handleApplyFilterButton.bind(this)}>\n                        <i className=\"fa fa-check mr-1\"> </i>\n                        {lang['layout.button.applyFilter']}\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n}\nconst mapStateToProps = (state) => ({\n    ...state,\n});\n\nexport default connect(mapStateToProps, actions)(Filter);","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport actions from '../../redux/user/action';\nimport {withRouter} from 'react-router-dom';\nimport Paginator from \"../../common/Paginator\";\nimport Filter from \"./Popup/Filter\";\nimport {Table} from 'react-bootstrap';\nimport {PAGE_USER_ADD, PAGE_USER_DELETE, PAGE_USER_EDIT} from \"../../configs/PagesUrl\";\n\nclass UserList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showPopupFilter: false,\n        };\n        this.onChangePageNumber = this.handlePaging.bind(this);\n        this.onChangeItemPerPage = this.handleItemPerPage.bind(this);\n        this.onApplyFilter = this.handleFilter.bind(this);\n    }\n\n    togglePopupFilter() {\n        this.setState({\n            showPopupFilter: !this.state.showPopupFilter\n        });\n    }\n\n    componentDidMount() {\n        this.props.getList({\n            ...this.props.filter\n        });\n    }\n\n    async handlePaging(pageNumber) {\n        //update filter first, so paging number can changed\n        await this.props.updateFilter({\n            ...this.props.filter,\n            page: pageNumber\n        });\n        await this.getList();\n    }\n\n    async handleItemPerPage(itemPerPage) {\n        //update filter first, so paging number can changed\n        //change item per page must reset page to 1\n        await this.props.updateFilter({\n            ...this.props.filter,\n            per_page: itemPerPage,\n            page: 1\n        });\n        await this.getList();\n    }\n\n    async handleFilter(params) {\n        this.setState({showPopupFilter: false}, async () => {\n            //update filter first, so paging number can changed\n            //change item per page must reset page to 1\n            await this.props.updateFilter({\n                ...this.props.filter,\n                ...params,\n                page: 1\n            });\n            await this.getList();\n        });\n    }\n\n    getList() {\n        this.props.getList(this.props.filter);\n    }\n\n\n    renderList(listData) {\n        if (listData === undefined || listData.items === undefined) return;\n        console.log(listData.items);\n\n        return listData.items.map((row) => {\n            return (\n                <tr key={row.id}>\n                    <td>{row.email}</td>\n                    <td>{row.roles}</td>\n                    <td className=\"text-nowrap text-center\">\n                        <span className=\"action-link ml-1\">\n                            <Link to={PAGE_USER_EDIT + '/' + row.id} className=\"btn btn-sm btn-success\">\n                                <i className=\"fa fa-pencil\"> </i>\n                            </Link>\n                        </span>\n                        { row.id != this.props.authReducer.userInfo.id ?\n                        <span className=\"action-link ml-1\">\n                            <Link to={PAGE_USER_DELETE+ '/' + row.id} className=\"btn btn-sm btn-danger\">\n                                <i className=\"fa fa-trash\"> </i>\n                            </Link>\n                        </span> : ''}\n                    </td>\n                </tr>\n            );\n        });\n    }\n\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n\n        return (\n\n\n            <div className=\"box\">\n                <div className=\"box-header with-border\">\n                    <h3 className=\"box-title\">{messages['user.list.title']}</h3>\n                    <div className=\"float-md-right mt-2 mt-md-0\">\n                        <button type=\"button\" className=\"btn btn-secondary btn-sm ml-1\"\n                        >{messages['layout.button.export']}\n                        </button>\n                        <Link to={PAGE_USER_ADD}>\n                            <button type=\"button\"\n                                    className=\"btn btn-primary btn-sm ml-1\">{messages['layout.button.register']}</button>\n                        </Link>\n                    </div>\n                </div>\n                <div className=\"box-body\">\n                    <div className=\"datatable_container\">\n                        <Paginator\n                            total={this.props.listData.total}\n                            itemPerPage={this.props.filter.per_page}\n                            currentPage={this.props.filter.page}\n                            onChangePageNumber={this.onChangePageNumber}\n                            onChangeItemPerPage={this.onChangeItemPerPage}\n                            onTogglePopupFilter={this.togglePopupFilter.bind(this)}\n                            filterData={this.props.filter}\n                        />\n                        <div className=\"row m-0 my-2\">\n                            <div className=\"col-sm-12 p-0\">\n                                <Table bordered hover responsive size=\"sm\"\n                                       className=\"table-custom mb-0\">\n                                    <thead>\n                                    <tr>\n                                        <th>Email</th>\n                                        <th>Role</th>\n                                        <th style={{width: '100px'}} rowSpan={2}>{messages['layout.column.action']}</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    {this.renderList(this.props.listData)}\n                                    </tbody>\n                                </Table>\n                            </div>\n                        </div>\n                        <div className=\"block-paging-bottom\">\n                            <Paginator\n                                total={this.props.listData.total}\n                                itemPerPage={this.props.filter.per_page}\n                                currentPage={this.props.filter.page}\n                                onChangePageNumber={this.onChangePageNumber}\n                                onChangeItemPerPage={this.onChangeItemPerPage}\n                                filterData={this.props.filter}\n                            />\n                        </div>\n                    </div>\n                </div>\n                {this.state.showPopupFilter ?\n                    <Filter\n                        show={this.state.showPopupFilter}\n                        closePopup={this.togglePopupFilter.bind(this)}\n                        onApplyFilter={this.onApplyFilter}\n                    />\n                    : null\n                }\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.userReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(UserList));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport UserList from '../../components/User/List';\nimport actions from \"../../redux/auth/action\";\nimport { withRouter } from 'react-router-dom';\n\nclass ScreensUserList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <h1>\n                        {messages['user.title']}\n                    </h1>\n                </section>\n                <section className=\"content\">\n                    <div className=\"row m-0\">\n                        <div className=\"col-12 p-0\">\n                            <UserList />\n                        </div>\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps,actions)(ScreensUserList));\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/user/action\";\nimport { withRouter } from 'react-router-dom';\nimport UserForm from './Form';\nimport notification from \"../../helpers/Notification\";\n\nclass UserEdit extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.resetFormData();\n    }\n\n    onSubmit = values => {\n        if (!this.validate(values)) {\n            return;\n        }\n\n        const data = {\n            id: values.id,\n            name: values.name,\n            email: values.email,\n            password: values.password,\n            roles: values.roles,\n        };\n        //update user\n        this.props.edit({\n            data: data\n        });\n    };\n\n    validate(values) {\n\n        if (values.id === '') {\n            notification.error('Record does not exist');\n            return false;\n        }\n\n        let errors = [];\n        if (values.name === '') {\n            errors.push('Name is required');\n        }\n        if (values.email === '') {\n            errors.push('Email is required');\n        }\n        if (values.roles === '') {\n            errors.push('Role is required');\n        }\n\n        if (errors.length > 0) {\n            notification.error(errors);\n            return false;\n        }\n        return true;\n    }\n\n    componentDidMount() {\n        this.props.getById(this.props.match.params.userId);\n        this.props.getRoleList();\n    }\n\n    render() {\n        return (\n            <UserForm\n                submitHandler={this.onSubmit}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.userReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(UserEdit));\n","import React from 'react';\nimport {Breadcrumb} from \"react-bootstrap\";\nimport * as PageUrls from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport { withRouter } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/user/action\";\nimport UserEdit from \"../../components/User/Edit\";\n\nclass ScreensUserEdit extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_ROOM_FACILITY_LIST}>\n                            {messages['user.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['user.edit.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <UserEdit />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensUserEdit));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport { useFormik } from 'formik';\nimport Form from \"react-bootstrap/Form\";\nimport {PAGE_USER_LIST, PAGE_ROOM_FACILITY_LIST} from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../Common/Spinner\";\n\nconst UserFormDetails = (props) => {\n    const lang = props.languageSwitcher.languageMessages;\n    const { roleList, formData } = props;\n\n    let initialValues = {\n        id: formData.id,\n        name: formData.name,\n        email: formData.email,\n        password: formData.password !== undefined ? formData.password : '',\n        roles: formData.roles[0]\n    };\n    //convert null value to empty, else formik will not work\n    Object.keys(initialValues).forEach(key => {\n        if (initialValues[key] === undefined || initialValues[key] === null) {\n            initialValues[key] = '';\n        }\n    });\n\n    let formik = useFormik({\n        initialValues: initialValues,\n        enableReinitialize: true,\n        onSubmit: values => {\n            props.submitHandler(values);\n        },\n    });\n\n    return (\n        <div className=\"box box-primary\">\n            <SpinnerComponent show={props.isCallingApi}> </SpinnerComponent>\n            <Form onSubmit={formik.handleSubmit}>\n                <div className=\"box-body\">\n                    <Tabs defaultActiveKey=\"home\">\n                        <Tab eventKey=\"home\" title=\"General\">\n                            <Form.Group>\n                                <Form.Label>Tên</Form.Label>\n                                <Form.Control disabled\n                                    id=\"name\"\n                                    name=\"name\"\n                                    type=\"text\"\n                                    onChange={formik.handleChange}\n                                    value={formik.values.name}\n                                />\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control disabled\n                                    id=\"email\"\n                                    name=\"email\"\n                                    type=\"email\"\n                                    onChange={formik.handleChange}\n                                    value={formik.values.email}\n                                />\n                            </Form.Group>\n                        </Tab>\n                        <Tab eventKey=\"description\" title=\"Roles\">\n                            <Form.Group>\n                                <Form.Label>Roles</Form.Label>\n                                <Form.Control as=\"select\" disabled\n                                              id=\"roles\"\n                                              name=\"roles\"\n                                              onChange={formik.handleChange}\n                                              value={formik.values.roles}>\n                                    <option value=\"0\">{lang['common.select.default']}</option>\n                                    { roleList.map(d => (\n                                        <option key={d.id} value={d.name}>{d.name}</option>\n                                    ))}\n                                </Form.Control>\n                            </Form.Group>\n                        </Tab>\n                    </Tabs>\n                </div>\n                <div className=\"box-footer text-center\">\n                    <button type=\"submit\" className=\"btn btn-info\">{lang['layout.button.delete']}</button>\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={(event) => {props.history.push(PAGE_USER_LIST)} }>{lang['layout.button.cancel']}</button>\n                </div>\n            </Form>\n        </div>\n    );\n};\nconst mapStateToProps = (state) => ({\n    ...state.userReducer,\n    ...state.layoutReducer,\n    ...state\n});\nexport default withRouter(connect(mapStateToProps, {})(UserFormDetails));\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/user/action\";\nimport { withRouter } from 'react-router-dom';\nimport UserFormDetails from './FormDetails';\n\nclass UserDelete extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.resetFormData();\n    }\n\n    onSubmit = values => {\n        this.props.delete(values.id);\n    };\n\n    componentDidMount() {\n        this.props.getById(this.props.match.params.userId);\n        this.props.getRoleList();\n    }\n\n    render() {\n\n        const lang = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <React.Fragment>\n                <p>{lang['message.confirmDelete']}</p>\n                <UserFormDetails\n                    submitHandler={this.onSubmit}\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.userReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(UserDelete));\n","import React from 'react';\nimport {Breadcrumb} from \"react-bootstrap\";\nimport * as PageUrls from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport { withRouter } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/user/action\";\nimport UserDelete from \"../../components/User/Delete\";\n\nclass ScreensUserDelete extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_USER_LIST}>\n                            {messages['user.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['user.delete.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <UserDelete />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensUserDelete));\n","import React from 'react';\n\nclass UserDetails extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.id,\n            userPost: {}\n        };\n    }\n\n    componentDidMount() {\n\n    }\n\n    render() {\n        return (\n            <div className=\"box-body\">\n                <div className=\"row\">\n                    <div className=\"col-sm-5\">\n                        <div className=\"table-responsive\">\n                            <table className=\"table table-hover\">\n                                <thead></thead>\n                                <tbody>\n                                <tr>\n                                    <td width=\"160\">ID</td>\n                                    <td>{this.state.id}</td>\n                                </tr>\n                                <tr>\n                                    <td>利用者名</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>利用者グループ</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>DRMオプション</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>サービス開始日</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>サービス停止</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>退会予定月末</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>停止区分</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>備考欄</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>更新日時</td>\n                                    <td></td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-offset-1 col-sm-5\">\n                        <div className=\"table-responsive\">\n                            <table className=\"table table-hover\">\n                                <thead></thead>\n                                <tbody>\n                                <tr>\n                                    <td width=\"160\">顧客コード</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>契約コード</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>販売区分</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>支払区分</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>担当者氏名</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>メールアドレス</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>電話番号</td>\n                                    <td></td>\n                                </tr>\n                                <tr>\n                                    <td>録画データ量制限</td>\n                                    <td></td>\n                                </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"form-group\">\n                        <div className=\"col-sm-12\">\n                            <button type=\"button\" className=\"btn btn-success\">編集</button>\n                            <button type=\"button\" className=\"btn btn-danger\">削除</button>\n                            <button type=\"button\" className=\"btn btn-primary\">オプション</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default UserDetails;","import React from 'react';\nimport UserDetails from '../../components/User/Details';\n\nclass ScreensUserDetails extends React.Component {\n    render() {\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <h1>\n                        利用者管理asdfasdf\n                    </h1>\n                </section>\n                <section className=\"content\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"box box-primary\">\n                                <div className=\"box-header\">\n                                    <h3 className=\"box-title\">利用者詳細</h3>\n                                </div>\n                                <UserDetails id={this.props.match.params.userId} />\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}\n\nexport default ScreensUserDetails;","const categoryActions = {\n    CATEGORY_UPDATE_FILTER: \"CATEGORY_UPDATE_FILTER\",\n    CATEGORY_GET_LIST: \"CATEGORY_GET_LIST\",\n    CATEGORY_GET_LIST_SUCCESS: \"CATEGORY_GET_LIST_SUCCESS\",\n    CATEGORY_GET_LIST_FAILED: \"CATEGORY_GET_LIST_FAILED\",\n    CATEGORY_GET_DETAIL: \"CATEGORY_GET_DETAIL\",\n    CATEGORY_GET_DETAIL_SUCCESS: \"CATEGORY_GET_DETAIL_SUCCESS\",\n    CATEGORY_GET_DETAIL_FAILED: \"CATEGORY_GET_DETAIL_FAILED\",\n    CATEGORY_STATUS_SUCCESS: \"CATEGORY_STATUS_SUCCESS\",\n    CATEGORY_STATUS_FAILED: \"CATEGORY_STATUS_FAILED\",\n    CATEGORY_ADD: \"CATEGORY_ADD\",\n    CATEGORY_ADD_SUCCESS: \"CATEGORY_ADD_SUCCESS\",\n    CATEGORY_EDIT: \"CATEGORY_EDIT\",\n    CATEGORY_EDIT_SUCCESS: \"CATEGORY_EDIT_SUCCESS\",\n    CATEGORY_DELETE: \"CATEGORY_DELETE\",\n    CATEGORY_DELETE_SUCCESS: \"CATEGORY_DELETE_SUCCESS\",\n    CATEGORY_DELETE_FAILED: \"CATEGORY_DELETE_FAILED\",\n    CATEGORY_RESET_FORM_DATA: \"CATEGORY_RESET_FORM_DATA\",\n    CATEGORY_GET_LIST_GROUP: \"CATEGORY_GET_LIST_GROUP\",\n    CATEGORY_GET_LIST_GROUP_SUCCESS: \"CATEGORY_GET_LIST_GROUP_SUCCESS\",\n\n    updateFilter(filter) {\n        return {\n            type: categoryActions.CATEGORY_UPDATE_FILTER,\n            filter: filter\n        }\n    },\n    getList(filter) {\n        return {\n            type: categoryActions.CATEGORY_GET_LIST,\n            filter: filter\n        }\n    },\n    getById(params) {\n        return {\n            type: categoryActions.CATEGORY_GET_DETAIL,\n            params: params\n        }\n    },\n    add(params) {\n        return {\n            type: categoryActions.CATEGORY_ADD,\n            params: params\n        }\n    },\n    edit(params) {\n        return {\n            type: categoryActions.CATEGORY_EDIT,\n            params: params\n        }\n    },\n    delete(params) {\n        return {\n            type: categoryActions.CATEGORY_DELETE,\n            params: params\n        }\n    },\n    getListGroup() {\n        return {\n            type: categoryActions.CATEGORY_GET_LIST_GROUP\n        }\n    },\n    resetFormData() {\n        return {\n            type: categoryActions.CATEGORY_RESET_FORM_DATA\n        }\n    },\n};\nexport default categoryActions;","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Modal } from 'react-bootstrap';\n\nclass Filter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleApplyFilterButton = this.applyFilter.bind(this);\n        this.handleDiscardsFilterButton = this.discardFilter.bind(this);\n        this.changeSearchText = this.changeSearchTextFunc.bind(this);\n\n        //need same param name in reducer.filter which we want override\n        this.state = {\n            ...this.props.filter\n        };\n    }\n    applyFilter() {\n        //simple clone value of state pass back to parent callback\n        this.props.onApplyFilter({...this.state});\n    }\n    discardFilter() {\n        //discard meaning reset all state params\n        this.setState({ s: ''}, () => {\n            //simple clone value of state pass back to parent callback\n            this.props.onApplyFilter({...this.state});\n        })\n    }\n    changeSearchTextFunc(e) {\n        this.setState({ s: e.target.value});\n    }\n\n    render() {\n\n        const lang = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <Modal\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                show={this.props.show}\n                onHide={this.props.closePopup}\n                className=\"popup_inner popup_inner_filter\"\n            >\n                <Modal.Header closeButton className=\"box-header-filter\">\n                    <Modal.Title id=\"contained-modal-title-vcenter\" className=\"box-title-filter\">\n                        {lang['layout.title.filterList']}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form className=\"form-horizontal\">\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"user\" className=\"col-md-3 control-label\">Tìm theo tên</label>\n                            <div className=\"col-md-9\">\n                                <input type=\"text\" className=\"form-control\"\n                                       value={this.state.s}\n                                       onChange={this.changeSearchText}\n                                       id=\"s\" name=\"s\" placeholder=\"Enter any chars to search\" />\n                            </div>\n                        </div>\n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={this.handleDiscardsFilterButton} >\n                        <i className=\"fa fa-times mr-1\"> </i>\n                        {lang['layout.button.discardFilter']}\n                    </button>\n                    <button type=\"button\" className=\"btn btn-primary ml-1\" onClick={this.handleApplyFilterButton} >\n                        <i className=\"fa fa-check mr-1\"> </i>\n                        {lang['layout.button.applyFilter']}\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n}\nconst mapStateToProps = (state) => ({\n    ...state.categoryReducer,\n    ...state,\n});\n\nexport default connect(mapStateToProps, {})(Filter);","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport actions from '../../redux/category/action';\nimport {withRouter} from 'react-router-dom';\nimport Paginator from \"../../common/Paginator\";\nimport Filter from \"./Popup/Filter\";\nimport {Table} from 'react-bootstrap';\nimport {PAGE_CATEGORY_ADD, PAGE_CATEGORY_DELETE, PAGE_CATEGORY_EDIT} from \"../../configs/PagesUrl\";\n\nclass CategoryList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showPopupFilter: false,\n        };\n        this.onChangePageNumber = this.handlePaging.bind(this);\n        this.onChangeItemPerPage = this.handleItemPerPage.bind(this);\n        this.onApplyFilter = this.handleFilter.bind(this);\n    }\n\n    togglePopupFilter() {\n        this.setState({\n            showPopupFilter: !this.state.showPopupFilter\n        });\n    }\n\n    componentDidMount() {\n        this.props.getList({\n            ...this.props.filter\n        });\n    }\n\n    async handlePaging(pageNumber) {\n        //update filter first, so paging number can changed\n        await this.props.updateFilter({\n            ...this.props.filter,\n            page: pageNumber\n        });\n        await this.getList();\n    }\n\n    async handleItemPerPage(itemPerPage) {\n        //update filter first, so paging number can changed\n        //change item per page must reset page to 1\n        await this.props.updateFilter({\n            ...this.props.filter,\n            per_page: itemPerPage,\n            page: 1\n        });\n        await this.getList();\n    }\n\n    async handleFilter(params) {\n        this.setState({showPopupFilter: false}, async () => {\n            //update filter first, so paging number can changed\n            //change item per page must reset page to 1\n            await this.props.updateFilter({\n                ...this.props.filter,\n                ...params,\n                page: 1\n            });\n            await this.getList();\n        });\n    }\n\n    getList() {\n        this.props.getList(this.props.filter);\n    }\n\n\n    renderList(listData) {\n        if (listData === undefined || listData.items === undefined) return;\n        console.log(listData.items);\n\n        return listData.items.map((row) => {\n            return (\n                <tr key={row.id}>\n                    <td>{row.name.en}</td>\n                    <td>{row.name.vi}</td>\n                    <td>{row.name.jp.kanji}</td>\n                    <td>{row.name.jp.romaji}</td>\n                    <td>{row.description.en}</td>\n                    <td>{row.description.vi}</td>\n                    <td>{row.description.jp.kanji}</td>\n                    <td>{row.description.jp.romaji}</td>\n                    <td className=\"text-nowrap text-center\">\n                        <span className=\"action-link ml-1\">\n                            <Link to={PAGE_CATEGORY_EDIT + '/' + row.id} className=\"btn btn-sm btn-success\">\n                                <i className=\"fa fa-pencil\"> </i>\n                            </Link>\n                        </span>\n                        <span className=\"action-link ml-1\">\n                            <Link to={PAGE_CATEGORY_DELETE+ '/' + row.id} className=\"btn btn-sm btn-danger\">\n                                <i className=\"fa fa-trash\"> </i>\n                            </Link>\n                        </span>\n                    </td>\n                </tr>\n            );\n        });\n    }\n\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n\n        return (\n\n\n            <div className=\"box\">\n                <div className=\"box-header with-border\">\n                    <h3 className=\"box-title\">{messages['group.list.title']}</h3>\n                    <div className=\"float-md-right mt-2 mt-md-0\">\n                        <button type=\"button\" className=\"btn btn-secondary btn-sm ml-1\"\n                                >{messages['layout.button.export']}\n                        </button>\n                        <Link to={PAGE_CATEGORY_ADD}>\n                            <button type=\"button\"\n                                    className=\"btn btn-primary btn-sm ml-1\">{messages['layout.button.register']}</button>\n                        </Link>\n                    </div>\n                </div>\n                <div className=\"box-body\">\n                    <div className=\"datatable_container\">\n                        <Paginator\n                            total={this.props.listData.total}\n                            itemPerPage={this.props.filter.per_page}\n                            currentPage={this.props.filter.page}\n                            onChangePageNumber={this.onChangePageNumber}\n                            onChangeItemPerPage={this.onChangeItemPerPage}\n                            onTogglePopupFilter={this.togglePopupFilter.bind(this)}\n                            filterData={this.props.filter}\n                        />\n                        <div className=\"row m-0 my-2\">\n                            <div className=\"col-sm-12 p-0\">\n                                <Table bordered hover responsive size=\"sm\"\n                                       className=\"table-custom mb-0\">\n                                    <thead>\n                                    <tr>\n                                        <th colSpan={4}>Tên</th>\n                                        <th colSpan={4}>Mô tả chi tiết</th>\n\n\n                                        <th style={{width: '100px'}} rowSpan={2}>{messages['layout.column.action']}</th>\n                                    </tr>\n                                    <tr>\n                                        <th>En</th>\n                                        <th>Vi</th>\n                                        <th>Jp - Kanji</th>\n                                        <th>Jp - Romanji</th>\n                                        <th>En</th>\n                                        <th>Vi</th>\n                                        <th>Jp - Kanji</th>\n                                        <th>Jp - Romanji</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    {this.renderList(this.props.listData)}\n                                    </tbody>\n                                </Table>\n                            </div>\n                        </div>\n                        <div className=\"block-paging-bottom\">\n                            <Paginator\n                                total={this.props.listData.total}\n                                itemPerPage={this.props.filter.per_page}\n                                currentPage={this.props.filter.page}\n                                onChangePageNumber={this.onChangePageNumber}\n                                onChangeItemPerPage={this.onChangeItemPerPage}\n                                filterData={this.props.filter}\n                            />\n                        </div>\n                    </div>\n                </div>\n                {this.state.showPopupFilter ?\n                    <Filter\n                        show={this.state.showPopupFilter}\n                        closePopup={this.togglePopupFilter.bind(this)}\n                        onApplyFilter={this.onApplyFilter}\n                    />\n                    : null\n                }\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.categoryReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(CategoryList));","import React from 'react';\nimport { connect } from \"react-redux\";\nimport CategoryList from '../../components/Category/List';\nimport actions from \"../../redux/auth/action\";\nimport { withRouter } from 'react-router-dom';\n\nclass ScreensCategoryList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <h1>\n                        {messages['category.title']}\n                    </h1>\n                </section>\n                <section className=\"content\">\n                    <div className=\"row m-0\">\n                        <div className=\"col-12 p-0\">\n                            <CategoryList />\n                        </div>\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps,actions)(ScreensCategoryList));","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport { useFormik } from 'formik';\nimport Form from \"react-bootstrap/Form\";\nimport {PAGE_CATEGORY_LIST} from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../Common/Spinner\";\n\nconst CategoryForm = (props) => {\n        const lang = props.languageSwitcher.languageMessages;\n        const { listGroup, formData } = props;\n\n        let initialValues = {\n            id: formData.id,\n            code: formData.code,\n            name_en: formData.name.en,\n            name_vi: formData.name.vi,\n            name_jp_kanji: formData.name.jp.kanji,\n            name_jp_romaji: formData.name.jp.romaji,\n            description_en: formData.description.en,\n            description_vi: formData.description.vi,\n            description_jp_kanji: formData.description.jp.kanji,\n            description_jp_romaji: formData.description.jp.romaji,\n            group_id: formData.group_id,\n        };\n        //convert null value to empty, else formik will not work\n        Object.keys(initialValues).forEach(key => {\n            if (initialValues[key] === undefined || initialValues[key] === null) {\n                initialValues[key] = '';\n            }\n        });\n\n        let formik = useFormik({\n            initialValues: initialValues,\n            enableReinitialize: true,\n            onSubmit: values => {\n                props.submitHandler(values);\n            },\n        });\n\n        return (\n            <div className=\"box box-primary\">\n                <SpinnerComponent show={props.isCallingApi}> </SpinnerComponent>\n                <Form onSubmit={formik.handleSubmit}>\n                    <div className=\"box-body\">\n                        <Tabs defaultActiveKey=\"general\">\n                            <Tab eventKey=\"general\" title=\"General\">\n                                <Form.Group>\n                                    <Form.Label>Code</Form.Label>\n                                    <Form.Control\n                                        id=\"code\"\n                                        name=\"code\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.code}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Group</Form.Label>\n                                    <Form.Control as=\"select\"\n                                                  id=\"group_id\"\n                                                  name=\"group_id\"\n                                                  onChange={formik.handleChange}\n                                                  value={formik.values.group_id}>\n                                        <option value=\"0\">{lang['common.select.default']}</option>\n                                        {listGroup.map(d => (\n                                            <option key={d.id} value={d.id}>{d.name.vi} - {d.name.en} - {d.name.jp.kanji} - {d.name.jp.romaji}</option>\n                                        ))}\n                                    </Form.Control>\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"home\" title=\"Tên\">\n                                <Form.Group>\n                                    <Form.Label>Vi</Form.Label>\n                                    <Form.Control\n                                        id=\"name_vi\"\n                                        name=\"name_vi\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_vi}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>En</Form.Label>\n                                    <Form.Control\n                                        id=\"name_en\"\n                                        name=\"name_en\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_en}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Jp Kanji</Form.Label>\n                                    <Form.Control\n                                        id=\"name_jp_kanji\"\n                                        name=\"name_jp_kanji\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_jp_kanji}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Jp Romaji</Form.Label>\n                                    <Form.Control\n                                        id=\"name_jp_romaji\"\n                                        name=\"name_jp_romaji\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_jp_romaji}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"description\" title=\"Mô tả chi tiết\">\n                                <Form.Group>\n                                    <Form.Label>Vi</Form.Label>\n                                    <Form.Control\n                                        id=\"description_vi\"\n                                        name=\"description_vi\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.description_vi}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>En</Form.Label>\n                                    <Form.Control\n                                        id=\"description_en\"\n                                        name=\"description_en\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.description_en}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Jp Kanji</Form.Label>\n                                    <Form.Control\n                                        id=\"description_jp_kanji\"\n                                        name=\"description_jp_kanji\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.description_jp_kanji}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Jp Romaji</Form.Label>\n                                    <Form.Control\n                                        id=\"description_jp_romaji\"\n                                        name=\"description_jp_romaji\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.description_jp_romaji}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                        </Tabs>\n                    </div>\n                    <div className=\"box-footer text-center\">\n                        <button type=\"submit\" className=\"btn btn-info\">{lang['layout.button.save']}</button>\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={(event) => {props.history.push(PAGE_CATEGORY_LIST)} }>{lang['layout.button.cancel']}</button>\n                    </div>\n                </Form>\n            </div>\n        );\n};\nconst mapStateToProps = (state) => ({\n    ...state.categoryReducer,\n    ...state.layoutReducer,\n    ...state\n});\nexport default withRouter(connect(mapStateToProps, {})(CategoryForm));","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/category/action\";\nimport { withRouter } from 'react-router-dom';\nimport CategoryForm from './Form';\nimport notification from \"../../helpers/Notification\";\n\nclass CategoryAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.resetFormData();\n    }\n\n    onSubmit = values => {\n        if (!this.validate(values)) {\n            return;\n        }\n\n        const data = {\n            id: values.id,\n            code: values.code,\n            name: {\n                vi: values.name_vi,\n                en: values.name_en,\n                jp: {\n                    kanji: values.name_jp_kanji,\n                    romaji: values.name_jp_romaji\n                }\n            },\n            description: {\n                vi: values.description_vi,\n                en: values.description_en,\n                jp: {\n                    kanji: values.description_jp_kanji,\n                    romaji: values.description_jp_romaji\n                }\n            },\n            group_id: values.group_id\n        };\n        //add category\n        this.props.add({\n            data: data\n        });\n    };\n\n    validate(values) {\n\n        let errors = [];\n\n        if (values.code === '') {\n            errors.push('Code is required');\n        }\n\n        if (values.name_vi === '' && values.name_en === '' && values.name_jp_kanji === '' && values.name_jp_romaji === '') {\n            errors.push('Vui lòng nhập Tên');\n        }\n\n        if (errors.length > 0) {\n            notification.error(errors);\n            return false;\n        }\n        return true;\n    }\n\n    componentDidMount() {\n        this.props.getListGroup();\n    }\n\n    render() {\n        return (\n            <CategoryForm\n                submitHandler={this.onSubmit}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.categoryReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(CategoryAdd));"," import React from 'react';\nimport { connect } from \"react-redux\";\nimport actions from \"../../redux/category/action\";\nimport { Link, withRouter } from 'react-router-dom';\nimport { Breadcrumb } from \"react-bootstrap\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport * as PageUrls from '../../configs/PagesUrl';\nimport CategoryAdd from '../../components/Category/Add';\n\nclass ScreensCaterogyAdd extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_CATEGORY_LIST}>\n                            {messages['category.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['category.add.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <CategoryAdd />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensCaterogyAdd));","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/category/action\";\nimport { withRouter } from 'react-router-dom';\nimport CategoryForm from './Form';\nimport notification from \"../../helpers/Notification\";\n\nclass CategoryEdit extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.resetFormData();\n    }\n\n    onSubmit = values => {\n        if (!this.validate(values)) {\n            return;\n        }\n\n        const data = {\n            id: values.id,\n            code: values.code,\n            name: {\n                vi: values.name_vi,\n                en: values.name_en,\n                jp: {\n                    kanji: values.name_jp_kanji,\n                    romaji: values.name_jp_romaji\n                }\n            },\n            description: {\n                vi: values.description_vi,\n                en: values.description_en,\n                jp: {\n                    kanji: values.description_jp_kanji,\n                    romaji: values.description_jp_romaji\n                }\n            },\n            group_id: values.group_id\n        };\n        //add category\n        this.props.edit({\n            data: data\n        });\n    };\n\n    validate(values) {\n\n        if (values.id === '') {\n            notification.error('Record does not exist');\n            return false;\n        }\n\n        let errors = [];\n        if (values.code === '') {\n            errors.push('Code is required');\n        }\n\n        if (values.name_vi === '' && values.name_en === '' && values.name_jp_kanji === '' && values.name_jp_romaji === '') {\n            errors.push('Vui lòng nhập Tên');\n        }\n\n        if (errors.length > 0) {\n            notification.error(errors);\n            return false;\n        }\n        return true;\n    }\n\n    componentDidMount() {\n        this.props.getListGroup();\n        this.props.getById(this.props.match.params.categoryId);\n    }\n\n    render() {\n        return (\n            <CategoryForm\n                submitHandler={this.onSubmit}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.categoryReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(CategoryEdit));","import React from 'react';\nimport {Breadcrumb} from \"react-bootstrap\";\nimport * as PageUrls from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport { withRouter } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/category/action\";\nimport CategoryEdit from \"../../components/Category/Edit\";\n\nclass ScreensCategoryEdit extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_CATEGORY_LIST}>\n                            {messages['category.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['category.edit.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <CategoryEdit />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensCategoryEdit));","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport { useFormik } from 'formik';\nimport Form from \"react-bootstrap/Form\";\nimport {PAGE_CATEGORY_LIST} from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../Common/Spinner\";\n\nconst CategoryFormDetails = (props) => {\n        const lang = props.languageSwitcher.languageMessages;\n        const { formData, listGroup } = props;\n\n        let initialValues = {\n            id: formData.id,\n            code: formData.code,\n            name_en: formData.name.en,\n            name_vi: formData.name.vi,\n            name_jp_kanji: formData.name.jp.kanji,\n            name_jp_romaji: formData.name.jp.romaji,\n            description_en: formData.description.en,\n            description_vi: formData.description.vi,\n            description_jp_kanji: formData.description.jp.kanji,\n            description_jp_romaji: formData.description.jp.romaji,\n            group_id: formData.group_id,\n        };\n        //convert null value to empty, else formik will not work\n        Object.keys(initialValues).forEach(key => {\n            if (initialValues[key] === undefined || initialValues[key] === null) {\n                initialValues[key] = '';\n            }\n        });\n\n        let formik = useFormik({\n            initialValues: initialValues,\n            enableReinitialize: true,\n            onSubmit: values => {\n                props.submitHandler(values);\n            },\n        });\n\n        return (\n            <div className=\"box box-primary\">\n                <SpinnerComponent show={props.isCallingApi}> </SpinnerComponent>\n                <Form onSubmit={formik.handleSubmit}>\n                    <div className=\"box-body\">\n                        <Tabs defaultActiveKey=\"general\">\n                            <Tab eventKey=\"general\" title=\"General\">\n                                <Form.Group>\n                                    <Form.Label>Code</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"code\"\n                                        name=\"code\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.code}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Group</Form.Label>\n                                    <Form.Control as=\"select\" disabled\n                                                  id=\"group_id\"\n                                                  name=\"group_id\"\n                                                  onChange={formik.handleChange}\n                                                  value={formik.values.group_id}>\n                                        <option value=\"0\">{lang['common.select.default']}</option>\n                                        {listGroup.map(d => (\n                                            <option key={d.id} value={d.id}>{d.name.vi} - {d.name.en} - {d.name.jp.kanji} - {d.name.jp.romaji}</option>\n                                        ))}\n                                    </Form.Control>\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"home\" title=\"Tên\">\n                                <Form.Group>\n                                    <Form.Label>Vi</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"name_vi\"\n                                        name=\"name_vi\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_vi}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>En</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"name_en\"\n                                        name=\"name_en\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_en}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Jp Kanji</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"name_jp_kanji\"\n                                        name=\"name_jp_kanji\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_jp_kanji}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Jp Romaji</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"name_jp_romaji\"\n                                        name=\"name_jp_romaji\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_jp_romaji}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"description\" title=\"Mô tả chi tiết\">\n                                <Form.Group>\n                                    <Form.Label>Vi</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"description_vi\"\n                                        name=\"description_vi\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.description_vi}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>En</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"description_en\"\n                                        name=\"description_en\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.description_en}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Jp Kanji</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"description_jp_kanji\"\n                                        name=\"description_jp_kanji\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.description_jp_kanji}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Jp Romaji</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"description_jp_romaji\"\n                                        name=\"description_jp_romaji\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.description_jp_romaji}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                        </Tabs>\n                    </div>\n                    <div className=\"box-footer text-center\">\n                        <button type=\"submit\" className=\"btn btn-info\">{lang['layout.button.delete']}</button>\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={(event) => {props.history.push(PAGE_CATEGORY_LIST)} }>{lang['layout.button.cancel']}</button>\n                    </div>\n                </Form>\n            </div>\n        );\n};\nconst mapStateToProps = (state) => ({\n    ...state.categoryReducer,\n    ...state.layoutReducer,\n    ...state\n});\nexport default withRouter(connect(mapStateToProps, {})(CategoryFormDetails));","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/category/action\";\nimport { withRouter } from 'react-router-dom';\nimport CategoryFormDetails from './FormDetails';\n\nclass CategoryDelete extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.resetFormData();\n    }\n\n    onSubmit = values => {\n        this.props.delete(values.id);\n    };\n\n    componentDidMount() {\n        this.props.getListGroup();\n        this.props.getById(this.props.match.params.categoryId);\n    }\n\n    render() {\n\n        const lang = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <React.Fragment>\n            <p>{lang['message.confirmDelete']}</p>\n            <CategoryFormDetails\n                submitHandler={this.onSubmit}\n            />\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.categoryReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(CategoryDelete));","import React from 'react';\nimport {Breadcrumb} from \"react-bootstrap\";\nimport * as PageUrls from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport { withRouter } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/category/action\";\nimport CategoryDelete from \"../../components/Category/Delete\";\n\nclass ScreensCategoryDelete extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_CATEGORY_LIST}>\n                            {messages['category.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['category.delete.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <CategoryDelete />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensCategoryDelete));","const roomTypeActions = {\n    ROOM_TYPE_UPDATE_FILTER: \"ROOM_TYPE_UPDATE_FILTER\",\n    ROOM_TYPE_GET_LIST: \"ROOM_TYPE_GET_LIST\",\n    ROOM_TYPE_GET_LIST_SUCCESS: \"ROOM_TYPE_GET_LIST_SUCCESS\",\n    ROOM_TYPE_GET_LIST_FAILED: \"ROOM_TYPE_GET_LIST_FAILED\",\n    ROOM_TYPE_GET_DETAIL: \"ROOM_TYPE_GET_DETAIL\",\n    ROOM_TYPE_GET_DETAIL_SUCCESS: \"ROOM_TYPE_GET_DETAIL_SUCCESS\",\n    ROOM_TYPE_STATUS_SUCCESS: \"ROOM_TYPE_STATUS_SUCCESS\",\n    ROOM_TYPE_STATUS_FAILED: \"ROOM_TYPE_STATUS_FAILED\",\n    ROOM_TYPE_ADD: \"ROOM_TYPE_ADD\",\n    ROOM_TYPE_ADD_SUCCESS: \"ROOM_TYPE_ADD_SUCCESS\",\n    ROOM_TYPE_EDIT: \"ROOM_TYPE_EDIT\",\n    ROOM_TYPE_EDIT_SUCCESS: \"ROOM_TYPE_EDIT_SUCCESS\",\n    ROOM_TYPE_DELETE: \"ROOM_TYPE_DELETE\",\n    ROOM_TYPE_DELETE_SUCCESS: \"ROOM_TYPE_DELETE_SUCCESS\",\n    ROOM_TYPE_RESET_FORM_DATA: \"ROOM_TYPE_RESET_FORM_DATA\",\n    ROOM_TYPE_UPDATE_SORT_LIST: \"ROOM_TYPE_UPDATE_SORT_LIST\",\n    ROOM_TYPE_UPDATE_SORT_LIST_SUCCESS: \"ROOM_TYPE_UPDATE_SORT_LIST_SUCCESS\",\n    ROOM_TYPE_UPDATE_SORT_LIST_FAILED: \"ROOM_TYPE_UPDATE_SORT_LIST_FAILED\",\n\n    updateFilter(filter) {\n        return {\n            type: roomTypeActions.ROOM_TYPE_UPDATE_FILTER,\n            filter: filter\n        }\n    },\n    getList(filter) {\n        return {\n            type: roomTypeActions.ROOM_TYPE_GET_LIST,\n            filter: filter\n        }\n    },\n    add(params) {\n        return {\n            type: roomTypeActions.ROOM_TYPE_ADD,\n            params: params\n        }\n    },\n    edit(params) {\n        return {\n            type: roomTypeActions.ROOM_TYPE_EDIT,\n            params: params\n        }\n    },\n    delete(params) {\n        return {\n            type: roomTypeActions.ROOM_TYPE_DELETE,\n            params: params\n        }\n    },\n    getById(params) {\n        return {\n            type: roomTypeActions.ROOM_TYPE_GET_DETAIL,\n            params: params\n        }\n    },\n    resetFormData() {\n        return {\n            type: roomTypeActions.ROOM_TYPE_RESET_FORM_DATA\n        }\n    },\n    updateSortList(items) {\n        return {\n            type: roomTypeActions.ROOM_TYPE_UPDATE_SORT_LIST,\n            params: items\n        }\n    }\n};\nexport default roomTypeActions;","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Modal } from 'react-bootstrap';\n\nclass Filter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleApplyFilterButton = this.applyFilter.bind(this);\n        this.handleDiscardsFilterButton = this.discardFilter.bind(this);\n        this.changeSearchText = this.changeSearchTextFunc.bind(this);\n        this.changeHot = this.changeHotFunc.bind(this);\n\n        //need same param name in reducer.filter which we want override\n        this.state = {\n            ...this.props.filter\n        };\n    }\n    applyFilter() {\n        //simple clone value of state pass back to parent callback\n        this.props.onApplyFilter({...this.state});\n    }\n    discardFilter() {\n        //discard meaning reset all state params\n        this.setState({ s: ''}, () => {\n            //simple clone value of state pass back to parent callback\n            this.props.onApplyFilter({...this.state});\n        })\n    }\n    changeSearchTextFunc(e) {\n        this.setState({ s: e.target.value});\n    }\n    changeHotFunc(e) {\n        this.setState({ hot: e.target.value});\n    }\n\n    render() {\n\n        const lang = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <Modal\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                show={this.props.show}\n                onHide={this.props.closePopup}\n                className=\"popup_inner popup_inner_filter\"\n            >\n                <Modal.Header closeButton className=\"box-header-filter\">\n                    <Modal.Title id=\"contained-modal-title-vcenter\" className=\"box-title-filter\">\n                        {lang['layout.title.filterList']}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form className=\"form-horizontal\">\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"user\" className=\"col-md-3 control-label\">Tìm theo tên</label>\n                            <div className=\"col-md-9\">\n                                <input type=\"text\" className=\"form-control\"\n                                       value={this.state.s}\n                                       onChange={this.changeSearchText}\n                                       id=\"s\" name=\"s\" placeholder=\"gõ tên bất kỳ để tìm\" />\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"group_id\" className=\"col-md-3 control-label\">Vị trí hiển thị</label>\n                            <div className=\"col-md-9\">\n                                <select className=\"form-control\"\n                                        onChange={this.changeHot}\n                                        value={this.state.hot}>\n                                    <option value=\"\">{lang['common.select.default']}</option>\n                                    <option value=\"1\">Hiển thị bên trái</option>\n                                    <option value=\"0\">Hiển thị ở menu Sản phẩm</option>\n                                </select>\n                            </div>\n                        </div>\n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={this.handleDiscardsFilterButton} >\n                        <i className=\"fa fa-times mr-1\"> </i>\n                        {lang['layout.button.discardFilter']}\n                    </button>\n                    <button type=\"button\" className=\"btn btn-primary ml-1\" onClick={this.handleApplyFilterButton} >\n                        <i className=\"fa fa-check mr-1\"> </i>\n                        {lang['layout.button.applyFilter']}\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n}\nconst mapStateToProps = (state) => ({\n    ...state.roomTypeReducer,\n    ...state,\n});\n\nexport default connect(mapStateToProps, {})(Filter);\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport actions from '../../redux/roomType/action';\nimport {withRouter} from 'react-router-dom';\nimport Paginator from \"../../common/Paginator\";\nimport Filter from \"./Popup/Filter\";\nimport {Table} from 'react-bootstrap';\nimport {PAGE_ROOM_TYPE_ADD, PAGE_ROOM_TYPE_DELETE, PAGE_ROOM_TYPE_EDIT} from \"../../configs/PagesUrl\";\nimport siteConfig from \"../../configs/siteConfig\";\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: \"none\",\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n\n    // change background colour if dragging\n    background: isDragging ? \"lightgreen\" : \"grey\",\n\n    color: 'fe7401',\n\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n    padding: grid,\n    width: 500\n});\n\nclass RoomTypeList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showPopupFilter: false,\n            sortMode: false,\n            sortList: []\n        };\n        this.onChangePageNumber = this.handlePaging.bind(this);\n        this.onChangeItemPerPage = this.handleItemPerPage.bind(this);\n        this.onApplyFilter = this.handleFilter.bind(this);\n        this.onDragEnd = this.onDragEnd.bind(this);\n    }\n\n    togglePopupFilter() {\n        this.setState({\n            showPopupFilter: !this.state.showPopupFilter\n        });\n    }\n\n    componentDidMount() {\n        this.props.getList({\n            ...this.props.filter\n        });\n    }\n\n    async handlePaging(pageNumber) {\n        //update filter first, so paging number can changed\n        await this.props.updateFilter({\n            ...this.props.filter,\n            page: pageNumber\n        });\n        await this.getList();\n    }\n\n    async handleItemPerPage(itemPerPage) {\n        //update filter first, so paging number can changed\n        //change item per page must reset page to 1\n        await this.props.updateFilter({\n            ...this.props.filter,\n            per_page: itemPerPage,\n            page: 1\n        });\n        await this.getList();\n    }\n\n    async handleFilter(params) {\n        this.setState({showPopupFilter: false}, async () => {\n            //update filter first, so paging number can changed\n            //change item per page must reset page to 1\n            await this.props.updateFilter({\n                ...this.props.filter,\n                ...params,\n                page: 1\n            });\n            await this.getList();\n        });\n    }\n\n    getList() {\n        this.props.getList(this.props.filter);\n    }\n\n    onDragEnd(result) {\n        // dropped outside the list\n        if (!result.destination) {\n            return;\n        }\n\n        const items = reorder(\n            this.props.listData.items,\n            result.source.index,\n            result.destination.index\n        );\n\n        this.props.listData.items = items;\n        this.props.updateSortList(items);\n    }\n\n    renderList(listData) {\n        if (listData === undefined || listData.items === undefined) return;\n\n        return listData.items.map((row) => {\n            return (\n                <tr key={row.id}>\n                    <td>\n                        <a href={siteConfig.siteRoot + 'danh-muc/' + row.id} target=\"_blank\">\n                        {row.name.en}\n                        </a>\n                    </td>\n                    <td>\n                        <a href={siteConfig.siteRoot + 'danh-muc/' + row.id} target=\"_blank\">\n                        {row.name.vi}\n                        </a>\n                    </td>\n                    <td className=\"align-center\">{parseInt(row.hot) === 1 ? <i className=\"fa fa-check\" /> : ''}</td>\n                    {/*<td>{row.name.jp.kanji}</td>*/}\n                    {/*<td>{row.name.jp.romaji}</td>*/}\n                    {/*<td>{row.name.kr}</td>*/}\n                    {/*<td>{row.description.en}</td>*/}\n                    {/*<td>{row.description.vi}</td>*/}\n                    {/*<td>{row.description.jp.kanji}</td>*/}\n                    {/*<td>{row.description.jp.romaji}</td>*/}\n                    {/*<td>{row.description.kr}</td>*/}\n                    <td>{row.sort_order}</td>\n                    <td className=\"text-nowrap text-center\">\n                        <span className=\"action-link ml-1\">\n                            <Link to={PAGE_ROOM_TYPE_EDIT + '/' + row.id} className=\"btn btn-sm btn-success\">\n                                <i className=\"fa fa-pencil\"> </i>\n                            </Link>\n                        </span>\n                        <span className=\"action-link ml-1\">\n                            <Link to={PAGE_ROOM_TYPE_DELETE+ '/' + row.id} className=\"btn btn-sm btn-danger\">\n                                <i className=\"fa fa-trash\"> </i>\n                            </Link>\n                        </span>\n                    </td>\n                </tr>\n            );\n        });\n    }\n\n    switchToSortMode(mode) {\n        this.setState({ sortMode : mode}, () => {\n            this.props.updateFilter({\n                ...this.props.filter,\n                page: 1,\n                per_page: this.state.sortMode ? 1000 : siteConfig.defaultItemPerPage\n            });\n            this.getList();\n        });\n    };\n\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { sortMode } = this.state;\n        let hide = {};\n        if (sortMode) {\n            hide = {\n                display: 'none'\n            };\n        }\n\n        return (\n\n\n            <div className=\"box\">\n                <div className=\"box-header with-border\">\n                    <h3 className=\"box-title\">{messages['group.list.title']}</h3>\n                    <div className=\"float-md-right mt-2 mt-md-0\">\n                        {!sortMode ?\n                            <button type=\"button\" className=\"btn btn-success btn-sm ml-1\"\n                                    onClick={() => this.switchToSortMode(true)}\n                            >Chuyển qua chế độ sắp xếp thứ tự\n                            </button>\n                            :\n                            <button type=\"button\" className=\"btn btn-info btn-sm ml-1\"\n                                    onClick={() => this.switchToSortMode(false)}\n                            >Chuyển qua danh sách\n                            </button>\n                        }\n                        <Link to={PAGE_ROOM_TYPE_ADD}>\n                            <button type=\"button\"\n                                    className=\"btn btn-primary btn-sm ml-1\">{messages['layout.button.register']}</button>\n                        </Link>\n                    </div>\n                </div>\n                { !sortMode ?\n                <div className=\"box-body\">\n                    <div className=\"datatable_container\">\n                        <Paginator\n                            total={this.props.listData.total}\n                            itemPerPage={this.props.filter.per_page}\n                            currentPage={this.props.filter.page}\n                            onChangePageNumber={this.onChangePageNumber}\n                            onChangeItemPerPage={this.onChangeItemPerPage}\n                            onTogglePopupFilter={this.togglePopupFilter.bind(this)}\n                            filterData={this.props.filter}\n                        />\n                        <div className=\"row m-0 my-2\">\n                            <div className=\"col-sm-12 p-0\">\n                                <Table bordered hover responsive size=\"sm\"\n                                       className=\"table-custom mb-0\">\n                                    <thead>\n                                    <tr>\n                                        <th colSpan={2}>Tên</th>\n                                        {/*<th colSpan={2}>Mô tả chi tiết</th>*/}\n                                        <th>Hiện bên trái</th>\n                                        <th>Số thứ tự (nhỏ -> lớn)</th>\n                                        <th style={{width: '100px'}} rowSpan={2}>{messages['layout.column.action']}</th>\n                                    </tr>\n                                    <tr>\n                                        <th>En</th>\n                                        <th>Vi</th>\n                                        {/*<th>Jp - Kanji</th>*/}\n                                        {/*<th>Jp - Romanji</th>*/}\n                                        {/*<th>Kr</th>*/}\n                                        {/*<th>En</th>*/}\n                                        {/*<th>Vi</th>*/}\n                                        {/*<th>Jp - Kanji</th>*/}\n                                        {/*<th>Jp - Romanji</th>*/}\n                                        {/*<th>Kr</th>*/}\n                                        <th></th>\n                                        <th></th>\n\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    {this.renderList(this.props.listData)}\n                                    </tbody>\n                                </Table>\n                            </div>\n                        </div>\n                        <div className=\"block-paging-bottom\">\n                            <Paginator\n                                total={this.props.listData.total}\n                                itemPerPage={this.props.filter.per_page}\n                                currentPage={this.props.filter.page}\n                                onChangePageNumber={this.onChangePageNumber}\n                                onChangeItemPerPage={this.onChangeItemPerPage}\n                                filterData={this.props.filter}\n                            />\n                        </div>\n                    </div>\n                </div>\n                    :\n                <div className=\"box-body\">\n                    <DragDropContext onDragEnd={this.onDragEnd}>\n                        <Droppable droppableId=\"droppable\">\n                            {(provided, snapshot) => (\n                                <div\n                                    {...provided.droppableProps}\n                                    ref={provided.innerRef}\n                                    style={getListStyle(snapshot.isDraggingOver)}\n                                >\n                                    {this.props.listData.items.map((item, index) => (\n                                        <Draggable key={item.id} draggableId={item.id.toString()} index={index}>\n                                            {(provided, snapshot) => (\n                                                <div\n                                                    ref={provided.innerRef}\n                                                    {...provided.draggableProps}\n                                                    {...provided.dragHandleProps}\n                                                    style={getItemStyle(\n                                                        snapshot.isDragging,\n                                                        provided.draggableProps.style\n                                                    )}\n                                                >\n                                                    {item.name.vi}\n                                                </div>\n\n                                            )}\n                                        </Draggable>\n                                    ))}\n                                    {provided.placeholder}\n                                </div>\n                            )}\n                        </Droppable>\n                    </DragDropContext>\n                </div> }\n\n                {this.state.showPopupFilter ?\n                    <Filter\n                        show={this.state.showPopupFilter}\n                        closePopup={this.togglePopupFilter.bind(this)}\n                        onApplyFilter={this.onApplyFilter}\n                    />\n                    : null\n                }\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.roomTypeReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(RoomTypeList));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport RoomTypeList from '../../components/RoomType/List';\nimport actions from \"../../redux/auth/action\";\nimport { withRouter } from 'react-router-dom';\n\nclass ScreensRoomTypeList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <h1>\n                        {messages['roomtype.title']}\n                    </h1>\n                </section>\n                <section className=\"content\">\n                    <div className=\"row m-0\">\n                        <div className=\"col-12 p-0\">\n                            <RoomTypeList />\n                        </div>\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps,actions)(ScreensRoomTypeList));\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {withRouter} from 'react-router-dom';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport {useFormik, FieldArray, FormikProvider} from 'formik';\nimport Form from \"react-bootstrap/Form\";\nimport {PAGE_ROOM_TYPE_LIST} from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../Common/Spinner\";\n\nconst GroupForm = (props) => {\n    const lang = props.languageSwitcher.languageMessages;\n    const {formData} = props;\n\n    let initialValues = {\n        id: formData.id,\n        name_en: formData.name.en,\n        name_vi: formData.name.vi,\n        name_jp_kanji: formData.name.jp.kanji,\n        name_jp_romaji: formData.name.jp.romaji,\n        name_kr: formData.name.kr,\n        description_en: formData.description.en,\n        description_vi: formData.description.vi,\n        description_jp_kanji: formData.description.jp.kanji,\n        description_jp_romaji: formData.description.jp.romaji,\n        description_kr: formData.description.kr,\n        sort_order: formData.sort_order,\n        hot: formData.hot,\n        sub_types: formData.sub_types,\n    };\n    //convert null value to empty, else formik will not work\n    Object.keys(initialValues).forEach(key => {\n        if (initialValues[key] === undefined || initialValues[key] === null) {\n            initialValues[key] = '';\n        }\n    });\n\n    let formik = useFormik({\n        initialValues: initialValues,\n        enableReinitialize: true,\n        onSubmit: values => {\n            props.submitHandler(values);\n        },\n    });\n\n    console.log(formik);\n\n    const sub_types = [1, 2];\n\n    return (\n        <div className=\"box box-primary\">\n            <SpinnerComponent show={props.isCallingApi}> </SpinnerComponent>\n            <FormikProvider value={formik}>\n            <Form onSubmit={formik.handleSubmit}>\n                <div className=\"box-body\">\n                    <Tabs defaultActiveKey=\"home\">\n                        <Tab eventKey=\"home\" title=\"Tên\">\n                            <Form.Group>\n                                <Form.Label>Vi</Form.Label>\n                                <Form.Control\n                                    id=\"name_vi\"\n                                    name=\"name_vi\"\n                                    type=\"text\"\n                                    onChange={formik.handleChange}\n                                    value={formik.values.name_vi}\n                                />\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>En</Form.Label>\n                                <Form.Control\n                                    id=\"name_en\"\n                                    name=\"name_en\"\n                                    type=\"text\"\n                                    onChange={formik.handleChange}\n                                    value={formik.values.name_en}\n                                />\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Check\n                                    label=\"Hiển thị bên trái\"\n                                    id=\"status\"\n                                    name=\"status\"\n                                    type=\"checkbox\"\n                                    checked={parseInt(formik.values.hot) === 1}\n                                    onChange={e => {\n                                        if (e.target.checked) {\n                                            formik.setFieldValue('hot', 1);\n                                        } else {\n                                            formik.setFieldValue('hot', 0);\n                                        }\n                                    }}\n                                    value={formik.values.hot}\n                                />\n                            </Form.Group>\n                            <Form.Group>\n                                <FieldArray\n                                    name=\"sub_types\"\n                                    render={arrayHelpers => (\n                                        <div>\n                                            {sub_types && sub_types.length > 0 ? (\n                                                sub_types.map((sub_type, index) => (\n                                                    <Form.Group controlId={sub_type} key={sub_type}>\n                                                        <Form.Check\n                                                            key={`sub_types.${sub_type}`}\n                                                            name={`sub_types.${sub_type}`}\n                                                            className=\"margin-right-5px\"\n                                                            value={sub_type}\n                                                            label={parseInt(sub_type) === 1 ? 'Máy bộ' : 'Linh kiện'}\n                                                            type=\"checkbox\"\n                                                            checked={formik.values.sub_types.includes(sub_type)}\n                                                            onChange={e => {\n                                                                if (e.target.checked) arrayHelpers.push(sub_type);\n                                                                else {\n                                                                    const idx = formik.values.sub_types.indexOf(sub_type);\n                                                                    arrayHelpers.remove(idx);\n                                                                }\n                                                            }}>\n                                                        </Form.Check>\n                                                    </Form.Group>\n                                                ))\n                                            ) : ''}\n                                        </div>\n                                    )}\n                                />\n                            </Form.Group>\n                            <Form.Group className=\"hide\">\n                                <Form.Label>Jp Kanji</Form.Label>\n                                <Form.Control\n                                    id=\"name_jp_kanji\"\n                                    name=\"name_jp_kanji\"\n                                    type=\"text\"\n                                    onChange={formik.handleChange}\n                                    value={formik.values.name_jp_kanji}\n                                />\n                            </Form.Group>\n                            <Form.Group className=\"hide\">\n                                <Form.Label>Jp Romaji</Form.Label>\n                                <Form.Control\n                                    id=\"name_jp_romaji\"\n                                    name=\"name_jp_romaji\"\n                                    type=\"text\"\n                                    onChange={formik.handleChange}\n                                    value={formik.values.name_jp_romaji}\n                                />\n                            </Form.Group>\n                            <Form.Group className=\"hide\">\n                                <Form.Label>Kr</Form.Label>\n                                <Form.Control\n                                    id=\"name_kr\"\n                                    name=\"name_kr\"\n                                    type=\"text\"\n                                    onChange={formik.handleChange}\n                                    value={formik.values.name_kr}\n                                />\n                            </Form.Group>\n                        </Tab>\n                        <Tab eventKey=\"sort_order\" title=\"Số thứ tự sắp xếp\">\n                            <Form.Group>\n                                <Form.Label>Vi</Form.Label>\n                                <Form.Control\n                                    id=\"sort_order\"\n                                    name=\"sort_order\"\n                                    type=\"number\"\n                                    onChange={formik.handleChange}\n                                    value={formik.values.sort_order}\n                                />\n                            </Form.Group>\n                        </Tab>\n                        <Tab eventKey=\"description\" title=\"Mô tả chi tiết\">\n                            <Form.Group>\n                                <Form.Label>Vi</Form.Label>\n                                <Form.Control\n                                    id=\"description_vi\"\n                                    name=\"description_vi\"\n                                    type=\"text\"\n                                    onChange={formik.handleChange}\n                                    value={formik.values.description_vi}\n                                />\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>En</Form.Label>\n                                <Form.Control\n                                    id=\"description_en\"\n                                    name=\"description_en\"\n                                    type=\"text\"\n                                    onChange={formik.handleChange}\n                                    value={formik.values.description_en}\n                                />\n                            </Form.Group>\n                            <Form.Group className=\"hide\">\n                                <Form.Label>Jp Kanji</Form.Label>\n                                <Form.Control\n                                    id=\"description_jp_kanji\"\n                                    name=\"description_jp_kanji\"\n                                    type=\"text\"\n                                    onChange={formik.handleChange}\n                                    value={formik.values.description_jp_kanji}\n                                />\n                            </Form.Group>\n                            <Form.Group className=\"hide\">\n                                <Form.Label>Jp Romaji</Form.Label>\n                                <Form.Control\n                                    id=\"description_jp_romaji\"\n                                    name=\"description_jp_romaji\"\n                                    type=\"text\"\n                                    onChange={formik.handleChange}\n                                    value={formik.values.description_jp_romaji}\n                                />\n                            </Form.Group>\n                            <Form.Group className=\"hide\">\n                                <Form.Label>Kr</Form.Label>\n                                <Form.Control\n                                    id=\"description_kr\"\n                                    name=\"description_kr\"\n                                    type=\"text\"\n                                    onChange={formik.handleChange}\n                                    value={formik.values.description_kr}\n                                />\n                            </Form.Group>\n                        </Tab>\n                    </Tabs>\n                </div>\n                <div className=\"box-footer text-center\">\n                    <button type=\"submit\" className=\"btn btn-info\">{lang['layout.button.save']}</button>\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={(event) => {\n                        props.history.push(PAGE_ROOM_TYPE_LIST)\n                    }}>{lang['layout.button.cancel']}</button>\n                </div>\n            </Form>\n            </FormikProvider>\n        </div>\n    );\n};\nconst mapStateToProps = (state) => ({\n    ...state.roomTypeReducer,\n    ...state.layoutReducer,\n    ...state\n});\nexport default withRouter(connect(mapStateToProps, {})(GroupForm));\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/roomType/action\";\nimport { withRouter } from 'react-router-dom';\nimport RoomTypeForm from './Form';\nimport notification from \"../../helpers/Notification\";\n\nclass RoomTypeAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.resetFormData();\n    }\n\n    onSubmit = values => {\n        if (!this.validate(values)) {\n            return;\n        }\n\n        const data = {\n            id: values.id,\n            name: {\n                vi: values.name_vi,\n                en: values.name_en,\n                jp: {\n                    kanji: values.name_jp_kanji,\n                    romaji: values.name_jp_romaji\n                },\n                kr: values.name_kr\n            },\n            description: {\n                vi: values.description_vi,\n                en: values.description_en,\n                jp: {\n                    kanji: values.description_jp_kanji,\n                    romaji: values.description_jp_romaji\n                },\n                kr: values.description_kr\n            },\n            sort_order: values.sort_order,\n            hot: values.hot,\n            sub_types: values.sub_types,\n        };\n        //add group\n        this.props.add({\n            data: data\n        });\n    };\n\n    validate(values) {\n\n        let errors = [];\n        if (values.name_vi === '' && values.name_en === '' && values.name_jp_kanji === '' && values.name_jp_romaji === '' && values.name_kr === '') {\n            errors.push('Vui lòng nhập tên');\n        }\n\n        if (errors.length > 0) {\n            notification.error(errors);\n            return false;\n        }\n        return true;\n    }\n\n    componentDidMount() {\n\n    }\n\n    render() {\n        return (\n            <RoomTypeForm\n                submitHandler={this.onSubmit}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.roomTypeReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(RoomTypeAdd));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport actions from \"../../redux/roomType/action\";\nimport { Link, withRouter } from 'react-router-dom';\nimport { Breadcrumb } from \"react-bootstrap\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport * as PageUrls from '../../configs/PagesUrl';\nimport RoomTypeAdd from '../../components/RoomType/Add';\n\nclass ScreensRoomTypeAdd extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_GROUP_LIST}>\n                            {messages['roomtype.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['roomtype.add.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <RoomTypeAdd />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensRoomTypeAdd));\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/roomType/action\";\nimport { withRouter } from 'react-router-dom';\nimport RoomTypeForm from './Form';\nimport notification from \"../../helpers/Notification\";\n\nclass RoomTypeEdit extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.resetFormData();\n    }\n\n    onSubmit = values => {\n        if (!this.validate(values)) {\n            return;\n        }\n\n        const data = {\n            id: values.id,\n            name: {\n                vi: values.name_vi,\n                en: values.name_en,\n                jp: {\n                    kanji: values.name_jp_kanji,\n                    romaji: values.name_jp_romaji\n                },\n                kr: values.name_kr\n            },\n            description: {\n                vi: values.description_vi,\n                en: values.description_en,\n                jp: {\n                    kanji: values.description_jp_kanji,\n                    romaji: values.description_jp_romaji\n                },\n                kr: values.description_kr\n            },\n            sort_order: values.sort_order,\n            hot: values.hot,\n            sub_types: values.sub_types,\n        };\n        //add group\n        this.props.edit({\n            data: data\n        });\n    };\n\n    validate(values) {\n\n        if (values.id === '') {\n            notification.error('Record does not exist');\n            return false;\n        }\n\n        let errors = [];\n        if (values.name_vi === '' && values.name_en === '' && values.name_jp_kanji === '' && values.name_jp_romaji === '' && values.name_kr === '') {\n            errors.push('Vui lòng nhập Tên');\n        }\n\n        if (errors.length > 0) {\n            notification.error(errors);\n            return false;\n        }\n        return true;\n    }\n\n    componentDidMount() {\n        this.props.getById(this.props.match.params.id);\n    }\n\n    render() {\n\n        let buttonStyle = {};\n\n\n        return (\n            <RoomTypeForm\n                submitHandler={this.onSubmit}\n                buttonStyle={buttonStyle}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.roomTypeReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(RoomTypeEdit));\n","import React from 'react';\nimport {Breadcrumb} from \"react-bootstrap\";\nimport * as PageUrls from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport { withRouter } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/roomType/action\";\nimport RoomTypeEdit from \"../../components/RoomType/Edit\";\n\nclass ScreensRoomTypeEdit extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_GROUP_LIST}>\n                            {messages['roomtype.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['roomtype.edit.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <RoomTypeEdit />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensRoomTypeEdit));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport { useFormik } from 'formik';\nimport Form from \"react-bootstrap/Form\";\nimport {PAGE_GROUP_LIST, PAGE_ROOM_TYPE_LIST} from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../Common/Spinner\";\n\nconst GroupFormDetails = (props) => {\n        const lang = props.languageSwitcher.languageMessages;\n        const { formData } = props;\n\n        let initialValues = {\n            id: formData.id,\n            name_en: formData.name.en,\n            name_vi: formData.name.vi,\n            name_jp_kanji: formData.name.jp.kanji,\n            name_jp_romaji: formData.name.jp.romaji,\n            name_kr: formData.name.kr,\n            description_en: formData.description.en,\n            description_vi: formData.description.vi,\n            description_jp_kanji: formData.description.jp.kanji,\n            description_jp_romaji: formData.description.jp.romaji,\n            description_kr: formData.description.kr,\n            sort_order: formData.sort_order,\n            hot: formData.hot\n        };\n        //convert null value to empty, else formik will not work\n        Object.keys(initialValues).forEach(key => {\n            if (initialValues[key] === undefined || initialValues[key] === null) {\n                initialValues[key] = '';\n            }\n        });\n\n        let formik = useFormik({\n            initialValues: initialValues,\n            enableReinitialize: true,\n            onSubmit: values => {\n                props.submitHandler(values);\n            },\n        });\n\n        return (\n            <div className=\"box box-primary\">\n                <SpinnerComponent show={props.isCallingApi}> </SpinnerComponent>\n                <Form onSubmit={formik.handleSubmit}>\n                    <div className=\"box-body\">\n                        <Tabs defaultActiveKey=\"home\">\n                            <Tab eventKey=\"home\" title=\"Tên\">\n                                <Form.Group>\n                                    <Form.Label>Vi</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"name_vi\"\n                                        name=\"name_vi\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_vi}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>En</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"name_en\"\n                                        name=\"name_en\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_en}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Hiển thị bên trái</Form.Label>\n                                    <Form.Check disabled\n                                        id=\"status\"\n                                        name=\"status\"\n                                        type=\"checkbox\"\n                                        checked={parseInt(formik.values.hot) === 1}\n                                        onChange={e => {\n                                            if (e.target.checked) {\n                                                formik.setFieldValue('hot', 1);\n                                            } else {\n                                                formik.setFieldValue('hot', 0);\n                                            }\n                                        }}\n                                        value={formik.values.hot}\n                                    />\n                                </Form.Group>\n                                <Form.Group className=\"hide\">\n                                    <Form.Label>Jp Kanji</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"name_jp_kanji\"\n                                        name=\"name_jp_kanji\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_jp_kanji}\n                                    />\n                                </Form.Group>\n                                <Form.Group className=\"hide\">\n                                    <Form.Label>Jp Romaji</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"name_jp_romaji\"\n                                        name=\"name_jp_romaji\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_jp_romaji}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"sort_order\" title=\"Số thứ tự sắp xếp\">\n                                <Form.Group>\n                                    <Form.Label>Vi</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"sort_order\"\n                                        name=\"sort_order\"\n                                        type=\"number\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.sort_order}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"description\" title=\"Mô tả chi tiết\">\n                                <Form.Group>\n                                    <Form.Label>Vi</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"description_vi\"\n                                        name=\"description_vi\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.description_vi}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>En</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"description_en\"\n                                        name=\"description_en\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.description_en}\n                                    />\n                                </Form.Group>\n                                <Form.Group className=\"hide\">\n                                    <Form.Label>Jp Kanji</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"description_jp_kanji\"\n                                        name=\"description_jp_kanji\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.description_jp_kanji}\n                                    />\n                                </Form.Group>\n                                <Form.Group className=\"hide\">\n                                    <Form.Label>Jp Romaji</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"description_jp_romaji\"\n                                        name=\"description_jp_romaji\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.description_jp_romaji}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                        </Tabs>\n                    </div>\n                    <div className=\"box-footer text-center\">\n                        <button type=\"submit\" className=\"btn btn-info\">{lang['layout.button.delete']}</button>\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={(event) => {props.history.push(PAGE_ROOM_TYPE_LIST)} }>{lang['layout.button.cancel']}</button>\n                    </div>\n                </Form>\n            </div>\n        );\n};\nconst mapStateToProps = (state) => ({\n    ...state.roomTypeReducer,\n    ...state.layoutReducer,\n    ...state\n});\nexport default withRouter(connect(mapStateToProps, {})(GroupFormDetails));\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/roomType/action\";\nimport { withRouter } from 'react-router-dom';\nimport GroupFormDetails from './FormDetails';\n\nclass RoomTypeDelete extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.resetFormData();\n    }\n\n    onSubmit = values => {\n        this.props.delete(values.id);\n    };\n\n    componentDidMount() {\n        this.props.getById(this.props.match.params.id);\n    }\n\n    render() {\n\n        const lang = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <React.Fragment>\n            <p>{lang['message.confirmDelete']}</p>\n            <GroupFormDetails\n                submitHandler={this.onSubmit}\n            />\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.roomTypeReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(RoomTypeDelete));\n","import React from 'react';\nimport {Breadcrumb} from \"react-bootstrap\";\nimport * as PageUrls from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport { withRouter } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/roomType/action\";\nimport RoomTypeDelete from \"../../components/RoomType/Delete\";\n\nclass ScreensRoomTypeDelete extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_GROUP_LIST}>\n                            {messages['roomtype.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['roomtype.delete.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <RoomTypeDelete />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensRoomTypeDelete));\n","const variantActions = {\n    VARIANT_UPDATE_FILTER: \"VARIANT_UPDATE_FILTER\",\n    VARIANT_GET_LIST: \"VARIANT_GET_LIST\",\n    VARIANT_GET_LIST_SUCCESS: \"VARIANT_GET_LIST_SUCCESS\",\n    VARIANT_GET_LIST_FAILED: \"VARIANT_GET_LIST_FAILED\",\n    VARIANT_GET_DETAIL: \"VARIANT_GET_DETAIL\",\n    VARIANT_GET_DETAIL_SUCCESS: \"VARIANT_GET_DETAIL_SUCCESS\",\n    VARIANT_STATUS_SUCCESS: \"VARIANT_STATUS_SUCCESS\",\n    VARIANT_STATUS_FAILED: \"VARIANT_STATUS_FAILED\",\n    VARIANT_ADD: \"VARIANT_ADD\",\n    VARIANT_ADD_SUCCESS: \"VARIANT_ADD_SUCCESS\",\n    VARIANT_EDIT: \"VARIANT_EDIT\",\n    VARIANT_EDIT_SUCCESS: \"VARIANT_EDIT_SUCCESS\",\n    VARIANT_DELETE: \"VARIANT_DELETE\",\n    VARIANT_DELETE_SUCCESS: \"VARIANT_DELETE_SUCCESS\",\n    VARIANT_RESET_FORM_DATA: \"VARIANT_RESET_FORM_DATA\",\n\n    updateFilter(filter) {\n        return {\n            type: variantActions.VARIANT_UPDATE_FILTER,\n            filter: filter\n        }\n    },\n    getList(filter) {\n        return {\n            type: variantActions.VARIANT_GET_LIST,\n            filter: filter\n        }\n    },\n    add(params) {\n        return {\n            type: variantActions.VARIANT_ADD,\n            params: params\n        }\n    },\n    edit(params) {\n        return {\n            type: variantActions.VARIANT_EDIT,\n            params: params\n        }\n    },\n    delete(params) {\n        return {\n            type: variantActions.VARIANT_DELETE,\n            params: params\n        }\n    },\n    getById(params) {\n        return {\n            type: variantActions.VARIANT_GET_DETAIL,\n            params: params\n        }\n    },\n    resetFormData() {\n        return {\n            type: variantActions.VARIANT_RESET_FORM_DATA\n        }\n    },\n};\nexport default variantActions;","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Modal } from 'react-bootstrap';\n\nclass Filter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleApplyFilterButton = this.applyFilter.bind(this);\n        this.handleDiscardsFilterButton = this.discardFilter.bind(this);\n        this.changeSearchText = this.changeSearchTextFunc.bind(this);\n\n        //need same param name in reducer.filter which we want override\n        this.state = {\n            ...this.props.filter\n        };\n    }\n    applyFilter() {\n        //simple clone value of state pass back to parent callback\n        this.props.onApplyFilter({...this.state});\n    }\n    discardFilter() {\n        //discard meaning reset all state params\n        this.setState({ s: ''}, () => {\n            //simple clone value of state pass back to parent callback\n            this.props.onApplyFilter({...this.state});\n        })\n    }\n    changeSearchTextFunc(e) {\n        this.setState({ s: e.target.value});\n    }\n\n    render() {\n\n        const lang = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <Modal\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                show={this.props.show}\n                onHide={this.props.closePopup}\n                className=\"popup_inner popup_inner_filter\"\n            >\n                <Modal.Header closeButton className=\"box-header-filter\">\n                    <Modal.Title id=\"contained-modal-title-vcenter\" className=\"box-title-filter\">\n                        {lang['layout.title.filterList']}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form className=\"form-horizontal\">\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"user\" className=\"col-md-3 control-label\">Search by name or description</label>\n                            <div className=\"col-md-9\">\n                                <input type=\"text\" className=\"form-control\"\n                                       value={this.state.s}\n                                       onChange={this.changeSearchText}\n                                       id=\"s\" name=\"s\" placeholder=\"Enter any chars to search\" />\n                            </div>\n                        </div>\n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={this.handleDiscardsFilterButton} >\n                        <i className=\"fa fa-times mr-1\"> </i>\n                        {lang['layout.button.discardFilter']}\n                    </button>\n                    <button type=\"button\" className=\"btn btn-primary ml-1\" onClick={this.handleApplyFilterButton} >\n                        <i className=\"fa fa-check mr-1\"> </i>\n                        {lang['layout.button.applyFilter']}\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n}\nconst mapStateToProps = (state) => ({\n    ...state.roomFacilityReducer,\n    ...state,\n});\n\nexport default connect(mapStateToProps, {})(Filter);\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport actions from '../../redux/roomFacility/action';\nimport {withRouter} from 'react-router-dom';\nimport Paginator from \"../../common/Paginator\";\nimport Filter from \"./Popup/Filter\";\nimport {Table} from 'react-bootstrap';\nimport {PAGE_ROOM_FACILITY_ADD, PAGE_ROOM_FACILITY_DELETE, PAGE_ROOM_FACILITY_EDIT} from \"../../configs/PagesUrl\";\n\nclass RoomFacilityList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showPopupFilter: false,\n        };\n        this.onChangePageNumber = this.handlePaging.bind(this);\n        this.onChangeItemPerPage = this.handleItemPerPage.bind(this);\n        this.onApplyFilter = this.handleFilter.bind(this);\n    }\n\n    togglePopupFilter() {\n        this.setState({\n            showPopupFilter: !this.state.showPopupFilter\n        });\n    }\n\n    componentDidMount() {\n        this.props.getList({\n            ...this.props.filter\n        });\n    }\n\n    async handlePaging(pageNumber) {\n        //update filter first, so paging number can changed\n        await this.props.updateFilter({\n            ...this.props.filter,\n            page: pageNumber\n        });\n        await this.getList();\n    }\n\n    async handleItemPerPage(itemPerPage) {\n        //update filter first, so paging number can changed\n        //change item per page must reset page to 1\n        await this.props.updateFilter({\n            ...this.props.filter,\n            per_page: itemPerPage,\n            page: 1\n        });\n        await this.getList();\n    }\n\n    async handleFilter(params) {\n        this.setState({showPopupFilter: false}, async () => {\n            //update filter first, so paging number can changed\n            //change item per page must reset page to 1\n            await this.props.updateFilter({\n                ...this.props.filter,\n                ...params,\n                page: 1\n            });\n            await this.getList();\n        });\n    }\n\n    getList() {\n        this.props.getList(this.props.filter);\n    }\n\n\n    renderList(listData) {\n        if (listData === undefined || listData.items === undefined) return;\n        console.log(listData.items);\n\n        return listData.items.map((row) => {\n            return (\n                <tr key={row.id}>\n                    <td>{row.name.en}</td>\n                    <td>{row.name.vi}</td>\n                    <td>{row.name.jp.kanji}</td>\n                    <td>{row.name.jp.romaji}</td>\n                    <td>{row.name.kr}</td>\n                    <td className=\"text-nowrap text-center\">\n                        <span className=\"action-link ml-1\">\n                            <Link to={PAGE_ROOM_FACILITY_EDIT + '/' + row.id} className=\"btn btn-sm btn-success\">\n                                <i className=\"fa fa-pencil\"> </i>\n                            </Link>\n                        </span>\n                        <span className=\"action-link ml-1\">\n                            <Link to={PAGE_ROOM_FACILITY_DELETE+ '/' + row.id} className=\"btn btn-sm btn-danger\">\n                                <i className=\"fa fa-trash\"> </i>\n                            </Link>\n                        </span>\n                    </td>\n                </tr>\n            );\n        });\n    }\n\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n\n        return (\n\n\n            <div className=\"box\">\n                <div className=\"box-header with-border\">\n                    <h3 className=\"box-title\">{messages['variant.list.title']}</h3>\n                    <div className=\"float-md-right mt-2 mt-md-0\">\n                        <button type=\"button\" className=\"btn btn-secondary btn-sm ml-1\"\n                                >{messages['layout.button.export']}\n                        </button>\n                        <Link to={PAGE_ROOM_FACILITY_ADD}>\n                            <button type=\"button\"\n                                    className=\"btn btn-primary btn-sm ml-1\">{messages['layout.button.register']}</button>\n                        </Link>\n                    </div>\n                </div>\n                <div className=\"box-body\">\n                    <div className=\"datatable_container\">\n                        <Paginator\n                            total={this.props.listData.total}\n                            itemPerPage={this.props.filter.per_page}\n                            currentPage={this.props.filter.page}\n                            onChangePageNumber={this.onChangePageNumber}\n                            onChangeItemPerPage={this.onChangeItemPerPage}\n                            onTogglePopupFilter={this.togglePopupFilter.bind(this)}\n                            filterData={this.props.filter}\n                        />\n                        <div className=\"row m-0 my-2\">\n                            <div className=\"col-sm-12 p-0\">\n                                <Table bordered hover responsive size=\"sm\"\n                                       className=\"table-custom mb-0\">\n                                    <thead>\n                                    <tr>\n                                        <th colSpan={5}>Tên</th>\n\n                                        <th style={{width: '100px'}} rowSpan={2}>{messages['layout.column.action']}</th>\n                                    </tr>\n                                    <tr>\n                                        <th>En</th>\n                                        <th>Vi</th>\n                                        <th>Jp - Kanji</th>\n                                        <th>Jp - Romanji</th>\n                                        <th>Kr</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    {this.renderList(this.props.listData)}\n                                    </tbody>\n                                </Table>\n                            </div>\n                        </div>\n                        <div className=\"block-paging-bottom\">\n                            <Paginator\n                                total={this.props.listData.total}\n                                itemPerPage={this.props.filter.per_page}\n                                currentPage={this.props.filter.page}\n                                onChangePageNumber={this.onChangePageNumber}\n                                onChangeItemPerPage={this.onChangeItemPerPage}\n                                filterData={this.props.filter}\n                            />\n                        </div>\n                    </div>\n                </div>\n                {this.state.showPopupFilter ?\n                    <Filter\n                        show={this.state.showPopupFilter}\n                        closePopup={this.togglePopupFilter.bind(this)}\n                        onApplyFilter={this.onApplyFilter}\n                    />\n                    : null\n                }\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.roomFacilityReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(RoomFacilityList));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport RoomFacilityList from '../../components/RoomFacility/List';\nimport actions from \"../../redux/auth/action\";\nimport { withRouter } from 'react-router-dom';\n\nclass ScreensRoomFacilityList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <h1>\n                        {messages['roomfacility.title']}\n                    </h1>\n                </section>\n                <section className=\"content\">\n                    <div className=\"row m-0\">\n                        <div className=\"col-12 p-0\">\n                            <RoomFacilityList />\n                        </div>\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps,actions)(ScreensRoomFacilityList));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport { useFormik } from 'formik';\nimport Form from \"react-bootstrap/Form\";\nimport {PAGE_ROOM_FACILITY_LIST} from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../Common/Spinner\";\n\nconst VariantForm = (props) => {\n        const lang = props.languageSwitcher.languageMessages;\n        const { formData } = props;\n\n        let initialValues = {\n            id: formData.id,\n            name_en: formData.name.en,\n            name_vi: formData.name.vi,\n            name_jp_kanji: formData.name.jp.kanji,\n            name_jp_romaji: formData.name.jp.romaji,\n            name_kr: formData.name.kr,\n            description_en: formData.description.en,\n            description_vi: formData.description.vi,\n            description_jp_kanji: formData.description.jp.kanji,\n            description_jp_romaji: formData.description.jp.romaji,\n            description_kr: formData.description.kr,\n        };\n        //convert null value to empty, else formik will not work\n        Object.keys(initialValues).forEach(key => {\n            if (initialValues[key] === undefined || initialValues[key] === null) {\n                initialValues[key] = '';\n            }\n        });\n\n        let formik = useFormik({\n            initialValues: initialValues,\n            enableReinitialize: true,\n            onSubmit: values => {\n                props.submitHandler(values);\n            },\n        });\n\n        return (\n            <div className=\"box box-primary\">\n                <SpinnerComponent show={props.isCallingApi}> </SpinnerComponent>\n                <Form onSubmit={formik.handleSubmit}>\n                    <div className=\"box-body\">\n                        <Tabs defaultActiveKey=\"home\">\n                            <Tab eventKey=\"home\" title=\"Tên\">\n                                <Form.Group>\n                                    <Form.Label>Vi</Form.Label>\n                                    <Form.Control\n                                        id=\"name_vi\"\n                                        name=\"name_vi\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_vi}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>En</Form.Label>\n                                    <Form.Control\n                                        id=\"name_en\"\n                                        name=\"name_en\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_en}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Jp Kanji</Form.Label>\n                                    <Form.Control\n                                        id=\"name_jp_kanji\"\n                                        name=\"name_jp_kanji\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_jp_kanji}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Jp Romaji</Form.Label>\n                                    <Form.Control\n                                        id=\"name_jp_romaji\"\n                                        name=\"name_jp_romaji\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_jp_romaji}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Kr</Form.Label>\n                                    <Form.Control\n                                        id=\"name_kr\"\n                                        name=\"name_kr\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_kr}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"description\" title=\"Mô tả chi tiết\">\n                                <Form.Group>\n                                    <Form.Label>Vi</Form.Label>\n                                    <Form.Control\n                                        id=\"description_vi\"\n                                        name=\"description_vi\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.description_vi}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>En</Form.Label>\n                                    <Form.Control\n                                        id=\"description_en\"\n                                        name=\"description_en\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.description_en}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Jp Kanji</Form.Label>\n                                    <Form.Control\n                                        id=\"description_jp_kanji\"\n                                        name=\"description_jp_kanji\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.description_jp_kanji}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Jp Romaji</Form.Label>\n                                    <Form.Control\n                                        id=\"description_jp_romaji\"\n                                        name=\"description_jp_romaji\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.description_jp_romaji}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Kr</Form.Label>\n                                    <Form.Control\n                                        id=\"description_kr\"\n                                        name=\"description_kr\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.description_kr}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                        </Tabs>\n                    </div>\n                    <div className=\"box-footer text-center\">\n                        <button type=\"submit\" className=\"btn btn-info\">{lang['layout.button.save']}</button>\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={(event) => {props.history.push(PAGE_ROOM_FACILITY_LIST)} }>{lang['layout.button.cancel']}</button>\n                    </div>\n                </Form>\n            </div>\n        );\n};\nconst mapStateToProps = (state) => ({\n    ...state.roomFacilityReducer,\n    ...state.layoutReducer,\n    ...state\n});\nexport default withRouter(connect(mapStateToProps, {})(VariantForm));\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/roomFacility/action\";\nimport { withRouter } from 'react-router-dom';\nimport VariantForm from './Form';\nimport notification from \"../../helpers/Notification\";\n\nclass RoomFacilityAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.resetFormData();\n    }\n\n    onSubmit = values => {\n        if (!this.validate(values)) {\n            return;\n        }\n\n        const data = {\n            id: values.id,\n            name: {\n                vi: values.name_vi,\n                en: values.name_en,\n                jp: {\n                    kanji: values.name_jp_kanji,\n                    romaji: values.name_jp_romaji\n                },\n                kr: values.name_kr,\n            },\n            description: {\n                vi: values.description_vi,\n                en: values.description_en,\n                jp: {\n                    kanji: values.description_jp_kanji,\n                    romaji: values.description_jp_romaji\n                },\n                kr: values.description_kr,\n            }\n        };\n        //add variant\n        this.props.add({\n            data: data\n        });\n    };\n\n    validate(values) {\n\n        let errors = [];\n        if (values.name_vi === '' && values.name_en === '' && values.name_jp_kanji === '' && values.name_jp_romaji === '') {\n            errors.push('Vui lòng nhập Tên');\n        }\n\n        if (errors.length > 0) {\n            notification.error(errors);\n            return false;\n        }\n        return true;\n    }\n\n    render() {\n        return (\n            <VariantForm\n                submitHandler={this.onSubmit}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.roomFacilityReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(RoomFacilityAdd));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport actions from \"../../redux/roomFacility/action\";\nimport { Link, withRouter } from 'react-router-dom';\nimport { Breadcrumb } from \"react-bootstrap\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport * as PageUrls from '../../configs/PagesUrl';\nimport RoomFacilityAdd from '../../components/RoomFacility/Add';\n\nclass ScreensRoomFacilityAdd extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_ROOM_FACILITY_LIST}>\n                            {messages['roomfacility.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['roomfacility.add.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <RoomFacilityAdd />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensRoomFacilityAdd));\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/roomFacility/action\";\nimport { withRouter } from 'react-router-dom';\nimport VariantForm from './Form';\nimport notification from \"../../helpers/Notification\";\n\nclass RoomFacilityEdit extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.resetFormData();\n    }\n\n    onSubmit = values => {\n        if (!this.validate(values)) {\n            return;\n        }\n\n        const data = {\n            id: values.id,\n            name: {\n                vi: values.name_vi,\n                en: values.name_en,\n                jp: {\n                    kanji: values.name_jp_kanji,\n                    romaji: values.name_jp_romaji\n                },\n                kr: values.name_kr,\n            },\n            description: {\n                vi: values.description_vi,\n                en: values.description_en,\n                jp: {\n                    kanji: values.description_jp_kanji,\n                    romaji: values.description_jp_romaji\n                },\n                kr: values.description_kr,\n            }\n        };\n        //add variant\n        this.props.edit({\n            data: data\n        });\n    };\n\n    validate(values) {\n\n        if (values.id === '') {\n            notification.error('Record does not exist');\n            return false;\n        }\n\n        let errors = [];\n        if (values.name_vi === '' && values.name_en === '' && values.name_jp_kanji === '' && values.name_jp_romaji === '') {\n            errors.push('Vui lòng nhập Tên');\n        }\n\n        if (errors.length > 0) {\n            notification.error(errors);\n            return false;\n        }\n        return true;\n    }\n\n    componentDidMount() {\n        this.props.getById(this.props.match.params.variantId);\n    }\n\n    render() {\n\n        return (\n            <VariantForm\n                submitHandler={this.onSubmit}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.roomFacilityReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(RoomFacilityEdit));\n","import React from 'react';\nimport {Breadcrumb} from \"react-bootstrap\";\nimport * as PageUrls from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport { withRouter } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/roomFacility/action\";\nimport RoomFacilityEdit from \"../../components/RoomFacility/Edit\";\n\nclass ScreensRoomFacilityEdit extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_ROOM_FACILITY_LIST}>\n                            {messages['roomfacility.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['roomfacility.edit.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <RoomFacilityEdit />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensRoomFacilityEdit));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport { useFormik } from 'formik';\nimport Form from \"react-bootstrap/Form\";\nimport {PAGE_ROOM_FACILITY_LIST} from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../Common/Spinner\";\n\nconst VariantFormDetails = (props) => {\n        const lang = props.languageSwitcher.languageMessages;\n        const { formData } = props;\n\n        let initialValues = {\n            id: formData.id,\n            name_en: formData.name.en,\n            name_vi: formData.name.vi,\n            name_jp_kanji: formData.name.jp.kanji,\n            name_jp_romaji: formData.name.jp.romaji,\n            name_kr: formData.name.kr,\n            description_en: formData.description.en,\n            description_vi: formData.description.vi,\n            description_jp_kanji: formData.description.jp.kanji,\n            description_jp_romaji: formData.description.jp.romaji,\n            description_kr: formData.description.kr,\n        };\n        //convert null value to empty, else formik will not work\n        Object.keys(initialValues).forEach(key => {\n            if (initialValues[key] === undefined || initialValues[key] === null) {\n                initialValues[key] = '';\n            }\n        });\n\n        let formik = useFormik({\n            initialValues: initialValues,\n            enableReinitialize: true,\n            onSubmit: values => {\n                props.submitHandler(values);\n            },\n        });\n\n        return (\n            <div className=\"box box-primary\">\n                <SpinnerComponent show={props.isCallingApi}> </SpinnerComponent>\n                <Form onSubmit={formik.handleSubmit}>\n                    <div className=\"box-body\">\n                        <Tabs defaultActiveKey=\"home\">\n                            <Tab eventKey=\"home\" title=\"Tên\">\n                                <Form.Group>\n                                    <Form.Label>Vi</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"name_vi\"\n                                        name=\"name_vi\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_vi}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>En</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"name_en\"\n                                        name=\"name_en\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_en}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Jp Kanji</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"name_jp_kanji\"\n                                        name=\"name_jp_kanji\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_jp_kanji}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Jp Romaji</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"name_jp_romaji\"\n                                        name=\"name_jp_romaji\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_jp_romaji}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Kr</Form.Label>\n                                    <Form.Control disabled\n                                                  id=\"name_kr\"\n                                                  name=\"name_kr\"\n                                                  type=\"text\"\n                                                  onChange={formik.handleChange}\n                                                  value={formik.values.name_kr}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"description\" title=\"Mô tả chi tiết\">\n                                <Form.Group>\n                                    <Form.Label>Vi</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"description_vi\"\n                                        name=\"description_vi\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.description_vi}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>En</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"description_en\"\n                                        name=\"description_en\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.description_en}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Jp Kanji</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"description_jp_kanji\"\n                                        name=\"description_jp_kanji\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.description_jp_kanji}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Jp Romaji</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"description_jp_romaji\"\n                                        name=\"description_jp_romaji\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.description_jp_romaji}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Kr</Form.Label>\n                                    <Form.Control disabled\n                                                  id=\"description_kr\"\n                                                  name=\"description_kr\"\n                                                  type=\"text\"\n                                                  onChange={formik.handleChange}\n                                                  value={formik.values.description_kr}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                        </Tabs>\n                    </div>\n                    <div className=\"box-footer text-center\">\n                        <button type=\"submit\" className=\"btn btn-info\">{lang['layout.button.delete']}</button>\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={(event) => {props.history.push(PAGE_ROOM_FACILITY_LIST)} }>{lang['layout.button.cancel']}</button>\n                    </div>\n                </Form>\n            </div>\n        );\n};\nconst mapStateToProps = (state) => ({\n    ...state.roomFacilityReducer,\n    ...state.layoutReducer,\n    ...state\n});\nexport default withRouter(connect(mapStateToProps, {})(VariantFormDetails));\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/roomFacility/action\";\nimport { withRouter } from 'react-router-dom';\nimport VariantFormDetails from './FormDetails';\n\nclass RoomFacilityDelete extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.resetFormData();\n    }\n\n    onSubmit = values => {\n        this.props.delete(values.id);\n    };\n\n    componentDidMount() {\n        this.props.getById(this.props.match.params.variantId);\n    }\n\n    render() {\n\n        const lang = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <React.Fragment>\n            <p>{lang['message.confirmDelete']}</p>\n            <VariantFormDetails\n                submitHandler={this.onSubmit}\n            />\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.roomFacilityReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(RoomFacilityDelete));\n","import React from 'react';\nimport {Breadcrumb} from \"react-bootstrap\";\nimport * as PageUrls from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport { withRouter } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/roomFacility/action\";\nimport RoomFacilityDelete from \"../../components/RoomFacility/Delete\";\n\nclass ScreensRoomFacilityDelete extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_ROOM_FACILITY_LIST}>\n                            {messages['roomfacility.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['roomfacility.delete.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <RoomFacilityDelete />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensRoomFacilityDelete));\n","const pageActions = {\n    PAGE_UPDATE_FILTER: \"PAGE_UPDATE_FILTER\",\n    PAGE_GET_LIST: \"PAGE_GET_LIST\",\n    PAGE_GET_LIST_SUCCESS: \"PAGE_GET_LIST_SUCCESS\",\n    PAGE_GET_LIST_FAILED: \"PAGE_GET_LIST_FAILED\",\n    PAGE_GET_DETAIL: \"PAGE_GET_DETAIL\",\n    PAGE_GET_DETAIL_SUCCESS: \"PAGE_GET_DETAIL_SUCCESS\",\n    PAGE_GET_DETAIL_FAILED: \"PAGE_GET_DETAIL_FAILED\",\n    PAGE_STATUS_SUCCESS: \"PAGE_STATUS_SUCCESS\",\n    PAGE_STATUS_FAILED: \"PAGE_STATUS_FAILED\",\n    PAGE_ADD: \"PAGE_ADD\",\n    PAGE_ADD_SUCCESS: \"PAGE_ADD_SUCCESS\",\n    PAGE_EDIT: \"PAGE_EDIT\",\n    PAGE_EDIT_SUCCESS: \"PAGE_EDIT_SUCCESS\",\n    PAGE_DELETE: \"PAGE_DELETE\",\n    PAGE_DELETE_SUCCESS: \"PAGE_DELETE_SUCCESS\",\n    PAGE_DELETE_FAILED: \"PAGE_DELETE_FAILED\",\n    PAGE_UPLOAD_IMAGE: \"PAGE_UPLOAD_IMAGE\",\n    PAGE_UPLOAD_IMAGE_SUCCESS: \"PAGE_UPLOAD_IMAGE_SUCCESS\",\n    PAGE_UPLOAD_IMAGE_FAILED: \"PAGE_UPLOAD_IMAGE_FAILED\",\n    PAGE_UPLOAD_LOGO: \"PAGE_UPLOAD_LOGO\",\n    PAGE_UPLOAD_LOGO_SUCCESS: \"PAGE_UPLOAD_LOGO_SUCCESS\",\n    PAGE_UPLOAD_LOGO_FAILED: \"PAGE_UPLOAD_LOGO_FAILED\",\n\n    PAGE_GET_LIST_GROUP: \"ROOM_GET_LIST_GROUP\",\n    PAGE_GET_LIST_GROUP_SUCCESS: \"ROOM_GET_LIST_GROUP_SUCCESS\",\n    PAGE_RESET_FORM_DATA: \"ROOM_RESET_FORM_DATA\",\n\n    updateFilter(filter) {\n        return {\n            type: pageActions.PAGE_UPDATE_FILTER,\n            filter: filter\n        }\n    },\n    getList(filter) {\n        return {\n            type: pageActions.PAGE_GET_LIST,\n            filter: filter\n        }\n    },\n    getById(params) {\n        return {\n            type: pageActions.PAGE_GET_DETAIL,\n            params: params\n        }\n    },\n    add(params) {\n        return {\n            type: pageActions.PAGE_ADD,\n            params: params\n        }\n    },\n    edit(params) {\n        return {\n            type: pageActions.PAGE_EDIT,\n            params: params\n        }\n    },\n    delete(params) {\n        return {\n            type: pageActions.PAGE_DELETE,\n            params: params\n        }\n    },\n    uploadImage(params) {\n        return {\n            type: pageActions.PAGE_UPLOAD_IMAGE,\n            params: params\n        }\n    },\n    uploadLogo(params) {\n        return {\n            type: pageActions.PAGE_UPLOAD_LOGO,\n            params: params\n        }\n    },\n    getListGroup() {\n        return {\n            type: pageActions.PAGE_GET_LIST_GROUP\n        }\n    },\n    resetFormData() {\n        return {\n            type: pageActions.PAGE_RESET_FORM_DATA\n        }\n    },\n};\nexport default pageActions;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Modal } from 'react-bootstrap';\nimport actions from '../../../redux/page/action';\n\nclass Filter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleApplyFilterButton = this.applyFilter.bind(this);\n        this.handleDiscardsFilterButton = this.discardFilter.bind(this);\n        this.changeSearchText = this.changeSearchTextFunc.bind(this);\n        this.changeGroup = this.changeGroupFunc.bind(this);\n\n        //need same param name in reducer.filter which we want override\n        this.state = {\n            ...this.props.filter,\n            group_id: this.props.filter.group_id\n        };\n    }\n    applyFilter() {\n        //simple clone value of state pass back to parent callback\n        this.props.onApplyFilter({...this.state});\n    }\n    discardFilter() {\n        //discard meaning reset all state params\n        this.setState({ s: '', group_id: 0}, () => {\n            //simple clone value of state pass back to parent callback\n            this.props.onApplyFilter({...this.state});\n        })\n    }\n    changeSearchTextFunc(e) {\n        this.setState({ s: e.target.value});\n    }\n    changeGroupFunc(e) {\n        this.setState({ group_id: e.target.value});\n    }\n    componentDidMount() {\n        this.props.getListGroup();\n    }\n\n    render() {\n\n        const lang = this.props.languageSwitcher.languageMessages;\n        const { listGroup } = this.props;\n\n        return (\n            <Modal\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                show={this.props.show}\n                onHide={this.props.closePopup}\n                className=\"popup_inner popup_inner_filter\"\n            >\n                <Modal.Header closeButton className=\"box-header-filter\">\n                    <Modal.Title id=\"contained-modal-title-vcenter\" className=\"box-title-filter\">\n                        {lang['layout.title.filterList']}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form className=\"form-horizontal\">\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"user\" className=\"col-md-3 control-label\">Search by Layout Type or Sub Type</label>\n                            <div className=\"col-md-9\">\n                                <input type=\"text\" className=\"form-control\"\n                                       value={this.state.s}\n                                       onChange={this.changeSearchText}\n                                       id=\"s\" name=\"s\" placeholder=\"Enter any chars to search\" />\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"group_id\" className=\"col-md-3 control-label\">Group</label>\n                            <div className=\"col-md-9\">\n                                <select className=\"form-control\"\n                                      onChange={this.changeGroup}\n                                      value={this.state.group_id}>\n                                    <option value=\"0\">{lang['common.select.default']}</option>\n                                    {listGroup.map(d => (\n                                        <option key={d.id} value={d.id}>{d.name.vi} - {d.name.en} - {d.name.jp.kanji} - {d.name.jp.romaji}</option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={this.handleDiscardsFilterButton} >\n                        <i className=\"fa fa-times mr-1\"> </i>\n                        {lang['layout.button.discardFilter']}\n                    </button>\n                    <button type=\"button\" className=\"btn btn-primary ml-1\" onClick={this.handleApplyFilterButton} >\n                        <i className=\"fa fa-check mr-1\"> </i>\n                        {lang['layout.button.applyFilter']}\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n}\nconst mapStateToProps = (state) => ({\n    ...state.pageReducer,\n    ...state,\n});\n\nexport default connect(mapStateToProps, actions)(Filter);","import React from 'react';\nimport * as PagesUrl from '../../configs/PagesUrl';\nimport {Link} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport actions from '../../redux/page/action';\nimport {withRouter} from 'react-router-dom';\nimport Paginator from \"../../common/Paginator\";\nimport Filter from \"./Popup/Filter\";\nimport {Table} from 'react-bootstrap';\nimport { toVND } from \"../../helpers/Ultis\";\nimport SpinnerComponent from \"../Common/Spinner\";\n\nclass PageList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showPopupFilter: false,\n        };\n        this.onChangePageNumber = this.handlePaging.bind(this);\n        this.onChangeItemPerPage = this.handleItemPerPage.bind(this);\n        this.onApplyFilter = this.handleFilter.bind(this);\n    }\n\n    togglePopupFilter() {\n        this.setState({\n            showPopupFilter: !this.state.showPopupFilter\n        });\n    }\n\n    componentDidMount() {\n        this.props.getList({\n            ...this.props.filter\n        });\n    }\n\n    async handlePaging(pageNumber) {\n        //update filter first, so paging number can changed\n        await this.props.updateFilter({\n            ...this.props.filter,\n            page: pageNumber\n        });\n        await this.getList();\n    }\n\n    async handleItemPerPage(itemPerPage) {\n        //update filter first, so paging number can changed\n        //change item per page must reset page to 1\n        await this.props.updateFilter({\n            ...this.props.filter,\n            per_page: itemPerPage,\n            page: 1\n        });\n        await this.getList();\n    }\n\n    async handleFilter(params) {\n        console.log(params);\n        this.setState({showPopupFilter: false}, async () => {\n            //update filter first, so paging number can changed\n            //change item per page must reset page to 1\n            await this.props.updateFilter({\n                ...this.props.filter,\n                ...params,\n                page: 1\n            });\n            await this.getList();\n        });\n    }\n\n    getList() {\n        this.props.getList(this.props.filter);\n    }\n\n    renderList(listData) {\n        if (listData === undefined || listData.items === undefined) return;\n\n        return listData.items.map((row) => {\n            return (\n                <tr key={row.id}>\n                    <td>{row.id}</td>\n                    <td>{row.title}</td>\n                    <td>{row.description}</td>\n                    <td>{row.group_id}</td>\n                    <td>{row.layout}</td>\n                    <td>{row.type}</td>\n                    <td>{row.max_item}</td>\n                    <td style={{width: '200px', textAlign: 'center'}}>\n                        <img style={{width: '100%'}} alt={row.code} src={row.sample_image} />\n                    </td>\n                    <td className=\"text-nowrap text-center\">\n                        <span className=\"action-link ml-1\">\n                            <Link to={PagesUrl.PAGE_MASTER_PAGE_EDIT + '/' + row.id} className=\"btn btn-sm btn-success\">\n                                <i className=\"fa fa-pencil\"> </i>\n                            </Link>\n                        </span>\n                        <span className=\"action-link ml-1\">\n                            <Link to={PagesUrl.PAGE_MASTER_PAGE_DELETE + '/' + row.id} className=\"btn btn-sm btn-danger\">\n                                <i className=\"fa fa-trash\"> </i>\n                            </Link>\n                        </span>\n                    </td>\n                </tr>\n            );\n        });\n    }\n\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <React.Fragment>\n                <div className=\"box\">\n                    <div className=\"box-header with-border\">\n                        <div className=\"float-md-right mt-2 mt-md-0\">\n                            <button type=\"button\" className=\"btn btn-secondary btn-sm ml-1\"\n                                    >Import\n                            </button>\n                            <Link to={PagesUrl.PAGE_MASTER_PAGE_ADD}>\n                                <button type=\"button\"\n                                        className=\"btn btn-primary btn-sm ml-1\">{messages['layout.button.register']}</button>\n                            </Link>\n                        </div>\n                    </div>\n                    <div className=\"box-body\">\n                        <div className=\"datatable_container\">\n                            <Paginator\n                                total={this.props.listData.total}\n                                itemPerPage={this.props.filter.per_page}\n                                currentPage={this.props.filter.page}\n                                onChangePageNumber={this.onChangePageNumber}\n                                onChangeItemPerPage={this.onChangeItemPerPage}\n                                onTogglePopupFilter={this.togglePopupFilter.bind(this)}\n                                filterData={this.props.filter}\n                            />\n                            <div className=\"row m-0 my-2\">\n                                <div className=\"col-sm-12 p-0\">\n                                    <Table bordered hover responsive size=\"sm\" className=\"table-custom mb-0\">\n                                        <thead>\n                                        <tr>\n                                            <th>Id</th>\n                                            <th>Title</th>\n                                            <th>Mô tả chi tiết</th>\n                                            <th>Group Id</th>\n                                            <th>Layout Type</th>\n                                            <th>Sub Type</th>\n                                            <th>Max Item</th>\n                                            <th>Sample Image</th>\n                                            <th style={{ width: '100px' }} rowSpan={2}>{messages['layout.column.action']}</th>\n                                        </tr>\n                                        </thead>\n                                        <tbody>\n                                        {this.renderList(this.props.listData)}\n                                        </tbody>\n                                    </Table>\n                                </div>\n                            </div>\n                            <div className=\"block-paging-bottom\">\n                                <Paginator\n                                    total={this.props.listData.total}\n                                    itemPerPage={this.props.filter.per_page}\n                                    currentPage={this.props.filter.page}\n                                    onChangePageNumber={this.onChangePageNumber}\n                                    onChangeItemPerPage={this.onChangeItemPerPage}\n                                    filterData={this.props.filter}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    {this.state.showPopupFilter ?\n                        <Filter\n                            show={this.state.showPopupFilter}\n                            closePopup={this.togglePopupFilter.bind(this)}\n                            onApplyFilter={this.onApplyFilter}\n                        />\n                        : null\n                    }\n                </div>\n                <SpinnerComponent show={props.isCallingApi}> </SpinnerComponent>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.pageReducer,\n    ...state.layoutReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(PageList));","import React from 'react';\nimport { connect } from \"react-redux\";\nimport PageList from '../../components/Page/List';\nimport actions from \"../../redux/auth/action\";\nimport { withRouter } from 'react-router-dom';\n\nclass ScreensPageList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <h1>\n                        {messages['page.title']}\n                    </h1>\n                </section>\n                <section className=\"content\">\n                    <div className=\"row m-0\">\n                        <div className=\"col-12 p-0\">\n                            <PageList />\n                        </div>\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps,actions)(ScreensPageList));","import React from 'react';\nclass ScreensPageDetail extends React.Component {\n    render() {\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <h1>\n                        Detail Page\n                    </h1>\n                </section>\n                <section className=\"content\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"box box-primary\">\n                                <form className=\"form-horizontal\">\n                                <div className=\"box-body\">\n                                    <div className=\"form-group row\">\n                                        <label htmlFor=\"user_group\" className=\"col-sm-3 col-md-2 control-label\">Group</label>\n                                        <div className=\"col-sm-9 col-md-9 col-lg-8\">\n                                            <select className=\"form-control\" id=\"cat_group\" name=\"group\">\n                                                <option value=\"food\">Food</option>\n                                                <option value=\"drink\">Drink</option>\n                                                <option value=\"new\">New</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group row\">\n                                        <label htmlFor=\"\" className=\"col-sm-2 col-md-2 control-label\">Tên</label>\n                                        <div className=\"col-sm-2 col-md-2 col-lg-2\">\n                                            <select className=\"form-control\" id=\"cat_group\" name=\"group\">\n                                                <option value=\"food\">VN</option>\n                                                <option value=\"drink\">JP</option>\n                                                <option value=\"new\">EN</option>\n                                            </select>\n                                        </div>\n                                        <div className=\"col-sm-6 col-md-6 col-lg-6\">\n                                            <input type=\"text\" className=\"form-control\" id=\"cat_name\" name=\"name\" placeholder=\"\" />\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group row\">\n                                        <label htmlFor=\"\" className=\"col-sm-2 col-md-2 control-label\">Mô tả chi tiết</label>\n                                        <div className=\"col-sm-2 col-md-2 col-lg-2\">\n                                            <select className=\"form-control\" id=\"cat_group\" name=\"group\">\n                                                <option value=\"food\">VN</option>\n                                                <option value=\"drink\">JP</option>\n                                                <option value=\"new\">EN</option>\n                                            </select>\n                                        </div>\n                                        <div className=\"col-sm-6 col-md-6 col-lg-6\">\n                                            <input type=\"text\" className=\"form-control\" id=\"cate_desc\" name=\"description\" placeholder=\"\" />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"box-footer text-center\">\n                                    <button type=\"button\" className=\"btn btn-secondary\">Cancel</button>\n                                </div>\n                            </form>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}\n\nexport default ScreensPageDetail;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {withRouter} from 'react-router-dom';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport {useFormik} from 'formik';\nimport Form from \"react-bootstrap/Form\";\nimport ImageUploader from 'react-images-upload';\nimport {PAGE_MASTER_PAGE_LIST} from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../Common/Spinner\";\n\nconst PageForm = (props) => {\n    const lang = props.languageSwitcher.languageMessages;\n    const {buttonStyle, listGroup, formData} = props;\n\n    let initialValues = {\n        id: formData.id,\n        title: formData.title,\n        layout: formData.layout,\n        type: formData.type,\n        description: formData.description,\n        max_item: formData.max_item,\n        sample_image: formData.sample_image,\n        group_id: formData.group_id,\n        sample_image_origin: formData.sample_image_origin\n    };\n\n    //convert null value to empty, else formik will not work\n    Object.keys(initialValues).forEach(key => {\n        if (initialValues[key] === undefined || initialValues[key] === null) {\n            initialValues[key] = '';\n        }\n    });\n\n    let formik = useFormik({\n        initialValues: initialValues,\n        enableReinitialize: true,\n        onSubmit: values => {\n            props.submitHandler(values);\n        },\n    });\n\n    const onDrop = (pictureSelected, pictureDataURLs) => {\n        props.handleImageSelected(pictureSelected, pictureDataURLs);\n    };\n\n    const uploadButtonLabel = (formData.id !== undefined && formData.id !== '') ?\n        'Choose new image to replace current one' : 'Choose image';\n\n    return (\n        <div className=\"box box-primary\">\n            <SpinnerComponent show={props.isCallingApi}> </SpinnerComponent>\n            <Form onSubmit={formik.handleSubmit}>\n                <div className=\"box-body\">\n                    <Form.Group>\n                        <Form.Label>Title *</Form.Label>\n                        <Form.Control\n                            id=\"title\"\n                            name=\"title\"\n                            type=\"text\"\n                            onChange={formik.handleChange}\n                            value={formik.values.title}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Mô tả chi tiết</Form.Label>\n                        <Form.Control\n                            id=\"description\"\n                            name=\"description\"\n                            type=\"text\"\n                            onChange={formik.handleChange}\n                            value={formik.values.description}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Layout Type *</Form.Label>\n                        <Form.Control\n                            id=\"layout\"\n                            name=\"layout\"\n                            type=\"text\"\n                            onChange={formik.handleChange}\n                            value={formik.values.layout}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Sub Type</Form.Label>\n                        <Form.Control\n                            id=\"type\"\n                            name=\"type\"\n                            type=\"text\"\n                            onChange={formik.handleChange}\n                            value={formik.values.type}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Max Item *</Form.Label>\n                        <Form.Control\n                            id=\"max_item\"\n                            name=\"max_item\"\n                            type=\"number\"\n                            onChange={formik.handleChange}\n                            value={formik.values.max_item}\n                        />\n                    </Form.Group>\n                    {formData.id !== '' ? (\n                            <Form.Group>\n                                <Form.Label>Current Sample Image</Form.Label>\n                                <Form.Text>\n                                    <img style={{width:'400px'}} src={formData.sample_image} alt=\"Current Image\"/>\n                                </Form.Text>\n                            </Form.Group>)\n                        : ''}\n                    <Form.Group>\n                        <Form.Label>Sample Image *</Form.Label>\n                        <ImageUploader\n                            singleImage={true}\n                            withIcon={true}\n                            buttonText={uploadButtonLabel}\n                            onChange={onDrop}\n                            imgExtension={['.jpg', '.png', '.gif']}\n                            maxFileSize={5242880}\n                            withPreview={true}\n                            buttonStyles={buttonStyle}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Group</Form.Label>\n                        <Form.Control as=\"select\"\n                                      id=\"group_id\"\n                                      name=\"group_id\"\n                                      onChange={formik.handleChange}\n                                      value={formik.values.group_id}>\n                            <option value=\"0\">{lang['common.select.default']}</option>\n                            {listGroup.map(d => (\n                                <option key={d.id}\n                                        value={d.id}>{d.name.vi} - {d.name.en} - {d.name.jp.kanji} - {d.name.jp.romaji}</option>\n                            ))}\n                        </Form.Control>\n                    </Form.Group>\n                </div>\n                <div className=\"box-footer text-center\">\n                    <button type=\"submit\" className=\"btn btn-info\">{lang['layout.button.save']}</button>\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={(event) => {\n                        props.history.push(PAGE_MASTER_PAGE_LIST)\n                    }}>{lang['layout.button.cancel']}</button>\n                </div>\n            </Form>\n        </div>\n    );\n};\nconst mapStateToProps = (state) => ({\n    ...state.pageReducer,\n    ...state.layoutReducer,\n    ...state\n});\nexport default withRouter(connect(mapStateToProps, {})(PageForm));","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/page/action\";\nimport { withRouter } from 'react-router-dom';\nimport PageForm from './Form';\nimport notification from \"../../helpers/Notification\";\n\nclass PageAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            localImageFile: [],\n            localImageData: [],\n        };\n        this.props.resetFormData();\n    }\n\n    handleImageSelected = (pictureSelected, pictureDataURLs)  => {\n        if (pictureSelected.length > 0) {\n            this.setState({\n                localImageFile: [pictureSelected[pictureSelected.length - 1]],\n                localImageData: [pictureDataURLs[pictureDataURLs.length - 1]]\n            });\n        } else {\n            this.setState({\n                localImageFile: [],\n                localImageData: []\n            });\n        }\n    };\n\n    onSubmit = values => {\n        if (!this.validate(values)) {\n            return;\n        }\n\n        const data = {\n            id: values.id,\n            title: values.title,\n            description: values.description,\n            layout: values.layout,\n            type: values.type,\n            max_item: values.max_item,\n            sample_image: values.sample_image,\n            group_id: values.group_id\n        };\n        //add\n        this.props.add({\n            data: data,\n            image: this.state.localImageFile[0]\n        });\n    };\n\n    validate(values) {\n\n        let errors = [];\n        if (values.title === '') {\n            errors.push('Title is required');\n        }\n        if (values.layout === '') {\n            errors.push('Layout type is required');\n        }\n        if (values.max_item === '' || values.max_item <= 0) {\n            errors.push('Max item is required');\n        }\n        if (this.state.localImageFile.length === 0) {\n            errors.push('Image is required');\n        }\n\n        if (errors.length > 0) {\n            notification.error(errors);\n            return false;\n        }\n        return true;\n    }\n\n    componentDidMount() {\n        this.props.getListGroup();\n    }\n\n    render() {\n\n        let buttonStyle = {};\n        if (this.state.localImageData.length > 0) {\n            buttonStyle = {display: 'none'};\n        }\n\n        return (\n            <PageForm\n                submitHandler={this.onSubmit}\n                handleUploadImage={this.handleUploadImage}\n                handleImageSelected={this.handleImageSelected}\n                buttonStyle={buttonStyle}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.pageReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(PageAdd));","import React from 'react';\nimport { connect } from \"react-redux\";\nimport actions from \"../../redux/page/action\";\nimport { Link, withRouter } from 'react-router-dom';\nimport { Breadcrumb } from \"react-bootstrap\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport * as PageUrls from '../../configs/PagesUrl';\nimport PageAdd from '../../components/Page/Add';\n\nclass ScreensPageAdd extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_MASTER_PAGE_LIST}>\n                            {messages['page.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['page.add.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <PageAdd />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensPageAdd));","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/page/action\";\nimport { withRouter } from 'react-router-dom';\nimport PageForm from './Form';\nimport notification from \"../../helpers/Notification\";\n\nclass PageEdit extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            localImageFile: [],\n            localImageData: [],\n        };\n        this.props.resetFormData();\n    }\n\n    handleImageSelected = (pictureSelected, pictureDataURLs)  => {\n        if (pictureSelected.length > 0) {\n            this.setState({\n                localImageFile: [pictureSelected[pictureSelected.length - 1]],\n                localImageData: [pictureDataURLs[pictureDataURLs.length - 1]]\n            });\n        } else {\n            this.setState({\n                localImageFile: [],\n                localImageData: []\n            });\n        }\n    };\n\n    onSubmit = values => {\n        if (!this.validate(values)) {\n            return;\n        }\n\n        const data = {\n            id: values.id,\n            title: values.title,\n            description: values.description,\n            layout: values.layout,\n            type: values.type,\n            max_item: values.max_item,\n            sample_image: values.sample_image,\n            group_id: values.group_id,\n            sample_image_origin: values.sample_image_origin\n        };\n        //update\n        if (this.state.localImageFile.length > 0) {\n            this.props.edit({\n                data: data,\n                image: this.state.localImageFile[0]\n            });\n        } else {\n            this.props.edit({\n                data: data,\n            });\n        }\n    };\n\n    validate(values) {\n\n        if (values.id === '') {\n            notification.error('Record does not exist');\n            return false;\n        }\n\n        let errors = [];\n        if (values.title === '') {\n            errors.push('Title is required');\n        }\n        if (values.layout === '') {\n            errors.push('Layout type is required');\n        }\n        if (values.max_item === '' || values.max_item <= 0) {\n            errors.push('Max item is required');\n        }\n\n        if (errors.length > 0) {\n            notification.error(errors);\n            return false;\n        }\n        return true;\n    }\n\n    componentDidMount() {\n        this.props.getListGroup();\n        this.props.getById(this.props.match.params.pageId);\n    }\n\n    render() {\n\n        let buttonStyle = {};\n        if (this.state.localImageData.length > 0) {\n            buttonStyle = {display: 'none'};\n        }\n\n        return (\n            <PageForm\n                submitHandler={this.onSubmit}\n                handleUploadImage={this.handleUploadImage}\n                handleImageSelected={this.handleImageSelected}\n                buttonStyle={buttonStyle}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.pageReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(PageEdit));","import React from 'react';\nimport {Breadcrumb} from \"react-bootstrap\";\nimport * as PageUrls from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport { withRouter } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/page/action\";\nimport PageEdit from \"../../components/Page/Edit\";\n\nclass ScreensPageEdit extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_MASTER_PAGE_LIST}>\n                            {messages['page.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['page.edit.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <PageEdit />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensPageEdit));","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {withRouter} from 'react-router-dom';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport {useFormik} from 'formik';\nimport Form from \"react-bootstrap/Form\";\nimport {PAGE_GROUP_LIST, PAGE_MASTER_PAGE_LIST} from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../Common/Spinner\";\nimport ImageUploader from \"react-images-upload\";\n\nconst PageFormDetails = (props) => {\n    const lang = props.languageSwitcher.languageMessages;\n    const { listGroup, formData } = props;\n\n    let initialValues = {\n        id: formData.id,\n        title: formData.title,\n        layout: formData.layout,\n        type: formData.type,\n        description: formData.description,\n        max_item: formData.max_item,\n        group_id: formData.group_id,\n        sample_image_origin: formData.sample_image_origin\n    };\n    //convert null value to empty, else formik will not work\n    Object.keys(initialValues).forEach(key => {\n        if (initialValues[key] === undefined || initialValues[key] === null) {\n            initialValues[key] = '';\n        }\n    });\n\n    let formik = useFormik({\n        initialValues: initialValues,\n        enableReinitialize: true,\n        onSubmit: values => {\n            props.submitHandler(values);\n        },\n    });\n\n    return (\n        <div className=\"box box-primary\">\n            <SpinnerComponent show={props.isCallingApi}> </SpinnerComponent>\n            <div className=\"box box-primary\">\n                <SpinnerComponent show={props.isCallingApi}> </SpinnerComponent>\n                <Form onSubmit={formik.handleSubmit}>\n                    <div className=\"box-body\">\n                        <Form.Group>\n                            <Form.Label>Title *</Form.Label>\n                            <Form.Control disabled\n                                id=\"title\"\n                                name=\"title\"\n                                type=\"text\"\n                                onChange={formik.handleChange}\n                                value={formik.values.title}\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Mô tả chi tiết</Form.Label>\n                            <Form.Control disabled\n                                id=\"description\"\n                                name=\"description\"\n                                type=\"text\"\n                                onChange={formik.handleChange}\n                                value={formik.values.description}\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Layout Type *</Form.Label>\n                            <Form.Control disabled\n                                id=\"layout\"\n                                name=\"layout\"\n                                type=\"text\"\n                                onChange={formik.handleChange}\n                                value={formik.values.layout}\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Sub Type</Form.Label>\n                            <Form.Control disabled\n                                id=\"type\"\n                                name=\"type\"\n                                type=\"text\"\n                                onChange={formik.handleChange}\n                                value={formik.values.type}\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Max Item *</Form.Label>\n                            <Form.Control disabled\n                                id=\"max_item\"\n                                name=\"max_item\"\n                                type=\"number\"\n                                onChange={formik.handleChange}\n                                value={formik.values.max_item}\n                            />\n                        </Form.Group>\n                        {formData.id !== '' ? (\n                                <Form.Group>\n                                    <Form.Label>Current Sample Image</Form.Label>\n                                    <Form.Text>\n                                        <img style={{width:'400px'}} src={formData.sample_image} alt=\"Current Image\"/>\n                                    </Form.Text>\n                                </Form.Group>)\n                            : ''}\n                        <Form.Group>\n                            <Form.Label>Group</Form.Label>\n                            <Form.Control as=\"select\"\n                                          id=\"group_id\"\n                                          name=\"group_id\"\n                                          onChange={formik.handleChange}\n                                          value={formik.values.group_id}\n                                          disabled\n                            >\n                                <option value=\"0\">{lang['common.select.default']}</option>\n                                {listGroup.map(d => (\n                                    <option key={d.id}\n                                            value={d.id}>{d.name.vi} - {d.name.en} - {d.name.jp.kanji} - {d.name.jp.romaji}</option>\n                                ))}\n                            </Form.Control>\n                        </Form.Group>\n                    </div>\n                    <div className=\"box-footer text-center\">\n                        <button type=\"submit\" className=\"btn btn-info\">{lang['layout.button.delete']}</button>\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={(event) => {\n                            props.history.push(PAGE_MASTER_PAGE_LIST)\n                        }}>{lang['layout.button.cancel']}</button>\n                    </div>\n                </Form>\n            </div>\n        </div>\n    );\n};\nconst mapStateToProps = (state) => ({\n    ...state.pageReducer,\n    ...state.layoutReducer,\n    ...state\n});\nexport default withRouter(connect(mapStateToProps, {})(PageFormDetails));","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/page/action\";\nimport { withRouter } from 'react-router-dom';\nimport PageFormDetails from './FormDetails';\n\nclass PageDelete extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.resetFormData();\n    }\n\n    onSubmit = values => {\n        console.log(values);\n        this.props.delete({id: values.id, image: values.sample_image_origin});\n    };\n\n    componentDidMount() {\n        this.props.getById(this.props.match.params.pageId);\n        this.props.getListGroup();\n    }\n\n    render() {\n\n        const lang = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <React.Fragment>\n            <p>{lang['message.confirmDelete']}</p>\n            <PageFormDetails\n                submitHandler={this.onSubmit}\n            />\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.pageReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(PageDelete));","import React from 'react';\nimport {Breadcrumb} from \"react-bootstrap\";\nimport * as PageUrls from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport { withRouter } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/page/action\";\nimport PageDelete from \"../../components/Page/Delete\";\n\nclass ScreensPageDelete extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_MASTER_PAGE_LIST}>\n                            {messages['page.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['page.delete.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <PageDelete />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensPageDelete));","const roomActions = {\n    ROOM_UPDATE_FILTER: \"ROOM_UPDATE_FILTER\",\n    ROOM_GET_LIST: \"ROOM_GET_LIST\",\n    ROOM_SEARCH_LIST: \"ROOM_SEARCH_LIST\",\n    ROOM_GET_LIST_SUCCESS: \"ROOM_GET_LIST_SUCCESS\",\n    ROOM_GET_LIST_FAILED: \"ROOM_GET_LIST_FAILED\",\n    ROOM_GET_DETAIL: \"ROOM_GET_DETAIL\",\n    ROOM_GET_DETAIL_SUCCESS: \"ROOM_GET_DETAIL_SUCCESS\",\n    ROOM_STATUS_SUCCESS: \"ROOM_STATUS_SUCCESS\",\n    ROOM_STATUS_FAILED: \"ROOM_STATUS_FAILED\",\n    ROOM_ADD: \"ROOM_ADD\",\n    ROOM_ADD_SUCCESS: \"ROOM_ADD_SUCCESS\",\n    ROOM_EDIT: \"ROOM_EDIT\",\n    ROOM_EDIT_SUCCESS: \"ROOM_EDIT_SUCCESS\",\n    ROOM_DELETE: \"ROOM_DELETE\",\n    ROOM_DELETE_SUCCESS: \"ROOM_DELETE_SUCCESS\",\n    ROOM_GET_LIST_ROOM_TYPE: \"ROOM_GET_LIST_ROOM_TYPE\",\n    ROOM_GET_LIST_ROOM_TYPE_SUCCESS: \"ROOM_GET_LIST_ROOM_TYPE_SUCCESS\",\n    ROOM_UPLOAD_IMAGE: \"ROOM_UPLOAD_IMAGE\",\n    ROOM_UPLOAD_IMAGE_SUCCESS: \"ROOM_UPLOAD_IMAGE_SUCCESS\",\n    ROOM_UPLOAD_IMAGE_FAILED: \"ROOM_UPLOAD_IMAGE_FAILED\",\n    ROOM_GET_LIST_GROUP: \"ROOM_GET_LIST_GROUP\",\n    ROOM_GET_LIST_GROUP_SUCCESS: \"ROOM_GET_LIST_GROUP_SUCCESS\",\n    ROOM_RESET_FORM_DATA: \"ROOM_RESET_FORM_DATA\",\n    ROOM_GET_LIST_ROOM_FACILITY: \"ROOM_GET_LIST_ROOM_FACILITY\",\n    ROOM_GET_LIST_ROOM_FACILITY_SUCCESS: \"ROOM_GET_LIST_ROOM_FACILITY_SUCCESS\",\n    ROOM_ADD_IMAGE: \"ROOM_ADD_IMAGE\",\n    ROOM_ADD_IMAGE_SUCCESS: \"ROOM_ADD_IMAGE_SUCCESS\",\n    ROOM_ADD_IMAGE_FAILED: \"ROOM_ADD_IMAGE_FAILED\",\n    ROOM_DELETE_IMAGE: \"ROOM_DELETE_IMAGE\",\n    ROOM_DELETE_IMAGE_SUCCESS: \"ROOM_DELETE_IMAGE_SUCCESS\",\n    ROOM_DELETE_IMAGE_FAILED: \"ROOM_DELETE_IMAGE_FAILED\",\n    ROOM_SEARCH_FE: \"ROOM_SEARCH_FE\",\n\n    updateFilter(filter) {\n        return {\n            type: roomActions.ROOM_UPDATE_FILTER,\n            filter: filter\n        }\n    },\n    getList(filter) {\n        return {\n            type: roomActions.ROOM_GET_LIST,\n            filter: filter\n        }\n    },\n    getById(params) {\n        return {\n            type: roomActions.ROOM_GET_DETAIL,\n            params: params\n        }\n    },\n    add(params) {\n        return {\n            type: roomActions.ROOM_ADD,\n            params: params\n        }\n    },\n    edit(params) {\n        return {\n            type: roomActions.ROOM_EDIT,\n            params: params\n        }\n    },\n    delete(params) {\n        return {\n            type: roomActions.ROOM_DELETE,\n            params: params\n        }\n    },\n    getListRoomType() {\n        return {\n            type: roomActions.ROOM_GET_LIST_ROOM_TYPE\n        }\n    },\n    getListGroup() {\n        return {\n            type: roomActions.ROOM_GET_LIST_GROUP\n        }\n    },\n    uploadImage(params) {\n        return {\n            type: roomActions.ROOM_UPLOAD_IMAGE,\n            params: params\n        }\n    },\n    getListRoomFacility() {\n        return {\n            type: roomActions.ROOM_GET_LIST_ROOM_FACILITY\n        }\n    },\n    resetFormData() {\n        return {\n            type: roomActions.ROOM_RESET_FORM_DATA\n        }\n    },\n    addImage(params) {\n        return {\n            type: roomActions.ROOM_ADD_IMAGE,\n            params: params\n        }\n    },\n    deleteImage(params) {\n        return {\n            type: roomActions.ROOM_DELETE_IMAGE,\n            params: params\n        }\n    },\n    getListFE(filter) {\n        return {\n            type: roomActions.ROOM_SEARCH_FE,\n            filter: filter\n        }\n    },\n};\nexport default roomActions;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Modal } from 'react-bootstrap';\nimport actions from '../../../redux/room/action';\n\nclass Filter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleApplyFilterButton = this.applyFilter.bind(this);\n        this.handleDiscardsFilterButton = this.discardFilter.bind(this);\n        this.changeSearchText = this.changeSearchTextFunc.bind(this);\n        this.changeGroup = this.changeGroupFunc.bind(this);\n        this.changeStatus = this.changeStatusFunc.bind(this);\n\n        //need same param name in reducer.filter which we want override\n        this.state = {\n            ...this.props.filter,\n            room_type_id: this.props.filter.room_type_id\n        };\n    }\n    applyFilter() {\n        //simple clone value of state pass back to parent callback\n        this.props.onApplyFilter({...this.state});\n    }\n    discardFilter() {\n        //discard meaning reset all state params\n        this.setState({ s: '', room_type_id: 0}, () => {\n            //simple clone value of state pass back to parent callback\n            this.props.onApplyFilter({...this.state});\n        })\n    }\n    changeSearchTextFunc(e) {\n        this.setState({ s: e.target.value});\n    }\n    changeGroupFunc(e) {\n        this.setState({ room_type_id: e.target.value});\n    }\n    changeStatusFunc(e) {\n        this.setState({ status: e.target.value});\n    }\n    componentDidMount() {\n        this.props.getListRoomType();\n    }\n\n    render() {\n\n        const lang = this.props.languageSwitcher.languageMessages;\n        const { listRoomType } = this.props;\n\n        return (\n            <Modal\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                show={this.props.show}\n                onHide={this.props.closePopup}\n                className=\"popup_inner popup_inner_filter\"\n            >\n                <Modal.Header closeButton className=\"box-header-filter\">\n                    <Modal.Title id=\"contained-modal-title-vcenter\" className=\"box-title-filter\">\n                        {lang['layout.title.filterList']}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form className=\"form-horizontal\">\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"user\" className=\"col-md-3 control-label\">Tìm</label>\n                            <div className=\"col-md-9\">\n                                <input type=\"text\" className=\"form-control\"\n                                       value={this.state.s}\n                                       onChange={this.changeSearchText}\n                                       id=\"s\" name=\"s\" placeholder=\"Gõ tên để tìm\" />\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"group_id\" className=\"col-md-3 control-label\">Danh mục</label>\n                            <div className=\"col-md-9\">\n                                <select className=\"form-control\"\n                                        onChange={this.changeGroup}\n                                        value={this.state.room_type_id}>\n                                    <option value=\"0\">{lang['common.select.default']}</option>\n                                    {listRoomType.map(d => (\n                                        <option key={d.id} value={d.id}>{d.name.vi} - {d.name.en} </option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"group_id\" className=\"col-md-3 control-label\">Trạng thái</label>\n                            <div className=\"col-md-9\">\n                                <select className=\"form-control\"\n                                        onChange={this.changeStatus}\n                                        value={this.state.status}>\n                                    <option value=\"\">{lang['common.select.default']}</option>\n                                    <option value=\"1\">Hiển thị</option>\n                                    <option value=\"0\">Ẩn</option>\n                                </select>\n                            </div>\n                        </div>\n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={this.handleDiscardsFilterButton} >\n                        <i className=\"fa fa-times mr-1\"> </i>\n                        {lang['layout.button.discardFilter']}\n                    </button>\n                    <button type=\"button\" className=\"btn btn-primary ml-1\" onClick={this.handleApplyFilterButton} >\n                        <i className=\"fa fa-check mr-1\"> </i>\n                        {lang['layout.button.applyFilter']}\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n}\nconst mapStateToProps = (state) => ({\n    ...state.roomReducer,\n    ...state,\n});\n\nexport default connect(mapStateToProps, actions)(Filter);\n","import React from 'react';\nimport * as PagesUrl from '../../configs/PagesUrl';\nimport {Link} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport actions from '../../redux/room/action';\nimport {withRouter} from 'react-router-dom';\nimport Paginator from \"../../common/Paginator\";\nimport Filter from \"./Popup/Filter\";\nimport {Table} from 'react-bootstrap';\nimport { toVND } from \"../../helpers/Ultis\";\nimport SpinnerComponent from \"../Common/Spinner\";\nimport siteConfig from \"../../configs/siteConfig\";\n\nclass RoomList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showPopupFilter: false,\n            searchText: ''\n        };\n        this.onChangePageNumber = this.handlePaging.bind(this);\n        this.onChangeItemPerPage = this.handleItemPerPage.bind(this);\n        this.onApplyFilter = this.handleFilter.bind(this);\n        this.onTypingSearch = this.onTypingSearch.bind(this);\n    }\n\n    togglePopupFilter() {\n        this.setState({\n            showPopupFilter: !this.state.showPopupFilter\n        });\n    }\n\n    componentDidMount() {\n        this.props.getList({\n            ...this.props.filter\n        });\n    }\n\n    async handlePaging(pageNumber) {\n        //update filter first, so paging number can changed\n        await this.props.updateFilter({\n            ...this.props.filter,\n            page: pageNumber,\n            searchText: ''\n        });\n        await this.getList();\n    }\n\n    async handleItemPerPage(itemPerPage) {\n        //update filter first, so paging number can changed\n        //change item per page must reset page to 1\n        await this.props.updateFilter({\n            ...this.props.filter,\n            per_page: itemPerPage,\n            page: 1,\n            searchText: ''\n        });\n        await this.getList();\n    }\n\n    async handleFilter(params) {\n        this.setState({showPopupFilter: false}, async () => {\n            //update filter first, so paging number can changed\n            //change item per page must reset page to 1\n            await this.props.updateFilter({\n                ...this.props.filter,\n                ...params,\n                page: 1,\n                searchText: ''\n            });\n            await this.getList();\n        });\n    }\n\n    getList() {\n        this.props.getList(this.props.filter);\n    }\n\n    renderList(listData) {\n        if (listData === undefined || listData.items === undefined) return;\n\n        return listData.items.map((row) => {\n            return (\n                <tr key={row.id}>\n                    <td>{row.id}</td>\n                    <td>\n                        <a href={siteConfig.siteRoot + 'san-pham/' + row.id} target=\"_blank\" >\n                        {row.name.en}\n                        </a>\n                    </td>\n                    <td>\n                        <a href={siteConfig.siteRoot + 'san-pham/' + row.id} target=\"_blank\" >\n                        {row.name.vi}\n                        </a>\n                    </td>\n                    {/*<td>{row.name.jp.kanji}</td>*/}\n                    {/*<td>{row.name.jp.romaji}</td>*/}\n                    {/*<td>{row.name.kr}</td>*/}\n                    {/*<td dangerouslySetInnerHTML={{__html: row.description.en}}></td>*/}\n                    {/*<td dangerouslySetInnerHTML={{__html: row.description.vi}}></td>*/}\n                    {/*<td dangerouslySetInnerHTML={{__html: row.description.jp.kanji}}></td>*/}\n                    {/*<td dangerouslySetInnerHTML={{__html: row.description.jp.romaji}}></td>*/}\n                    {/*<td dangerouslySetInnerHTML={{__html: row.description.kr}}></td>*/}\n                    {/*<td>{row.price_text.en}</td>*/}\n                    {/*<td>{row.price_text.vi}</td>*/}\n                    {/*<td>{row.price_text.jp.kanji}</td>*/}\n                    {/*<td>{row.price_text.jp.romaji}</td>*/}\n                    {/*<td>{row.price_text.kr}</td>*/}\n                    <td className=\"align-right\">{toVND(row.price)}</td>\n                    <td className=\"align-center\">{parseInt(row.status) === 1 ? <i className=\"fa fa-check\" /> : ''}</td>\n                    <td className=\"align-center\" >\n                        {row.galleries ? row.galleries.length : 0}\n                    </td>\n                    <td style={{width: '200px', textAlign: 'center'}}>\n                        <a href={row.images.source} target=\"_blank\"><img style={{width: '100%'}} alt={row.code} src={row.images.thumbnail} /></a>\n                    </td>\n                    <td className=\"text-nowrap text-center\">\n                        <span className=\"action-link\">\n                            <Link to={PagesUrl.PAGE_ROOM_DETAIL + '/' + row.id} className=\"btn btn-sm btn-info\">\n                                <i className=\"fa fa-eye\"> </i>\n                            </Link>\n                        </span>\n                        <span className=\"action-link ml-1\">\n                            <Link to={PagesUrl.PAGE_ROOM_EDIT + '/' + row.id} className=\"btn btn-sm btn-success\">\n                                <i className=\"fa fa-pencil\"> </i>\n                            </Link>\n                        </span>\n                        <span className=\"action-link ml-1\">\n                            <Link to={PagesUrl.PAGE_ROOM_LIST_IMAGE + '/' + row.id} className=\"btn btn-sm btn-success\">\n                                <i className=\"fa fa-image\"> </i>\n                            </Link>\n                        </span>\n                        <span className=\"action-link ml-1\">\n                            <Link to={PagesUrl.PAGE_ROOM_DELETE + '/' + row.id} className=\"btn btn-sm btn-danger\">\n                                <i className=\"fa fa-trash\"> </i>\n                            </Link>\n                        </span>\n                    </td>\n                </tr>\n            );\n        });\n    }\n\n    async sort(column, sort) {\n        await this.props.updateFilter({\n            ...this.props.filter,\n            sort: sort,\n            sort_by_column: column,\n            page: 1\n        });\n        await this.getList();\n    }\n\n    renderTitle(title, column) {\n        if (column.toLowerCase() === this.props.filter.sort_by_column.toLowerCase()) {\n            if (this.props.filter.sort.toLowerCase() === 'asc') {\n                return <a href=\"#\" onClick={() => this.sort(column, 'desc')}><i className=\"fa fa-arrow-up\" /> {title}</a>;\n            } else {\n                return <a href=\"#\" onClick={() => this.sort(column, 'asc')} ><i className=\"fa fa-arrow-down\" /> {title}</a>;\n            }\n        } else {\n            return <a href=\"\" onClick={() => this.sort(column, 'desc')} >{title}</a>;\n        }\n    }\n\n    onTypingSearch(e) {\n        const text = e.target.value;\n        this.setState({searchText: text});\n        const newFilter = {\n            ...this.props.roomReducer.filter,\n            searchText: text,\n        };\n        this.props.updateFilter(newFilter);\n        this.props.getListFE(newFilter);\n    }\n\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <React.Fragment>\n                <div className=\"box\">\n                    <div className=\"box-header with-border\">\n                        <div className=\"float-md-right mt-2 mt-md-0\">\n                            <button type=\"button\" className=\"btn btn-secondary btn-sm ml-1\"\n                                    >Import\n                            </button>\n                            <Link to={PagesUrl.PAGE_ROOM_ADD}>\n                                <button type=\"button\"\n                                        className=\"btn btn-primary btn-sm ml-1\">{messages['layout.button.register']}</button>\n                            </Link>\n                        </div>\n                    </div>\n                    <div className=\"box-body\">\n                        <div className=\"datatable_container\">\n                            <Paginator\n                                total={this.props.listData.total}\n                                itemPerPage={this.props.filter.per_page}\n                                currentPage={this.props.filter.page}\n                                onChangePageNumber={this.onChangePageNumber}\n                                onChangeItemPerPage={this.onChangeItemPerPage}\n                                onTogglePopupFilter={this.togglePopupFilter.bind(this)}\n                                filterData={this.props.filter}\n                                onTypingSearch={this.onTypingSearch}\n                            />\n                            <div className=\"row m-0 my-2\">\n                                <div className=\"col-sm-12 p-0\">\n                                    <Table bordered hover responsive size=\"sm\" className=\"table-custom mb-0\">\n                                        <thead>\n                                        <tr>\n                                            <th>{this.renderTitle('Id', 'id')}</th>\n                                            <th colSpan={2}>\n                                                {this.renderTitle('Tên', 'name')}\n                                            </th>\n                                            {/*<th colSpan={2}>Mô tả chi tiết</th>*/}\n                                            {/*<th colSpan={5}>Price Text</th>*/}\n                                            <th>{this.renderTitle('Giá', 'price')}</th>\n                                            <th>{this.renderTitle('Hiện', 'status')}</th>\n                                            <th>Số hình kèm theo</th>\n                                            <th>Hình đại diện</th>\n                                            <th style={{ width: '100px' }} rowSpan={2}>{messages['layout.column.action']}</th>\n                                        </tr>\n                                        <tr>\n                                            <th> </th>\n                                            <th>En</th>\n                                            <th>Vi</th>\n                                            {/*<th>Jp - Kanji</th>*/}\n                                            {/*<th>Jp - Romanji</th>*/}\n                                            {/*<th>Kr</th>*/}\n                                            {/*<th>En</th>*/}\n                                            {/*<th>Vi</th>*/}\n                                            {/*<th>Jp - Kanji</th>*/}\n                                            {/*<th>Jp - Romanji</th>*/}\n                                            {/*<th>Kr</th>*/}\n                                            {/*<th>En</th>*/}\n                                            {/*<th>Vi</th>*/}\n                                            {/*<th>Jp - Kanji</th>*/}\n                                            {/*<th>Jp - Romanji</th>*/}\n                                            {/*<th>Kr</th>*/}\n                                            <th> </th>\n                                            <th> </th>\n                                            <th> </th>\n                                            <th> </th>\n                                        </tr>\n                                        </thead>\n                                        <tbody>\n                                        {this.renderList(this.props.listData)}\n                                        </tbody>\n                                    </Table>\n                                </div>\n                            </div>\n                            <div className=\"block-paging-bottom\">\n                                <Paginator\n                                    total={this.props.listData.total}\n                                    itemPerPage={this.props.filter.per_page}\n                                    currentPage={this.props.filter.page}\n                                    onChangePageNumber={this.onChangePageNumber}\n                                    onChangeItemPerPage={this.onChangeItemPerPage}\n                                    filterData={this.props.filter}\n                                    onTypingSearch={this.onTypingSearch}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    {this.state.showPopupFilter ?\n                        <Filter\n                            show={this.state.showPopupFilter}\n                            closePopup={this.togglePopupFilter.bind(this)}\n                            onApplyFilter={this.onApplyFilter}\n                        />\n                        : null\n                    }\n                </div>\n                <SpinnerComponent show={props.isCallingApi}> </SpinnerComponent>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.roomReducer,\n    ...state.layoutReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(RoomList));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport RoomList from '../../components/Room/List';\nimport actions from \"../../redux/auth/action\";\nimport { withRouter } from 'react-router-dom';\n\nclass ScreensRoomList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <h1>\n                        {messages['room.title']}\n                    </h1>\n                </section>\n                <section className=\"content\">\n                    <div className=\"row m-0\">\n                        <div className=\"col-12 p-0\">\n                            <RoomList />\n                        </div>\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps,actions)(ScreensRoomList));\n","import SuperFetch from './SuperFetch';\n\nconst Urls = {\n    LOGIN : 'auth/login',\n    LOGOUT : 'auth/logout',\n    REFRESH_TOKEN : 'auth/fresh',\n    GET_LOGGED_USER_INFO: 'auth/user',\n    LIST : 'users',\n    ADD : 'users',\n    EDIT: 'users/',\n    DELETE: 'users/',\n    SHOW: 'users/',\n\n};\nconst UserService = {\n\n    login(payload) {\n        return new SuperFetch().post(Urls.LOGIN, payload);\n    },\n    getLoggedUserInfo() {\n        return new SuperFetch().get(Urls.GET_LOGGED_USER_INFO);\n    },\n    list(payload) {\n        return new SuperFetch().get(Urls.LIST, payload);\n    },\n\n    add(payload) {\n        return new SuperFetch().post(Urls.ADD, payload);\n    },\n    edit(payload) {\n        return new SuperFetch().put(Urls.EDIT , payload);\n    },\n\n    delete(payload) {\n        return new SuperFetch().delete(Urls.DELETE, payload);\n    },\n\n    show(payload) {\n        return new SuperFetch().getById(Urls.SHOW , payload);\n    }\n\n};\n\nexport default UserService;\nexport {\n    Urls\n}\n","import SuperFetch from './SuperFetch';\n\nconst Urls = {\n    LIST: 'membergroups/list',\n    SHOW: 'membergroups/show',\n    ADD: 'membergroups/add',\n    EDIT: 'membergroups/edit',\n    DELETE: 'membergroups/delete'\n};\nconst MemberGroupService = {\n\n    list(payload) {\n        return new SuperFetch().get(Urls.LIST, payload);\n    },\n\n    show(payload) {\n        return new SuperFetch().get(Urls.SHOW, payload);\n    },\n\n    add(payload) {\n        return new SuperFetch().get(Urls.ADD, payload);\n    },\n\n    edit(payload) {\n        return new SuperFetch().get(Urls.EDIT, payload);\n    },\n\n    delete(payload) {\n        return new SuperFetch().get(Urls.DELETE, payload);\n    },\n};\n\nexport default MemberGroupService;\nexport {\n    Urls\n}\n","import SuperFetch from './SuperFetch';\n\nconst Urls = {\n    LIST: 'promotions',\n    SHOW: 'promotions/',\n    ADD: 'promotions',\n    EDIT: 'promotions/',\n    DELETE: 'promotions/'\n};\nconst PromotionService = {\n\n    list(payload) {\n        return new SuperFetch().get(Urls.LIST, payload);\n    },\n    show(payload) {\n        return new SuperFetch().getById(Urls.SHOW, payload);\n    },\n\n    add(payload) {\n        return new SuperFetch().post(Urls.ADD, payload);\n    },\n\n    edit(payload) {\n        return new SuperFetch().put(Urls.EDIT , payload);\n    },\n\n    delete(payload) {\n        return new SuperFetch().delete(Urls.DELETE, payload);\n    }\n\n};\n\nexport default PromotionService;\nexport {\n    Urls\n}\n","import * as services from '../services/Index';\nimport notification from \"../helpers/Notification\";\n\nclass MockDataProvider {\n    getData(path, payload) {\n        switch (path) {\n            case services.UserService.Urls.LIST: {\n                return {\n                    status: true,\n                    data: this.getDataOfPage(require('../mock_data/User/list'), payload)\n                };\n            }\n            case services.MemberGroupService.Urls.LIST: {\n                return {\n                    status: true,\n                    data: this.getDataOfPage(require('../mock_data/MemberGroup/list'), payload)\n                };\n            }\n            case services.MemberGroupService.Urls.SHOW: {\n                return {\n                    status: true,\n                    data: this.getDataById(require('../mock_data/MemberGroup/list'), payload)\n                };\n            }\n            case services.MemberGroupService.Urls.ADD: {\n                return {\n                    status: true,\n                    message: \"Membergroup created successfully\",\n                    data: { id: 1 }\n                };\n            }\n            case services.MemberGroupService.Urls.EDIT: {\n                return {\n                    status: true,\n                    message: \"Membergroup edited successfully\",\n                    data: { id: payload.id }\n                };\n            }\n            case services.MemberGroupService.Urls.DELETE: {\n                return {\n                    status: true,\n                    message: \"Membergroup deleted successfully\",\n                    data: {}\n                };\n            }\n            case services.UserService.Urls.LOGIN: {\n                return {\n                    status: true,\n                    data: require('../mock_data/User/auth'),\n                    message: 'Login success'\n                };\n            }\n\n            default:\n                notification.error('Missing define mock data for action ' + path);\n                break;\n        }\n    }\n\n    getDataOfPage(mockData, payload) {\n        var tempSearch = '';\n        if (payload.search !== null && payload.search !== '') {\n            tempSearch = [...mockData].filter((row) => {\n                if (payload.search !== null && payload.search !== '')\n                    return row.createdDate.toLowerCase().match(payload.search);\n            });\n        } else {\n            tempSearch = [...mockData];\n        }\n\n        const temp = tempSearch;\n\n        const offset = (payload.page - 1) * payload.per_page;\n        const segment = offset + payload.per_page;\n        return {\n            items: temp.slice(offset, segment),\n            actualPage: payload.page,\n            total: temp.length\n        };\n    }\n\n    getDataById(mockData, id) {\n        const item = mockData.filter((row) => {\n            return parseInt(row.id) === parseInt(id);\n        });\n        return item[0];\n    }\n}\n\nexport default new MockDataProvider();","import userActions from \"./action\";\nimport siteConfig from \"../../configs/siteConfig\";\nimport variantActions from \"../roomFacility/action\";\n\nconst initState = {\n    listData: {\n        items: [],\n        total: 0,\n        actualPage: 1,\n    },\n    filter: {\n        page: 1,\n        per_page: siteConfig.defaultItemPerPage,\n        sort: 'asc',\n        sort_by_column: 'id',\n        s:''\n    },\n    formData: {\n        id: '',\n        name: '',\n        email: '',\n        roles: [],\n    },\n    roleList: []\n};\n\nexport default function userReducer(state = initState, action) {\n    switch (action.type) {\n        case userActions.USER_UPDATE_FILTER: {\n            return {\n                ...state,\n                filter: action.filter,\n            };\n        }\n        case userActions.USER_GET_LIST_SUCCESS: {\n            return {\n                ...state,\n                listData: action.state.data,\n            };\n        }\n        case userActions.USER_GET_LIST_FAILED: {\n            return {\n                ...state,\n                listData: [],\n            };\n        }\n        case userActions.USER_GET_DETAIL_SUCCESS: {\n            return {\n                ...state,\n                formData: action.state.data\n            };\n        }\n        case userActions.USER_GET_ROLE_LIST_SUCCESS: {\n            return {\n                ...state,\n                roleList: action.state.data.items\n            };\n        }\n        case userActions.USER_RESET_FORM_DATA: {\n            return {\n                ...state,\n                formData: initState.formData\n            };\n        }\n        default:\n            return state;\n    }\n}\n","import authActions from \"./action\";\n\nconst initState = {\n    payload: {\n        username: '',\n        password: '',\n    },\n    isLoggedIn: false,\n    loading: false,\n    tokenInfo: {},\n    userInfo: {},\n};\n\nexport default function authReducer(state = initState, action) {\n\n    switch (action.type) {\n        case authActions.AUTH_AUTHORIZE: {\n            return {\n                ...state,\n            };\n        }\n        case authActions.AUTH_AUTHORIZE_SUCCESS: {\n            return {\n                ...state,\n                user: action.state.user,\n                loading: false,\n                isLoggedIn: action.state.isLoggedIn\n            };\n        }\n        case authActions.AUTH_AUTHORIZE_FAILED: {\n            return {\n                ...state,\n                user: {},\n                loading: false,\n                isLoggedIn: false,\n            };\n        }\n        case authActions.AUTH_GET_USER_SUCCESS: {\n            return {\n                ...state,\n                userInfo: action.state.userInfo,\n            };\n        }\n        case authActions.AUTH_GET_USER_FAILED: {\n            return {\n                ...state,\n                userInfo: {},\n            };\n        }\n        case authActions.AUTH_UPDATE_PARAM: {\n            return {\n                ...state,\n                payload: action.payload,\n                isLoggedIn: false,\n                message: ''\n            };\n        }\n        case authActions.AUTH_LOGOUT: {\n            return {\n                ...state,\n                isLoggedIn: false,\n                tokenInfo: initState.tokenInfo,\n                userInfo: initState.userInfo,\n                payload: initState.payload\n            };\n        }\n        default:\n            return state;\n    }\n}\n","import { getCurrentLanguage } from '../../helpers/Ultis';\nconst actions = {\n    CHANGE_LANGUAGE: 'CHANGE_LANGUAGE',\n\n    changeLanguage: language => {\n        return (dispatch, getState) => {\n            dispatch({\n                type: actions.CHANGE_LANGUAGE,\n                language: getCurrentLanguage(language)\n            });\n        };\n    }\n};\nexport default actions;\n","import { getCurrentLanguage } from '../../helpers/Ultis';\nimport siteConfig from \"../../configs/siteConfig\";\nimport en from '../../languageProvider/locales/en_US';\nimport jp from '../../languageProvider/locales/ja-JP';\nimport vi from '../../languageProvider/locales/vi_VN';\nimport actions from './actions';\n\nconst language = getCurrentLanguage(siteConfig.language.default || 'vietnam');\nlet languageMessage = vi;\nif (language.languageId === 'english') {\n    languageMessage = en;\n} else if (language.languageId === 'japan') {\n    languageMessage = jp;\n}\n\nconst initState = {\n    language: language,\n    languageMessages: languageMessage,\n};\n\nexport default function(state = initState, action) {\n    switch (action.type) {\n        case actions.CHANGE_LANGUAGE:\n            let languageMessage = vi;\n            if (action.language.languageId === 'vietnam') {\n                languageMessage = vi;\n            } else if (language.languageId === 'english') {\n                languageMessage = en;\n            } else if (language.languageId === 'japan') {\n                languageMessage = jp;\n            }\n            return {\n                ...state,\n                language: action.language,\n                languageMessages: languageMessage\n            };\n        default:\n            return state;\n    }\n}\n","import layoutActions from \"./action\";\n\nconst initState = {\n    isLeftMenuOpen : false,\n    leftMenuItems: [],\n    isCallingApi: false\n};\n\nexport default function layoutReducer(state = initState, action) {\n\n    switch (action.type) {\n        case layoutActions.LAYOUT_LEFT_MENU_SET_ITEM: {\n            let found = false;\n            const newList = state.leftMenuItems.map((item) => {\n                if (item.id === action.menuItem.id) {\n                    item = action.menuItem;\n                    found = true;\n                }\n                return item;\n            });\n            if (!found) {\n                newList.push(action.menuItem);\n            }\n\n            return {\n                ...state,\n                leftMenuItems: newList\n            };\n        }\n        case layoutActions.LAYOUT_LEFT_MENU_SET_ALL_ITEM_CLOSE: {\n            const newList = state.leftMenuItems.map((item) => {\n                if (item.id === action.current) {\n                    item.isOpen = !item.isOpen;\n                } else {\n                    item.isOpen = false;\n                }\n                return item;\n            });\n\n            return {\n                ...state,\n                leftMenuItems: newList\n            };\n        }\n        case layoutActions.LAYOUT_SET_IS_CALLING_API: {\n            return {\n                ...state,\n                isCallingApi: action.calling\n            };\n        }\n        default:\n            return state;\n    }\n}\n","import categoryActions from \"./action\";\nimport siteConfig from \"../../configs/siteConfig\";\n\nconst initState = {\n    listData: {\n        items: [],\n        total: 0,\n        current_page: 1,\n    },\n    filter: {\n        page: 1,\n        per_page: siteConfig.defaultItemPerPage,\n        sort: 'asc',\n        sort_by_column: 'id',\n        s:''\n    },\n    listGroup: [],\n    formData: {\n        id: '',\n        code: '',\n        name: {\n            vi: '',\n            en: '',\n            jp: {\n                kanji: '',\n                romaji: ''\n            }\n        },\n        description: {\n            vi: '',\n            en: '',\n            jp: {\n                kanji: '',\n                romaji: ''\n            }\n        },\n        group_id: ''\n    }\n};\n\nexport default function categoryReducer(state = initState, action) {\n    switch (action.type) {\n        case categoryActions.CATEGORY_UPDATE_FILTER: {\n            return {\n                ...state,\n                filter: action.filter,\n            };\n        }\n        case categoryActions.CATEGORY_GET_LIST_SUCCESS: {\n            return {\n                ...state,\n                listData: action.state.data,\n            };\n        }\n        case categoryActions.CATEGORY_GET_LIST_FAILED: {\n            return {\n                ...state,\n                listData: initState.listData\n            };\n        }\n        case categoryActions.CATEGORY_GET_DETAIL_SUCCESS: {\n            return {\n                ...state,\n                formData: action.state.data,\n            };\n        }\n        case categoryActions.CATEGORY_GET_LIST_GROUP_SUCCESS: {\n            return {\n                ...state,\n                listGroup: action.state.data.items,\n            };\n        }\n        case categoryActions.CATEGORY_RESET_FORM_DATA: {\n            return {\n                ...state,\n                formData: initState.formData\n            };\n        }\n        default:\n            return state;\n    }\n}","import variantActions from \"./action\";\nimport siteConfig from \"../../configs/siteConfig\";\n// import roomActions from \"../product/action\";\n\nconst initState = {\n    listData: {\n        items: [],\n        total: 0,\n        current_page: 1,\n    },\n    filter: {\n        page: 1,\n        per_page: siteConfig.defaultItemPerPage,\n        sort: 'asc',\n        sort_by_column: 'id',\n        s:''\n    },\n    keyword: {\n        s: ''\n    },\n    formData: {\n        id: '',\n        name: {\n            vi: '',\n            en: '',\n            jp: {\n                kanji: '',\n                romaji: ''\n            }\n        },\n        description: {\n            vi: '',\n            en: '',\n            jp: {\n                kanji: '',\n                romaji: ''\n            }\n        }\n    }\n};\n\nexport default function roomFacilityReducer(state = initState, action) {\n    switch (action.type) {\n        case variantActions.VARIANT_UPDATE_FILTER: {\n            return {\n                ...state,\n                filter: action.filter,\n            };\n        }\n        case variantActions.VARIANT_GET_LIST_SUCCESS: {\n            return {\n                ...state,\n                listData: action.state.data,\n            };\n        }\n        case variantActions.VARIANT_GET_LIST_FAILED: {\n            return {\n                ...state,\n                listData: [],\n            };\n        }\n        case variantActions.VARIANT_GET_DETAIL_SUCCESS: {\n            return {\n                ...state,\n                formData: action.state.data\n            };\n        }\n        case variantActions.VARIANT_RESET_FORM_DATA: {\n            return {\n                ...state,\n                formData: initState.formData\n            };\n        }\n        default:\n            return state;\n    }\n}\n","import roomTypeActions from \"./action\";\nimport siteConfig from \"../../configs/siteConfig\";\n// import roomActions from \"../product/action\";\n\nconst initState = {\n    listData: {\n        items: [],\n        total: 0,\n        current_page: 1,\n    },\n    filter: {\n        page: 1,\n        per_page: siteConfig.defaultItemPerPage,\n        sort: 'asc',\n        sort_by_column: 'id',\n        s:'',\n        hot: ''\n    },\n    keyword: {\n        s: ''\n    },\n    formData: {\n        id: '',\n        name: {\n            vi: '',\n            en: '',\n            jp: {\n                kanji: '',\n                romaji: ''\n            },\n            kr: '',\n        },\n        description: {\n            vi: '',\n            en: '',\n            jp: {\n                kanji: '',\n                romaji: ''\n            },\n            kr: ''\n        },\n        sub_types: [],\n        hot: 0,\n    },\n    sort_order: 0,\n    hot: 0,\n};\n\nexport default function roomTypeReducer(state = initState, action) {\n    switch (action.type) {\n        case roomTypeActions.ROOM_TYPE_UPDATE_FILTER: {\n            return {\n                ...state,\n                filter: action.filter,\n            };\n        }\n        case roomTypeActions.ROOM_TYPE_GET_LIST_SUCCESS: {\n            return {\n                ...state,\n                listData: action.state.data,\n            };\n        }\n        case roomTypeActions.ROOM_TYPE_GET_LIST_FAILED: {\n            return {\n                ...state,\n                listData: [],\n            };\n        }\n        case roomTypeActions.ROOM_TYPE_GET_DETAIL_SUCCESS: {\n            return {\n                ...state,\n                formData: action.state.data\n            };\n        }\n        case roomTypeActions.ROOM_TYPE_RESET_FORM_DATA: {\n            return {\n                ...state,\n                formData: initState.formData\n            };\n        }\n        default:\n            return state;\n    }\n}\n","import pageActions from \"./action\";\nimport siteConfig from \"../../configs/siteConfig\";\n\nconst initState = {\n    memberGroup: {},\n    listData: {\n        items: [],\n        pagination: [],\n        total: 0\n    },\n    filter: {\n        page: 1,\n        per_page: siteConfig.defaultItemPerPage,\n        sort: 'asc',\n        sort_by_column: 'id',\n        group_id: 0\n    },\n    imageData: {\n        big: {\n            id: '',\n            url: '',\n        },\n        thumb: {\n            id: '',\n            url: '',\n        }\n    },\n    listGroup: [],\n    formData: {\n        id: '',\n        title: '',\n        description: '',\n        layout: '',\n        type: '',\n        max_item: 3,\n        sample_image: '',\n        group_id: 0,\n        sample_image_origin: ''\n    }\n};\n\nexport default function pageReducer(state = initState, action) {\n\n    switch (action.type) {\n        case pageActions.PAGE_UPDATE_FILTER: {\n            return {\n                ...state,\n                filter: action.filter,\n            };\n        }\n        case pageActions.PAGE_GET_LIST: {\n            return {\n                ...state,\n                filter: action.filter\n            };\n        }\n        case pageActions.PAGE_GET_LIST_SUCCESS: {\n            return {\n                ...state,\n                listData: action.state.data,\n            };\n        }\n        case pageActions.PAGE_GET_LIST_FAILED: {\n            return {\n                ...state,\n                listData: {\n                    items: [],\n                    pagination: []\n                }\n            };\n        }\n        case pageActions.PAGE_UPLOAD_IMAGE_SUCCESS: {\n            return {\n                ...state,\n                imageData: action.state.data\n            };\n        }\n        case pageActions.PAGE_UPLOAD_LOGO_SUCCESS: {\n            return {\n                ...state,\n                logo: action.state.data\n            };\n        }\n        case pageActions.PAGE_GET_LIST_GROUP_SUCCESS: {\n            return {\n                ...state,\n                listGroup: action.state.data.items,\n            };\n        }\n        case pageActions.PAGE_GET_DETAIL_SUCCESS: {\n            return {\n                ...state,\n                formData: action.state.data\n            };\n        }\n        case pageActions.PAGE_RESET_FORM_DATA: {\n            return {\n                ...state,\n                formData: initState.formData\n            };\n        }\n        default:\n            return state;\n    }\n}","import roomActions from \"./action\";\nimport siteConfig from \"../../configs/siteConfig\";\n\nconst initState = {\n    listData: {\n        items: [],\n        total: 0,\n        actualPage: 1,\n    },\n    listDataBE: {\n        items: [],\n        total: 0,\n        actualPage: 1,\n    },\n    filter: {\n        page: 1,\n        per_page: siteConfig.defaultItemPerPage,\n        sort: 'desc',\n        sort_by_column: 'id',\n        s: '',\n        room_type_id: 0,\n        status: '',\n        searchText: ''\n    },\n    keyword: {\n        s: ''\n    },\n    listRoomType: [],\n    listRoomFacility: [],\n    formData: {\n        id: '',\n        code: '',\n        name: {\n            vi: '',\n            en: '',\n            jp: {\n                kanji: '',\n                romaji: ''\n            },\n            kr: '',\n        },\n        description: {\n            vi: '',\n            en: '',\n            jp: {\n                kanji: '',\n                romaji: ''\n            },\n            kr: '',\n        },\n        price: '',\n        images: {\n            source: '',\n            thumbnail: '',\n        },\n        images_origin: {\n            source: '',\n            thumbnail: '',\n        },\n        room_type_id: 0,\n        facilities: [],\n        galleries: [],\n        price_text: {\n            vi: '',\n            en: '',\n            jp: {\n                kanji: '',\n                romaji: ''\n            },\n            kr: '',\n        },\n        status: 0\n    }\n};\n\nexport default function roomReducer(state = initState, action) {\n\n    switch (action.type) {\n        case roomActions.ROOM_UPDATE_FILTER: {\n            return {\n                ...state,\n                filter: action.filter,\n            };\n        }\n        case roomActions.ROOM_SEARCH_LIST: {\n            return {\n                ...state,\n                keyword: action.keyword,\n            };\n        }\n        case roomActions.ROOM_GET_LIST_SUCCESS: {\n            return {\n                ...state,\n                listData: action.state.data,\n                listDataBE: {...action.state.data},\n            };\n        }\n        case roomActions.ROOM_GET_LIST_FAILED: {\n            return {\n                ...state,\n                listData: [],\n                listDataBE: []\n            };\n        }\n        case roomActions.ROOM_GET_LIST_ROOM_TYPE_SUCCESS: {\n            return {\n                ...state,\n                listRoomType: action.state.data.items,\n            };\n        }\n        case roomActions.ROOM_UPLOAD_IMAGE_SUCCESS: {\n            return {\n                ...state,\n                imageData: action.state.data\n            };\n        }\n        case roomActions.ROOM_GET_LIST_GROUP_SUCCESS: {\n            return {\n                ...state,\n                listGroup: action.state.data.items,\n            };\n        }\n        case roomActions.ROOM_GET_DETAIL_SUCCESS: {\n            return {\n                ...state,\n                formData: action.state.data\n            };\n        }\n        case roomActions.ROOM_GET_LIST_ROOM_FACILITY_SUCCESS: {\n            return {\n                ...state,\n                listRoomFacility: action.state.data.items,\n            };\n        }\n        case roomActions.ROOM_RESET_FORM_DATA: {\n            return {\n                ...state,\n                formData: initState.formData\n            };\n        }\n        case roomActions.ROOM_SEARCH_FE: {\n\n            let items = [...state.listDataBE.items];\n\n            if (action.filter.searchText !== '') {\n                items = items.filter((row) => {\n                    let fieldMatch = Object.keys(row).filter((field) => {\n                        if (field === 'name' || field === 'description') {\n                            const data = JSON.stringify(row[field]);\n                            return data !== null && data.toLowerCase().indexOf(action.filter.searchText.toLowerCase()) !== -1;\n                        } else if (field === 'price' || field === 'price_text') {\n                            return row[field].toString().toLowerCase().indexOf(action.filter.searchText.toLowerCase()) !== -1;\n                        } else {\n                            return false;\n                        }\n                    });\n                    return fieldMatch.length !== 0;\n                });\n            }\n\n            console.log(items);\n\n            state.listData.items = items;\n\n            return {\n                ...state,\n            };\n        }\n        default:\n            return state;\n    }\n}\n","const categoryPageActions = {\n    CATEGORY_PAGE_GET_LIST: \"CATEGORY_PAGE_GET_LIST\",\n    CATEGORY_PAGE_GET_LIST_STATUS_SUCCESS: \"PAGE_GET_LIST_STATUS_SUCCESS\",\n    CATEGORY_PAGE_GET_LIST_STATUS_FAILED: \"CATEGORY_PAGE_GET_LIST_STATUS_FAILED\",\n\n    CATEGORY_PAGE_DETAIL: 'CATEGORY_PAGE_DETAIL',\n    CATEGORY_PAGE_DETAIL_STATUS_SUCCESS: 'CATEGORY_PAGE_DETAIL_STATUS_SUCCESS',\n    CATEGORY_PAGE_DETAIL_STATUS_FAILED: 'CATEGORY_PAGE_DETAIL_STATUS_FAILED',\n\n    CATEGORY_PAGE_ADD: 'CATEGORY_PAGE_ADD',\n    CATEGORY_PAGE_ADD_STATUS_SUCCESS: 'CATEGORY_PAGE_ADD_STATUS_SUCCESS',\n    CATEGORY_PAGE_ADD_STATUS_FAILED: 'CATEGORY_PAGE_ADD_STATUS_FAILED',\n    \n    CATEGORY_PAGE_EDIT: 'CATEGORY_PAGE_EDIT',\n    CATEGORY_PAGE_EDIT_STATUS_SUCCESS: 'CATEGORY_PAGE_EDIT_STATUS_SUCCESS',\n    CATEGORY_PAGE_EDIT_STATUS_FAILED: 'CATEGORY_PAGE_EDIT_STATUS_FAILED',\n\n    CATEGORY_PAGE_DELETE: 'CATEGORY_PAGE_DELETE',\n    CATEGORY_PAGE_DELETE_STATUS_SUCCESS: 'CATEGORY_PAGE_DELETE_STATUS_SUCCESS',\n    CATEGORY_PAGE_DELETE_STATUS_FAILED: 'CATEGORY_PAGE_DELETE_STATUS_FAILED',\n\n    CATEGORY_PAGE_ROOM_GET_LIST: \"CATEGORY_PAGE_ROOM_GET_LIST\",\n    CATEGORY_PAGE_ROOM_GET_LIST_STATUS_SUCCESS: \"CATEGORY_PAGE_ROOM_GET_LIST_STATUS_SUCCESS\",\n    CATEGORY_PAGE_ROOM_GET_LIST_STATUS_FAILED: \"CATEGORY_PAGE_ROOM_GET_LIST_STATUS_FAILED\",\n\n    CATEGORY_PAGE_ROOM_EDIT: 'CATEGORY_PAGE_ROOM_EDIT',\n    CATEGORY_PAGE_ROOM_EDIT_STATUS_SUCCESS: 'CATEGORY_PAGE_ROOM_EDIT_STATUS_SUCCESS',\n    CATEGORY_PAGE_ROOM_EDIT_STATUS_FAILED: 'CATEGORY_PAGE_ROOM_EDIT_STATUS_FAILED',\n\n    getPageList(filter) {\n        return {\n            type: categoryPageActions.CATEGORY_PAGE_GET_LIST,\n            filter: filter\n        }\n    },\n    getCategoryDetail(params) {\n        return {\n            type: categoryPageActions.CATEGORY_PAGE_DETAIL,\n            params: params\n        }\n    },\n    addPageToCategory(params, selectedPageTemplate) {\n        return {\n            type: categoryPageActions.CATEGORY_PAGE_ADD,\n            params: params,\n            selectedPageTemplate: selectedPageTemplate\n        }\n    },\n    editPageToCategory(params, selectedPageTemplate) {\n        return {\n            type: categoryPageActions.CATEGORY_PAGE_EDIT,\n            params: params,\n            selectedPageTemplate: selectedPageTemplate\n        }\n    },\n    deleteCategoryPage(params) {\n        return {\n            type: categoryPageActions.CATEGORY_PAGE_DELETE,\n            params: params\n        }\n    },\n    getCategoryPageProductList(params) {\n        return {\n            type: categoryPageActions.CATEGORY_PAGE_ROOM_GET_LIST,\n            params: params\n        }\n    },\n    updateCategoryPageProduct(params) {\n        return {\n            type: categoryPageActions.CATEGORY_PAGE_ROOM_EDIT,\n            params: params\n        }\n    }\n};\nexport default categoryPageActions;\n","import categoryPageActions from \"./action\";\nimport siteConfig from \"../../configs/siteConfig\";\n\nconst initState = {\n    memberGroup: {},\n    listData: {\n        items: [],\n        total: 0,\n        actualPage: 1,\n    },\n    filter: {\n        page: 1,\n        per_page: siteConfig.defaultItemPerPage,\n        sort: 'asc',\n        sort_by_column: 'id',\n        memberGroupName: ''\n    },\n    id: 0,\n    categoryPageParams: {\n        category_id: 0,\n        page_id: 0,\n        name: '',\n        page_position: 0,\n        items: []\n    },\n    pageData: {\n        items: [],\n        total: 0,\n        actualPage: 1,\n    },\n    productData: {\n        pages: [],\n        group_id: 0,\n        description: {},\n        name: {},\n        thumb: ''\n    },\n    isLoading: false\n\n};\n\nexport default function categoryPageReducer(state = initState, action) {\n\n    switch (action.type) {\n        case categoryPageActions.CATEGORY_PAGE_GET_LIST: {\n            return {\n                ...state,\n                filter: action.filter,\n                isLoading: false\n            };\n        }\n        case categoryPageActions.CATEGORY_PAGE_GET_LIST_STATUS_SUCCESS: {\n            return {\n                ...state,\n                listData: action.state.data,\n            };\n        }\n        case categoryPageActions.CATEGORY_PAGE_GET_LIST_STATUS_FAILED: {\n            return {\n                ...state,\n                listData: [],\n            };\n        }\n        case categoryPageActions.CATEGORY_PAGE_ROOM_GET_LIST: {\n            return {\n                ...state,\n                params: action.params,\n                isLoading: false\n            };\n        }\n        case categoryPageActions.CATEGORY_PAGE_ROOM_GET_LIST_STATUS_SUCCESS: {\n            return {\n                ...state,\n                productData: action.state.data,\n                isLoading: false\n            };\n        }\n        case categoryPageActions.CATEGORY_PAGE_ROOM_GET_LIST_STATUS_FAILED: {\n            return {\n                ...state,\n                productData: [],\n                isLoading: false\n            };\n        }\n        case categoryPageActions.CATEGORY_PAGE_DETAIL: {\n            return {\n                ...state,\n                params: action.params,\n                isLoading: true\n            };\n        }\n        case categoryPageActions.CATEGORY_PAGE_DETAIL_STATUS_SUCCESS: {\n            return {\n                ...state,\n                pageData: action.state.data,\n                isLoading: false\n            };\n        }\n        case categoryPageActions.CATEGORY_PAGE_DETAIL_STATUS_FAILED: {\n            return {\n                ...state,\n                pageData: [],\n                isLoading: false\n            };\n        }\n        case categoryPageActions.CATEGORY_PAGE_ADD: {\n            return {\n                ...state,\n                params: action.params,\n                selectedPageTemplate: action.selectedPageTemplate\n            };\n        }\n        case categoryPageActions.CATEGORY_PAGE_ADD_STATUS_SUCCESS: {\n            state.pageData.items.push(action.state.data);\n            return {\n                ...state,\n                data: action.state.data,\n                status: action.state.status\n            };\n        }\n        case categoryPageActions.CATEGORY_PAGE_ADD_STATUS_FAILED: {\n            return {\n                ...state,\n                data: null,\n            };\n        }\n        case categoryPageActions.CATEGORY_PAGE_EDIT: {\n            return {\n                ...state,\n                params: action.params,\n                selectedPageTemplate: action.selectedPageTemplate\n            };\n        }\n        case categoryPageActions.CATEGORY_PAGE_EDIT_STATUS_SUCCESS: {\n            for( let i = 0 ; i < state.pageData.items.length; i++) {\n                if (state.pageData.items[i].id === parseInt(action.state.data.id)) {\n                    state.pageData.items[i] = action.state.data;\n                    break;\n                }\n            }\n            return {\n                ...state,\n                data: action.state.data,\n                status: action.state.status\n            };\n        }\n        case categoryPageActions.CATEGORY_PAGE_EDIT_STATUS_FAILED: {\n            return {\n                ...state,\n                data: null,\n            };\n        }\n        case categoryPageActions.CATEGORY_PAGE_DELETE: {\n            return {\n                ...state,\n                params: action.params\n            };\n        }\n        case categoryPageActions.CATEGORY_PAGE_DELETE_STATUS_SUCCESS: {\n            let index = -1;\n            for( let i = 0 ; i < state.pageData.items.length; i++) {\n                if (state.pageData.items[i].id === parseInt(action.state.data)) {\n                    index = i;\n                    break;\n                }\n            }\n            state.pageData.items.splice(index, 1);\n\n            return {\n                ...state,\n                data: action.state.data,\n            };\n        }\n        case categoryPageActions.CATEGORY_PAGE_DELETE_STATUS_FAILED: {\n            return {\n                ...state,\n                data: null,\n            };\n        }\n        case categoryPageActions.CATEGORY_PAGE_ROOM_EDIT: {\n            return {\n                ...state,\n                params: action.params\n            };\n        }\n        case categoryPageActions.CATEGORY_PAGE_ROOM_EDIT_STATUS_SUCCESS: {\n            return {\n                ...state,\n                data: action.state.data,\n            };\n        }\n        case categoryPageActions.CATEGORY_PAGE_ROOM_EDIT_STATUS_FAILED: {\n            return {\n                ...state,\n                data: null,\n            };\n        }\n        default:\n            return state;\n    }\n}\n","const promotionActions = {\n    PROMOTION_UPDATE_FILTER: \"PROMOTION_UPDATE_FILTER\",\n    PROMOTION_GET_LIST: \"PROMOTION_GET_LIST\",\n    PROMOTION_SEARCH_LIST: \"PROMOTION_SEARCH_LIST\",\n    PROMOTION_GET_LIST_SUCCESS: \"PROMOTION_GET_LIST_SUCCESS\",\n    PROMOTION_GET_LIST_FAILED: \"PROMOTION_GET_LIST_FAILED\",\n    PROMOTION_GET_DETAIL: \"PROMOTION_GET_DETAIL\",\n    PROMOTION_GET_DETAIL_SUCCESS: \"PROMOTION_GET_DETAIL_SUCCESS\",\n    PROMOTION_STATUS_SUCCESS: \"PROMOTION_STATUS_SUCCESS\",\n    PROMOTION_STATUS_FAILED: \"PROMOTION_STATUS_FAILED\",\n    PROMOTION_ADD: \"PROMOTION_ADD\",\n    PROMOTION_ADD_SUCCESS: \"PROMOTION_ADD_SUCCESS\",\n    PROMOTION_EDIT: \"PROMOTION_EDIT\",\n    PROMOTION_EDIT_SUCCESS: \"PROMOTION_EDIT_SUCCESS\",\n    PROMOTION_DELETE: \"PROMOTION_DELETE\",\n    PROMOTION_DELETE_SUCCESS: \"PROMOTION_DELETE_SUCCESS\",\n    PROMOTION_GET_LIST_PROMOTION_TYPE: \"PROMOTION_GET_LIST_PROMOTION_TYPE\",\n    PROMOTION_GET_LIST_PROMOTION_TYPE_SUCCESS: \"PROMOTION_GET_LIST_PROMOTION_TYPE_SUCCESS\",\n    PROMOTION_UPLOAD_IMAGE: \"PROMOTION_UPLOAD_IMAGE\",\n    PROMOTION_UPLOAD_IMAGE_SUCCESS: \"PROMOTION_UPLOAD_IMAGE_SUCCESS\",\n    PROMOTION_UPLOAD_IMAGE_FAILED: \"PROMOTION_UPLOAD_IMAGE_FAILED\",\n    PROMOTION_GET_LIST_GROUP: \"PROMOTION_GET_LIST_GROUP\",\n    PROMOTION_GET_LIST_GROUP_SUCCESS: \"PROMOTION_GET_LIST_GROUP_SUCCESS\",\n    PROMOTION_RESET_FORM_DATA: \"PROMOTION_RESET_FORM_DATA\",\n    PROMOTION_GET_LIST_PROMOTION_VARIANT: \"PROMOTION_GET_LIST_PROMOTION_VARIANT\",\n    PROMOTION_GET_LIST_PROMOTION_VARIANT_SUCCESS: \"PROMOTION_GET_LIST_PROMOTION_VARIANT_SUCCESS\",\n\n    PROMOTION_GET_LIST_ROOM: \"PROMOTION_GET_LIST_ROOM\",\n    PROMOTION_GET_LIST_ROOM_SUCCESS: \"PROMOTION_GET_LIST_ROOM_SUCCESS\",\n    PROMOTION_GET_LIST_ROOM_FAILED: \"PROMOTION_GET_LIST_ROOM_FAILED\",\n\n    updateFilter(filter) {\n        return {\n            type: promotionActions.PROMOTION_UPDATE_FILTER,\n            filter: filter\n        }\n    },\n    getList(filter) {\n        return {\n            type: promotionActions.PROMOTION_GET_LIST,\n            filter: filter\n        }\n    },\n    getById(params) {\n        return {\n            type: promotionActions.PROMOTION_GET_DETAIL,\n            params: params\n        }\n    },\n    add(params) {\n        return {\n            type: promotionActions.PROMOTION_ADD,\n            params: params\n        }\n    },\n    edit(params) {\n        return {\n            type: promotionActions.PROMOTION_EDIT,\n            params: params\n        }\n    },\n    delete(params) {\n        return {\n            type: promotionActions.PROMOTION_DELETE,\n            params: params\n        }\n    },\n    uploadImage(params) {\n        return {\n            type: promotionActions.PROMOTION_UPLOAD_IMAGE,\n            params: params\n        }\n    },\n    resetFormData() {\n        return {\n            type: promotionActions.PROMOTION_RESET_FORM_DATA\n        }\n    },\n    getListRoom() {\n        return {\n            type: promotionActions.PROMOTION_GET_LIST_ROOM,\n        }\n    },\n};\nexport default promotionActions;\n","import promotionActions from \"./action\";\nimport siteConfig from \"../../configs/siteConfig\";\n\nconst initState = {\n    listData: {\n        items: [],\n        total: 0,\n        actualPage: 1,\n    },\n    filter: {\n        page: 1,\n        per_page: siteConfig.defaultItemPerPage,\n        sort: 'asc',\n        sort_by_column: 'id',\n        s: '',\n    },\n    formData: {\n        id: '',\n        name: {\n            vi: '',\n            en: '',\n            jp: {\n                kanji: '',\n                romaji: ''\n            },\n            kr: '',\n        },\n        short_description: {\n            vi: '',\n            en: '',\n            jp: {\n                kanji: '',\n                romaji: ''\n            }\n        },\n        description: {\n            vi: '',\n            en: '',\n            jp: {\n                kanji: '',\n                romaji: ''\n            }\n        },\n        start_date: '',\n        end_date: '',\n        status: 0,\n        image: '',\n        image_origin: '',\n        room_id: 0,\n    },\n    listRoom: []\n};\n\nexport default function promotionReducer(state = initState, action) {\n\n    switch (action.type) {\n        case promotionActions.PROMOTION_UPDATE_FILTER: {\n            return {\n                ...state,\n                filter: action.filter,\n            };\n        }\n        case promotionActions.PROMOTION_SEARCH_LIST: {\n            return {\n                ...state,\n                keyword: action.keyword,\n            };\n        }\n        case promotionActions.PROMOTION_GET_LIST_SUCCESS: {\n            return {\n                ...state,\n                listData: action.state.data,\n            };\n        }\n        case promotionActions.PROMOTION_GET_LIST_FAILED: {\n            return {\n                ...state,\n                listData: initState.listData\n            };\n        }\n        case promotionActions.PROMOTION_GET_DETAIL_SUCCESS: {\n            return {\n                ...state,\n                formData: action.state.data\n            };\n        }\n        case promotionActions.PROMOTION_RESET_FORM_DATA: {\n            return {\n                ...state,\n                formData: initState.formData\n            };\n        }\n        case promotionActions.PROMOTION_GET_LIST_ROOM_SUCCESS: {\n            return {\n                ...state,\n                listRoom: action.state.data.items,\n            };\n        }\n        case promotionActions.PROMOTION_GET_LIST_ROOM_FAILED: {\n            return {\n                ...state,\n                listRoom: initState.listRoom\n            };\n        }\n        default:\n            return state;\n    }\n}\n","const roleActions = {\n    ROLE_UPDATE_FILTER: \"ROLE_UPDATE_FILTER\",\n    ROLE_GET_LIST: \"ROLE_GET_LIST\",\n    ROLE_GET_LIST_SUCCESS: \"ROLE_GET_LIST_SUCCESS\",\n    ROLE_GET_LIST_FAILED: \"ROLE_GET_LIST_FAILED\",\n    ROLE_STATUS_SUCCESS: \"ROLE_STATUS_SUCCESS\",\n    ROLE_STATUS_FAILED: \"ROLE_STATUS_FAILED\",\n    ROLE_RESET_FORM_DATA: \"ROLE_RESET_FORM_DATA\",\n\n    updateFilter(filter) {\n        return {\n            type: roleActions.ROLE_UPDATE_FILTER,\n            filter: filter\n        }\n    },\n    getList(filter) {\n        return {\n            type: roleActions.ROLE_GET_LIST,\n            filter: filter\n        }\n    },\n    resetFormData() {\n        return {\n            type: roleActions.ROLE_RESET_FORM_DATA\n        }\n    },\n};\nexport default roleActions;\n","import roleActions from \"./action\";\nimport siteConfig from \"../../configs/siteConfig\";\n// import roomActions from \"../product/action\";\n\nconst initState = {\n    listData: {\n        items: [],\n        total: 0,\n        current_page: 1,\n    },\n    filter: {\n        page: 1,\n        per_page: siteConfig.defaultItemPerPage,\n        sort: 'asc',\n        sort_by_column: 'id',\n        s:''\n    },\n    keyword: {\n        s: ''\n    },\n};\n\nexport default function roleReducer(state = initState, action) {\n    switch (action.type) {\n        case roleActions.ROLE_UPDATE_FILTER: {\n            return {\n                ...state,\n                filter: action.filter,\n            };\n        }\n        case roleActions.ROLE_GET_LIST_SUCCESS: {\n            return {\n                ...state,\n                listData: action.state.data,\n            };\n        }\n        case roleActions.ROLE_GET_LIST_FAILED: {\n            return {\n                ...state,\n                listData: [],\n            };\n        }\n        default:\n            return state;\n    }\n}\n","const homepageActions = {\n    HOMEPAGE_UPDATE_FILTER: \"HOMEPAGE_UPDATE_FILTER\",\n    HOMEPAGE_GET_LIST: \"HOMEPAGE_GET_LIST\",\n    HOMEPAGE_GET_LIST_SUCCESS: \"HOMEPAGE_GET_LIST_SUCCESS\",\n    HOMEPAGE_GET_LIST_FAILED: \"HOMEPAGE_GET_LIST_FAILED\",\n    HOMEPAGE_GET_DETAIL: \"HOMEPAGE_GET_DETAIL\",\n    HOMEPAGE_GET_DETAIL_SUCCESS: \"HOMEPAGE_GET_DETAIL_SUCCESS\",\n    HOMEPAGE_GET_DETAIL_FAILED: \"HOMEPAGE_GET_DETAIL_FAILED\",\n    HOMEPAGE_STATUS_SUCCESS: \"HOMEPAGE_STATUS_SUCCESS\",\n    HOMEPAGE_STATUS_FAILED: \"HOMEPAGE_STATUS_FAILED\",\n    HOMEPAGE_ADD: \"HOMEPAGE_ADD\",\n    HOMEPAGE_ADD_SUCCESS: \"HOMEPAGE_ADD_SUCCESS\",\n    HOMEPAGE_EDIT: \"HOMEPAGE_EDIT\",\n    HOMEPAGE_EDIT_SUCCESS: \"HOMEPAGE_EDIT_SUCCESS\",\n    HOMEPAGE_DELETE: \"HOMEPAGE_DELETE\",\n    HOMEPAGE_DELETE_SUCCESS: \"HOMEPAGE_DELETE_SUCCESS\",\n    HOMEPAGE_DELETE_FAILED: \"HOMEPAGE_DELETE_FAILED\",\n    HOMEPAGE_UPLOAD_IMAGE: \"HOMEPAGE_UPLOAD_IMAGE\",\n    HOMEPAGE_UPLOAD_IMAGE_SUCCESS: \"HOMEPAGE_UPLOAD_IMAGE_SUCCESS\",\n    HOMEPAGE_UPLOAD_IMAGE_FAILED: \"HOMEPAGE_UPLOAD_IMAGE_FAILED\",\n    HOMEPAGE_UPLOAD_LOGO: \"HOMEPAGE_UPLOAD_LOGO\",\n    HOMEPAGE_UPLOAD_LOGO_SUCCESS: \"HOMEPAGE_UPLOAD_LOGO_SUCCESS\",\n    HOMEPAGE_UPLOAD_LOGO_FAILED: \"HOMEPAGE_UPLOAD_LOGO_FAILED\",\n\n    HOMEPAGE_GET_LIST_GROUP: \"ROOM_GET_LIST_GROUP\",\n    HOMEPAGE_GET_LIST_GROUP_SUCCESS: \"ROOM_GET_LIST_GROUP_SUCCESS\",\n    HOMEPAGE_RESET_FORM_DATA: \"ROOM_RESET_FORM_DATA\",\n\n    updateFilter(filter) {\n        return {\n            type: homepageActions.HOMEPAGE_UPDATE_FILTER,\n            filter: filter\n        }\n    },\n    getList(filter) {\n        return {\n            type: homepageActions.HOMEPAGE_GET_LIST,\n            filter: filter\n        }\n    },\n    getById(params) {\n        return {\n            type: homepageActions.HOMEPAGE_GET_DETAIL,\n            params: params\n        }\n    },\n    add(params) {\n        return {\n            type: homepageActions.HOMEPAGE_ADD,\n            params: params\n        }\n    },\n    edit(params) {\n        return {\n            type: homepageActions.HOMEPAGE_EDIT,\n            params: params\n        }\n    },\n    delete(params) {\n        return {\n            type: homepageActions.HOMEPAGE_DELETE,\n            params: params\n        }\n    },\n    uploadImage(params) {\n        return {\n            type: homepageActions.HOMEPAGE_UPLOAD_IMAGE,\n            params: params\n        }\n    },\n    uploadLogo(params) {\n        return {\n            type: homepageActions.HOMEPAGE_UPLOAD_LOGO,\n            params: params\n        }\n    },\n    getListGroup() {\n        return {\n            type: homepageActions.HOMEPAGE_GET_LIST_GROUP\n        }\n    },\n    resetFormData() {\n        return {\n            type: homepageActions.HOMEPAGE_RESET_FORM_DATA\n        }\n    },\n};\nexport default homepageActions;\n","import homepageActions from \"./action\";\nimport siteConfig from \"../../configs/siteConfig\";\n\nconst initState = {\n    memberGroup: {},\n    listData: {\n        items: [],\n        pagination: [],\n        total: 0\n    },\n    filter: {\n        page: 1,\n        per_page: siteConfig.defaultItemPerPage,\n        sort: 'asc',\n        sort_by_column: 'id',\n        group_id: 0,\n        category_id:2\n    },\n    imageData: {\n        big: {\n            id: '',\n            url: '',\n        },\n        thumb: {\n            id: '',\n            url: '',\n        }\n    },\n    listGroup: [],\n    formData: {\n        id: '',\n        title: '',\n        short_description: '',\n        description: '',\n        image: '',\n        category_id: 2,\n        image_origin: ''\n    }\n};\n\nexport default function pageReducer(state = initState, action) {\n\n    switch (action.type) {\n        case homepageActions.HOMEPAGE_UPDATE_FILTER: {\n            return {\n                ...state,\n                filter: action.filter,\n            };\n        }\n        case homepageActions.HOMEPAGE_GET_LIST: {\n            return {\n                ...state,\n                filter: action.filter\n            };\n        }\n        case homepageActions.HOMEPAGE_GET_LIST_SUCCESS: {\n            return {\n                ...state,\n                listData: action.state.data,\n            };\n        }\n        case homepageActions.HOMEPAGE_GET_LIST_FAILED: {\n            return {\n                ...state,\n                listData: {\n                    items: [],\n                    pagination: []\n                }\n            };\n        }\n        case homepageActions.HOMEPAGE_UPLOAD_IMAGE_SUCCESS: {\n            return {\n                ...state,\n                imageData: action.state.data\n            };\n        }\n        case homepageActions.HOMEPAGE_UPLOAD_LOGO_SUCCESS: {\n            return {\n                ...state,\n                logo: action.state.data\n            };\n        }\n        case homepageActions.HOMEPAGE_GET_LIST_GROUP_SUCCESS: {\n            return {\n                ...state,\n                listGroup: action.state.data.items,\n            };\n        }\n        case homepageActions.HOMEPAGE_GET_DETAIL_SUCCESS: {\n            return {\n                ...state,\n                formData: action.state.data\n            };\n        }\n        case homepageActions.HOMEPAGE_RESET_FORM_DATA: {\n            return {\n                ...state,\n                formData: initState.formData\n            };\n        }\n        default:\n            return state;\n    }\n}","const galleryActions = {\n    GALLERY_UPDATE_FILTER: \"GALLERY_UPDATE_FILTER\",\n    GALLERY_GET_LIST: \"GALLERY_GET_LIST\",\n    GALLERY_GET_LIST_SUCCESS: \"GALLERY_GET_LIST_SUCCESS\",\n    GALLERY_GET_LIST_FAILED: \"GALLERY_GET_LIST_FAILED\",\n    GALLERY_GET_DETAIL: \"GALLERY_GET_DETAIL\",\n    GALLERY_GET_DETAIL_SUCCESS: \"GALLERY_GET_DETAIL_SUCCESS\",\n    GALLERY_GET_DETAIL_FAILED: \"GALLERY_GET_DETAIL_FAILED\",\n    GALLERY_STATUS_SUCCESS: \"GALLERY_STATUS_SUCCESS\",\n    GALLERY_STATUS_FAILED: \"GALLERY_STATUS_FAILED\",\n    GALLERY_ADD: \"GALLERY_ADD\",\n    GALLERY_ADD_SUCCESS: \"GALLERY_ADD_SUCCESS\",\n    GALLERY_EDIT: \"GALLERY_EDIT\",\n    GALLERY_EDIT_SUCCESS: \"GALLERY_EDIT_SUCCESS\",\n    GALLERY_DELETE: \"GALLERY_DELETE\",\n    GALLERY_DELETE_SUCCESS: \"GALLERY_DELETE_SUCCESS\",\n    GALLERY_DELETE_FAILED: \"GALLERY_DELETE_FAILED\",\n    GALLERY_UPLOAD_IMAGE: \"GALLERY_UPLOAD_IMAGE\",\n    GALLERY_UPLOAD_IMAGE_SUCCESS: \"GALLERY_UPLOAD_IMAGE_SUCCESS\",\n    GALLERY_UPLOAD_IMAGE_FAILED: \"GALLERY_UPLOAD_IMAGE_FAILED\",\n    GALLERY_UPLOAD_LOGO: \"GALLERY_UPLOAD_LOGO\",\n    GALLERY_UPLOAD_LOGO_SUCCESS: \"GALLERY_UPLOAD_LOGO_SUCCESS\",\n    GALLERY_UPLOAD_LOGO_FAILED: \"GALLERY_UPLOAD_LOGO_FAILED\",\n\n    GALLERY_GET_LIST_GROUP: \"ROOM_GET_LIST_GROUP\",\n    GALLERY_GET_LIST_GROUP_SUCCESS: \"ROOM_GET_LIST_GROUP_SUCCESS\",\n    GALLERY_RESET_FORM_DATA: \"ROOM_RESET_FORM_DATA\",\n\n    updateFilter(filter) {\n        return {\n            type: galleryActions.GALLERY_UPDATE_FILTER,\n            filter: filter\n        }\n    },\n    getList(filter) {\n        return {\n            type: galleryActions.GALLERY_GET_LIST,\n            filter: filter\n        }\n    },\n    getById(params) {\n        return {\n            type: galleryActions.GALLERY_GET_DETAIL,\n            params: params\n        }\n    },\n    add(params) {\n        return {\n            type: galleryActions.GALLERY_ADD,\n            params: params\n        }\n    },\n    edit(params) {\n        return {\n            type: galleryActions.GALLERY_EDIT,\n            params: params\n        }\n    },\n    delete(params) {\n        return {\n            type: galleryActions.GALLERY_DELETE,\n            params: params\n        }\n    },\n    uploadImage(params) {\n        return {\n            type: galleryActions.GALLERY_UPLOAD_IMAGE,\n            params: params\n        }\n    },\n    uploadLogo(params) {\n        return {\n            type: galleryActions.GALLERY_UPLOAD_LOGO,\n            params: params\n        }\n    },\n    getListGroup() {\n        return {\n            type: galleryActions.GALLERY_GET_LIST_GROUP\n        }\n    },\n    resetFormData() {\n        return {\n            type: galleryActions.GALLERY_RESET_FORM_DATA\n        }\n    },\n};\nexport default galleryActions;\n","import galleryActions from \"./action\";\nimport siteConfig from \"../../configs/siteConfig\";\n\nconst initState = {\n    memberGroup: {},\n    listData: {\n        items: [],\n        pagination: [],\n        total: 0\n    },\n    filter: {\n        page: 1,\n        per_page: siteConfig.defaultItemPerPage,\n        sort: 'asc',\n        sort_by_column: 'id',\n        group_id: 0,\n        category_id:1\n    },\n    imageData: {\n        big: {\n            id: '',\n            url: '',\n        },\n        thumb: {\n            id: '',\n            url: '',\n        }\n    },\n    listGroup: [],\n    formData: {\n        id: '',\n        title: '',\n        short_description: '',\n        description: '',\n        image: '',\n        category_id: 1,\n        image_origin: ''\n    }\n};\n\nexport default function galleryReducer(state = initState, action) {\n\n    switch (action.type) {\n        case galleryActions.GALLERY_UPDATE_FILTER: {\n            return {\n                ...state,\n                filter: action.filter,\n            };\n        }\n        case galleryActions.GALLERY_GET_LIST: {\n            return {\n                ...state,\n                filter: action.filter\n            };\n        }\n        case galleryActions.GALLERY_GET_LIST_SUCCESS: {\n            return {\n                ...state,\n                listData: action.state.data,\n            };\n        }\n        case galleryActions.GALLERY_GET_LIST_FAILED: {\n            return {\n                ...state,\n                listData: {\n                    items: [],\n                    pagination: []\n                }\n            };\n        }\n        case galleryActions.GALLERY_UPLOAD_IMAGE_SUCCESS: {\n            return {\n                ...state,\n                imageData: action.state.data\n            };\n        }\n        case galleryActions.GALLERY_UPLOAD_LOGO_SUCCESS: {\n            return {\n                ...state,\n                logo: action.state.data\n            };\n        }\n        case galleryActions.GALLERY_GET_LIST_GROUP_SUCCESS: {\n            return {\n                ...state,\n                listGroup: action.state.data.items,\n            };\n        }\n        case galleryActions.GALLERY_GET_DETAIL_SUCCESS: {\n            return {\n                ...state,\n                formData: action.state.data\n            };\n        }\n        case galleryActions.GALLERY_RESET_FORM_DATA: {\n            return {\n                ...state,\n                formData: initState.formData\n            };\n        }\n        default:\n            return state;\n    }\n}","const serviceActions = {\n    SERVICE_UPDATE_FILTER: \"SERVICE_UPDATE_FILTER\",\n    SERVICE_GET_LIST: \"SERVICE_GET_LIST\",\n    SERVICE_SEARCH_LIST: \"SERVICE_SEARCH_LIST\",\n    SERVICE_GET_LIST_SUCCESS: \"SERVICE_GET_LIST_SUCCESS\",\n    SERVICE_GET_LIST_FAILED: \"SERVICE_GET_LIST_FAILED\",\n    SERVICE_GET_DETAIL: \"SERVICE_GET_DETAIL\",\n    SERVICE_GET_DETAIL_SUCCESS: \"SERVICE_GET_DETAIL_SUCCESS\",\n    SERVICE_STATUS_SUCCESS: \"SERVICE_STATUS_SUCCESS\",\n    SERVICE_STATUS_FAILED: \"SERVICE_STATUS_FAILED\",\n    SERVICE_ADD: \"SERVICE_ADD\",\n    SERVICE_ADD_SUCCESS: \"SERVICE_ADD_SUCCESS\",\n    SERVICE_EDIT: \"SERVICE_EDIT\",\n    SERVICE_EDIT_SUCCESS: \"SERVICE_EDIT_SUCCESS\",\n    SERVICE_DELETE: \"SERVICE_DELETE\",\n    SERVICE_DELETE_SUCCESS: \"SERVICE_DELETE_SUCCESS\",\n    SERVICE_GET_LIST_SERVICE_TYPE: \"SERVICE_GET_LIST_SERVICE_TYPE\",\n    SERVICE_GET_LIST_SERVICE_TYPE_SUCCESS: \"SERVICE_GET_LIST_SERVICE_TYPE_SUCCESS\",\n    SERVICE_UPLOAD_IMAGE: \"SERVICE_UPLOAD_IMAGE\",\n    SERVICE_UPLOAD_IMAGE_SUCCESS: \"SERVICE_UPLOAD_IMAGE_SUCCESS\",\n    SERVICE_UPLOAD_IMAGE_FAILED: \"SERVICE_UPLOAD_IMAGE_FAILED\",\n    SERVICE_GET_LIST_GROUP: \"SERVICE_GET_LIST_GROUP\",\n    SERVICE_GET_LIST_GROUP_SUCCESS: \"SERVICE_GET_LIST_GROUP_SUCCESS\",\n    SERVICE_RESET_FORM_DATA: \"SERVICE_RESET_FORM_DATA\",\n    SERVICE_GET_LIST_SERVICE_FACILITY: \"SERVICE_GET_LIST_SERVICE_FACILITY\",\n    SERVICE_GET_LIST_SERVICE_FACILITY_SUCCESS: \"SERVICE_GET_LIST_SERVICE_FACILITY_SUCCESS\",\n\n    updateFilter(filter) {\n        return {\n            type: serviceActions.SERVICE_UPDATE_FILTER,\n            filter: filter\n        }\n    },\n    getList(filter) {\n        return {\n            type: serviceActions.SERVICE_GET_LIST,\n            filter: filter\n        }\n    },\n    getById(params) {\n        return {\n            type: serviceActions.SERVICE_GET_DETAIL,\n            params: params\n        }\n    },\n    add(params) {\n        return {\n            type: serviceActions.SERVICE_ADD,\n            params: params\n        }\n    },\n    edit(params) {\n        return {\n            type: serviceActions.SERVICE_EDIT,\n            params: params\n        }\n    },\n    delete(params) {\n        return {\n            type: serviceActions.SERVICE_DELETE,\n            params: params\n        }\n    },\n    uploadImage(params) {\n        return {\n            type: serviceActions.SERVICE_UPLOAD_IMAGE,\n            params: params\n        }\n    },\n    resetFormData() {\n        return {\n            type: serviceActions.SERVICE_RESET_FORM_DATA\n        }\n    },\n};\nexport default serviceActions;\n","import serviceActions from \"./action\";\nimport siteConfig from \"../../configs/siteConfig\";\n\nconst initState = {\n    listData: {\n        items: [],\n        total: 0,\n        actualPage: 1,\n    },\n    filter: {\n        page: 1,\n        per_page: siteConfig.defaultItemPerPage,\n        sort: 'asc',\n        sort_by_column: 'id',\n        s: '',\n    },\n    keyword: {\n        s: ''\n    },\n    formData: {\n        id: '',\n        name: {\n            vi: '',\n            en: '',\n            jp: {\n                kanji: '',\n                romaji: ''\n            },\n            kr: '',\n        },\n        description: {\n            vi: '',\n            en: '',\n            jp: {\n                kanji: '',\n                romaji: ''\n            },\n            kr: '',\n        },\n        images: {\n            source: '',\n            thumbnail: '',\n        },\n        images_origin: {\n            source: '',\n            thumbnail: '',\n        }\n    }\n};\n\nexport default function serviceReducer(state = initState, action) {\n\n    switch (action.type) {\n        case serviceActions.SERVICE_UPDATE_FILTER: {\n            return {\n                ...state,\n                filter: action.filter,\n            };\n        }\n        case serviceActions.SERVICE_SEARCH_LIST: {\n            return {\n                ...state,\n                keyword: action.keyword,\n            };\n        }\n        case serviceActions.SERVICE_GET_LIST_SUCCESS: {\n            return {\n                ...state,\n                listData: action.state.data,\n            };\n        }\n        case serviceActions.SERVICE_GET_LIST_FAILED: {\n            return {\n                ...state,\n                listData: [],\n            };\n        }\n        case serviceActions.SERVICE_UPLOAD_IMAGE_SUCCESS: {\n            return {\n                ...state,\n                imageData: action.state.data\n            };\n        }\n        case serviceActions.SERVICE_GET_DETAIL_SUCCESS: {\n            return {\n                ...state,\n                formData: action.state.data\n            };\n        }\n        case serviceActions.SERVICE_RESET_FORM_DATA: {\n            return {\n                ...state,\n                formData: initState.formData\n            };\n        }\n        default:\n            return state;\n    }\n}\n","const informationActions = {\n    INFORMATION_UPDATE_FILTER: \"INFORMATION_UPDATE_FILTER\",\n    INFORMATION_GET_LIST: \"INFORMATION_GET_LIST\",\n    INFORMATION_SEARCH_LIST: \"INFORMATION_SEARCH_LIST\",\n    INFORMATION_GET_LIST_SUCCESS: \"INFORMATION_GET_LIST_SUCCESS\",\n    INFORMATION_GET_LIST_FAILED: \"INFORMATION_GET_LIST_FAILED\",\n    INFORMATION_GET_DETAIL: \"INFORMATION_GET_DETAIL\",\n    INFORMATION_GET_DETAIL_SUCCESS: \"INFORMATION_GET_DETAIL_SUCCESS\",\n    INFORMATION_STATUS_SUCCESS: \"INFORMATION_STATUS_SUCCESS\",\n    INFORMATION_STATUS_FAILED: \"INFORMATION_STATUS_FAILED\",\n    INFORMATION_ADD: \"INFORMATION_ADD\",\n    INFORMATION_ADD_SUCCESS: \"INFORMATION_ADD_SUCCESS\",\n    INFORMATION_EDIT: \"INFORMATION_EDIT\",\n    INFORMATION_EDIT_SUCCESS: \"INFORMATION_EDIT_SUCCESS\",\n    INFORMATION_DELETE: \"INFORMATION_DELETE\",\n    INFORMATION_DELETE_SUCCESS: \"INFORMATION_DELETE_SUCCESS\",\n    INFORMATION_GET_LIST_INFORMATION_TYPE: \"INFORMATION_GET_LIST_INFORMATION_TYPE\",\n    INFORMATION_GET_LIST_INFORMATION_TYPE_SUCCESS: \"INFORMATION_GET_LIST_INFORMATION_TYPE_SUCCESS\",\n    INFORMATION_UPLOAD_IMAGE: \"INFORMATION_UPLOAD_IMAGE\",\n    INFORMATION_UPLOAD_IMAGE_SUCCESS: \"INFORMATION_UPLOAD_IMAGE_SUCCESS\",\n    INFORMATION_UPLOAD_IMAGE_FAILED: \"INFORMATION_UPLOAD_IMAGE_FAILED\",\n    INFORMATION_GET_LIST_GROUP: \"INFORMATION_GET_LIST_GROUP\",\n    INFORMATION_GET_LIST_GROUP_SUCCESS: \"INFORMATION_GET_LIST_GROUP_SUCCESS\",\n    INFORMATION_RESET_FORM_DATA: \"INFORMATION_RESET_FORM_DATA\",\n    INFORMATION_GET_LIST_INFORMATION_FACILITY: \"INFORMATION_GET_LIST_INFORMATION_FACILITY\",\n    INFORMATION_GET_LIST_INFORMATION_FACILITY_SUCCESS: \"INFORMATION_GET_LIST_INFORMATION_FACILITY_SUCCESS\",\n\n    updateFilter(filter) {\n        return {\n            type: informationActions.INFORMATION_UPDATE_FILTER,\n            filter: filter\n        }\n    },\n    getList(filter) {\n        return {\n            type: informationActions.INFORMATION_GET_LIST,\n            filter: filter\n        }\n    },\n    getById(params) {\n        return {\n            type: informationActions.INFORMATION_GET_DETAIL,\n            params: params\n        }\n    },\n    add(params) {\n        return {\n            type: informationActions.INFORMATION_ADD,\n            params: params\n        }\n    },\n    edit(params) {\n        return {\n            type: informationActions.INFORMATION_EDIT,\n            params: params\n        }\n    },\n    delete(params) {\n        return {\n            type: informationActions.INFORMATION_DELETE,\n            params: params\n        }\n    },\n    uploadImage(params) {\n        return {\n            type: informationActions.INFORMATION_UPLOAD_IMAGE,\n            params: params\n        }\n    },\n    resetFormData() {\n        return {\n            type: informationActions.INFORMATION_RESET_FORM_DATA\n        }\n    },\n};\nexport default informationActions;\n","import serviceActions from \"./action\";\nimport siteConfig from \"../../configs/siteConfig\";\n\nconst initState = {\n    listData: {\n        items: [],\n        total: 0,\n        actualPage: 1,\n    },\n    filter: {\n        page: 1,\n        per_page: siteConfig.defaultItemPerPage,\n        sort: 'asc',\n        sort_by_column: 'id',\n        s: '',\n    },\n    keyword: {\n        s: ''\n    },\n    formData: {\n        id: '',\n        name: {\n            vi: '',\n            en: '',\n            jp: {\n                kanji: '',\n                romaji: ''\n            },\n            kr: '',\n        },\n        description: {\n            vi: '',\n            en: '',\n            jp: {\n                kanji: '',\n                romaji: ''\n            },\n            kr: '',\n        },\n        images: {\n            source: '',\n            thumbnail: '',\n        },\n        images_origin: {\n            source: '',\n            thumbnail: '',\n        }\n    }\n};\n\nexport default function informationReducer(state = initState, action) {\n\n    switch (action.type) {\n        case serviceActions.INFORMATION_UPDATE_FILTER: {\n            return {\n                ...state,\n                filter: action.filter,\n            };\n        }\n        case serviceActions.INFORMATION_SEARCH_LIST: {\n            return {\n                ...state,\n                keyword: action.keyword,\n            };\n        }\n        case serviceActions.INFORMATION_GET_LIST_SUCCESS: {\n            return {\n                ...state,\n                listData: action.state.data,\n            };\n        }\n        case serviceActions.INFORMATION_GET_LIST_FAILED: {\n            return {\n                ...state,\n                listData: [],\n            };\n        }\n        case serviceActions.INFORMATION_UPLOAD_IMAGE_SUCCESS: {\n            return {\n                ...state,\n                imageData: action.state.data\n            };\n        }\n        case serviceActions.INFORMATION_GET_DETAIL_SUCCESS: {\n            return {\n                ...state,\n                formData: action.state.data\n            };\n        }\n        case serviceActions.INFORMATION_RESET_FORM_DATA: {\n            return {\n                ...state,\n                formData: initState.formData\n            };\n        }\n        default:\n            return state;\n    }\n}\n","import userReducer from './user/reducer';\nimport authReducer from './auth/reducer';\nimport languageSwitcher from './languageSwitcher/reducer';\nimport layoutReducer from './layout/reducer';\nimport categoryReducer from './category/reducer';\nimport roomFacilityReducer from './roomFacility/reducer';\nimport roomTypeReducer from './roomType/reducer';\nimport pageReducer from './page/reducer';\nimport roomReducer from './room/reducer';\nimport categoryPageReducer from './categoryPage/reducer';\nimport promotionReducer from './promotion/reducer';\nimport roleReducer from './role/reducer';\nimport homepageReducer from './homepage/reducer';\nimport galleryReducer from './gallery/reducer';\nimport serviceReducer from './service/reducer';\nimport informationReducer from './information/reducer';\n\nexport default  {\n    layoutReducer,\n    authReducer,\n    languageSwitcher,\n    userReducer,\n    categoryReducer,\n    roomTypeReducer,\n    roomFacilityReducer,\n    pageReducer,\n    roomReducer,\n    categoryPageReducer,\n    promotionReducer,\n    roleReducer,\n    homepageReducer,\n    galleryReducer,\n    serviceReducer,\n    informationReducer\n};\n","import SuperFetch from './SuperFetch';\n\nconst Urls = {\n    LIST : 'roles',\n    ADD : 'roles',\n    EDIT: 'roles/',\n    DELETE: 'roles/',\n    SHOW: 'roles/',\n};\n\nconst RoleService = {\n\n    list(payload) {\n        return new SuperFetch().get(Urls.LIST, payload);\n    },\n\n    add(payload) {\n        return new SuperFetch().post(Urls.ADD, payload);\n    },\n    edit(payload) {\n        return new SuperFetch().put(Urls.EDIT , payload);\n    },\n\n    delete(payload) {\n        return new SuperFetch().delete(Urls.DELETE, payload);\n    },\n\n    show(payload) {\n        return new SuperFetch().getById(Urls.SHOW , payload);\n    }\n};\n\nexport default RoleService;\nexport {\n    Urls\n}\n","import {all, fork, put, call, takeLatest, takeEvery} from 'redux-saga/effects';\nimport UserService from \"../../services/UserService\";\nimport userActions from './action';\nimport notification from \"../../helpers/Notification\";\nimport RoleService from \"../../services/RoleService\";\nimport {push} from \"connected-react-router\";\nimport * as PageUrls from \"../../configs/PagesUrl\";\n\nexport function* fetchData() {\n    yield takeLatest(userActions.USER_GET_LIST, function* (action) {\n        try {\n            const data = yield call(UserService.list, action.filter);\n            //call other apis if success\n\n            if(data.status) {\n                const state = {\n                    data: data.data\n                };\n                yield put({type: userActions.USER_GET_LIST_SUCCESS, state});\n            } else {\n                yield put({type: userActions.USER_GET_LIST_FAILED});\n            }\n        } catch (e) {\n            //already handle error in super fetch\n            //we show error only for dev if call wrong function\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n    yield takeLatest(userActions.USER_GET_ROLE_LIST, function* (action) {\n        try {\n            const data = yield call(RoleService.list, {per_page:999999999});\n            //call other apis if success\n\n            if(data.status) {\n                const state = {\n                    data: data.data\n                };\n                yield put({type: userActions.USER_GET_ROLE_LIST_SUCCESS, state});\n            } else {\n                yield put({type: userActions.USER_GET_LIST_FAILED});\n            }\n        } catch (e) {\n            //already handle error in super fetch\n            //we show error only for dev if call wrong function\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* fetchDataById() {\n    yield takeLatest(userActions.USER_GET_DETAIL, function* (action) {\n        try {\n            const data = yield call(UserService.show, action.params);\n            const state = {\n                data: data.data,\n                message: data.message,\n            };\n            if (data.status) {\n                yield put({ type: userActions.USER_GET_DETAIL_SUCCESS, state });\n            } else {\n                yield put({ type: userActions.USER_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* addData() {\n    yield takeLatest(userActions.USER_ADD, function* (action) {\n        try {\n            let info = {\n                ...action.params.data,\n            };\n\n            //add user data\n            notification.info(\"Adding user\");\n            const data = yield call(UserService.add, info);\n            if (data.status) {\n                const state = {\n                    id: data.data.id,\n                    message: data.message,\n                };\n                yield put({ type: userActions.USER_ADD_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                };\n                yield put({ type: userActions.USER_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\nexport function* editData() {\n    yield takeLatest(userActions.USER_EDIT, function* (action) {\n        try {\n            //get form params\n            let info = {\n                ...action.params.data\n            };\n            //update user\n            notification.info(\"Updating user\");\n            const data = yield call(UserService.edit, info);\n            if (data.status) {\n                const state = {\n                    id: data.data.id,\n                    message: data.message,\n                };\n                yield put({ type:userActions.USER_EDIT_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                };\n                yield put({ type: userActions.USER_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\nexport function* deleteData() {\n    yield takeLatest(userActions.USER_DELETE, function* (action) {\n        try {\n            notification.info(\"Deleting user\");\n            const data = yield call(UserService.delete, action.params);\n            const state = {\n                message: data.message,\n            };\n            if (data.status) {\n                yield put({ type: userActions.USER_DELETE_SUCCESS, state });\n            } else {\n                yield put({ type: userActions.USER_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* displayMessage() {\n    yield takeEvery(userActions.USER_ADD_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        yield put(push(PageUrls.PAGE_USER_LIST));\n    });\n    yield takeEvery(userActions.USER_EDIT_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        yield put(push(PageUrls.PAGE_USER_LIST));\n    });\n    yield takeEvery(userActions.USER_DELETE_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        yield put(push(PageUrls.PAGE_USER_LIST));\n    });\n    yield takeEvery(userActions.USER_STATUS_FAILED, function*(action) {\n        yield notification.error(action.state.message);\n    });\n}\n\nexport default function* rootSaga() {\n    yield all([\n        fork(fetchData),\n        fork(displayMessage),\n        fork(addData),\n        fork(editData),\n        fork(deleteData),\n        fork(fetchDataById)\n    ]);\n}\n","import {all, takeEvery, fork, put, call, takeLatest } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\nimport UserService from \"../../services/UserService\";\nimport authActions from './action';\nimport notification from \"../../helpers/Notification\";\nimport {getToken, clearToken, setToken} from '../../helpers/Ultis';\nimport * as PageUrls from '../../configs/PagesUrl';\n\nexport function* authorize() {\n    yield takeLatest(authActions.AUTH_AUTHORIZE, function* (action) {\n        try {\n\n            const params = {email: action.payload.username, password: action.payload.password};\n            const data = yield call(UserService.login, params);\n\n            if (data.status) {\n                const state = {\n                    isLoggedIn: true,\n                    tokenInfo: data.data,\n                    message: data.message,\n                };\n                yield put({type: authActions.AUTH_AUTHORIZE_SUCCESS, state});\n            } else {\n                const state = {\n                    isLoggedIn: false,\n                    tokenInfo: [],\n                    message: data.message,\n                };\n                yield put({type: authActions.AUTH_AUTHORIZE_FAILED, state});\n            }\n\n        } catch (e) {\n            //already handle error in super fetch\n            //we show error only for dev if call wrong function\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* loginSuccess() {\n    yield takeEvery(authActions.AUTH_AUTHORIZE_SUCCESS, function*(action) {\n        yield setToken(JSON.stringify(action.state));\n\n        const data = yield call(UserService.getLoggedUserInfo);\n        if (data.status) {\n            const state = {\n                userInfo: data.data,\n                message: data.message,\n            };\n            yield put({type: authActions.AUTH_GET_USER_SUCCESS, state});\n        } else {\n            const state = {\n                userInfo: {},\n                message: data.message,\n            };\n            yield put({type: authActions.AUTH_GET_USER_FAILED, state});\n        }\n\n        //from login back or background check\n        if (action.background === undefined) {\n            notification.success(action.state.message);\n            yield put(push(PageUrls.PAGE_DASHBOARD));\n        }\n    });\n}\n\nexport function* loginError() {\n    yield takeEvery(authActions.AUTH_AUTHORIZE_FAILED, function*(action) {\n        yield notification.error(action.state.message);\n    });\n}\n\nexport function* logout() {\n    yield takeEvery(authActions.AUTH_LOGOUT, function*() {\n        clearToken();\n        yield put(push(PageUrls.PAGE_ROOT));\n    });\n}\nexport function* checkAuthorization() {\n    yield takeEvery(authActions.AUTH_CHECK_AUTHORIZATION, function*() {\n        const data = getToken().get('data');\n        if (data) {\n            yield put({\n                type: authActions.AUTH_AUTHORIZE_SUCCESS,\n                state: JSON.parse(data),\n                background: true,\n            });\n        }\n    });\n}\n\nexport default function* rootSaga() {\n    yield all([\n        fork(authorize),\n        fork(checkAuthorization),\n        fork(loginSuccess),\n        fork(loginError),\n        fork(logout),\n    ]);\n}\n","import SuperFetch from './SuperFetch';\n\nconst Urls = {\n    LIST: 'categories',\n    SHOW: 'categories/',\n    ADD: 'categories',\n    EDIT: 'categories/',\n    DELETE: 'categories/'\n};\nconst CategoryPageService  = {\n\n    list(payload) {\n        return new SuperFetch().get(Urls.LIST, payload);\n    },\n\n    show(id) {\n        return new SuperFetch().getById(Urls.SHOW, id);\n    },\n\n    add(payload) {\n        return new SuperFetch().post(Urls.ADD, payload);\n    },\n\n    edit(payload) {\n        return new SuperFetch().put(Urls.EDIT, payload);\n    },\n\n    delete(payload) {\n        return new SuperFetch().delete(Urls.DELETE, payload);\n    },\n};\n\nexport default CategoryPageService;\nexport {\n    Urls\n}\n","import SuperFetch from './SuperFetch';\n\nconst Urls = {\n    LIST : 'room-types',\n    ADD : 'room-types',\n    EDIT: 'room-types/',\n    DELETE: 'room-types/',\n    SHOW: 'room-types/',\n    UPDATE_SORT_LIST: 'room-types/update-sort-list',\n};\n\nconst RoomTypeService = {\n\n    list(payload) {\n        return new SuperFetch().get(Urls.LIST, payload);\n    },\n\n    add(payload) {\n        return new SuperFetch().post(Urls.ADD, payload);\n    },\n    edit(payload) {\n        return new SuperFetch().put(Urls.EDIT , payload);\n    },\n\n    delete(payload) {\n        return new SuperFetch().delete(Urls.DELETE, payload);\n    },\n\n    show(payload) {\n        return new SuperFetch().getById(Urls.SHOW , payload);\n    },\n    updateSortList(payload) {\n        return new SuperFetch().post(Urls.UPDATE_SORT_LIST , payload);\n    },\n};\n\nexport default RoomTypeService;\nexport {\n    Urls\n}\n","import { all, fork, put, call, takeLatest, takeEvery } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\nimport CategoryService from \"../../services/CategoryService\";\nimport categoryActions from './action';\nimport notification from \"../../helpers/Notification\";\nimport * as PageUrls from '../../configs/PagesUrl';\nimport RoomTypeService from \"../../services/RoomTypeService\";\n\nexport function* fetchData() {\n    yield takeLatest(categoryActions.CATEGORY_GET_LIST, function* (action) {\n        try {\n            const data = yield call(CategoryService.list, action.filter);\n            const state = {\n                data: data.data,\n                message: data.message\n            };\n            if (data.status) {\n                yield put({ type: categoryActions.CATEGORY_GET_LIST_SUCCESS, state });\n            } else {\n                yield put({ type: categoryActions.CATEGORY_GET_LIST_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n    yield takeLatest(categoryActions.CATEGORY_GET_LIST_GROUP, function* (action) {\n        try {\n            const data = yield call(RoomTypeService.list, {per_page: 1000000});\n            const state = {\n                data: data.data,\n                message: data.message,\n            };\n            if (data.status) {\n                yield put({ type: categoryActions.CATEGORY_GET_LIST_GROUP_SUCCESS, state });\n            } else {\n                yield put({ type: categoryActions.CATEGORY_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\nexport function* fetchDataById() {\n\n    yield takeLatest(categoryActions.CATEGORY_GET_DETAIL, function* (action) {\n        try {\n            const data = yield call(CategoryService.show, action.params);\n            if (data.status) {\n                const state = {\n                    data: data.data\n                };\n                yield put({ type: categoryActions.CATEGORY_GET_DETAIL_SUCCESS, state });\n            } else {\n                yield put({ type: categoryActions.CATEGORY_STATUS_FAILED });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\nexport function* addData() {\n    yield takeLatest(categoryActions.CATEGORY_ADD, function* (action) {\n        try {\n            let info = {\n                ...action.params.data,\n            };\n\n            //add group data\n            notification.info(\"Adding category\");\n            const data = yield call(CategoryService.add, info);\n            if (data.status) {\n                const state = {\n                    id: data.data.id,\n                    message: data.message,\n                };\n                yield put({ type: categoryActions.CATEGORY_ADD_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                };\n                yield put({ type: categoryActions.CATEGORY_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* editData() {\n    yield takeLatest(categoryActions.CATEGORY_EDIT, function* (action) {\n        try {\n            //get form params\n            let info = {\n                ...action.params.data\n            };\n            //update group\n            notification.info(\"Updating category\");\n            const data = yield call(CategoryService.edit, info);\n            if (data.status) {\n                const state = {\n                    id: data.data.id,\n                    message: data.message,\n                };\n                yield put({ type:categoryActions.CATEGORY_EDIT_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                };\n                yield put({ type: categoryActions.CATEGORY_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* deleteData() {\n    yield takeLatest(categoryActions.CATEGORY_DELETE, function* (action) {\n        try {\n            const data = yield call(CategoryService.delete, action.params);\n            const state = {\n                message: data.message,\n                id: parseInt(data.data)\n            };\n            if (data.status) {\n                yield put({ type: categoryActions.CATEGORY_DELETE_SUCCESS, state });\n            } else {\n                yield put({ type: categoryActions.CATEGORY_DELETE_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* displayMessage() {\n\n    yield takeEvery(categoryActions.CATEGORY_STATUS_FAILED, function*(action) {\n        yield notification.error(action.state.message);\n    });\n\n    yield takeEvery(categoryActions.CATEGORY_GET_LIST_FAILED, function*(action) {\n        yield notification.error(action.state.message);\n    });\n\n    yield takeEvery(categoryActions.CATEGORY_ADD_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        yield put(push(PageUrls.PAGE_CATEGORY_LIST));\n    });\n\n    yield takeEvery(categoryActions.CATEGORY_EDIT_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        yield put(push(PageUrls.PAGE_CATEGORY_LIST));\n    });\n\n    yield takeEvery(categoryActions.CATEGORY_DELETE_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        yield put(push(PageUrls.PAGE_CATEGORY_LIST));\n    });\n    yield takeEvery(categoryActions.CATEGORY_DELETE_FAILED, function*(action) {\n        yield notification.error(action.state.message);\n    });\n}\n\nexport default function* rootSaga() {\n    yield all([\n        fork(fetchData),\n        fork(fetchDataById),\n        fork(addData),\n        fork(editData),\n        fork(deleteData),\n        fork(displayMessage),\n    ]);\n}\n","import {all, fork, put, call, takeLatest, takeEvery} from 'redux-saga/effects';\nimport RoomTypeService from \"../../services/RoomTypeService\";\nimport roomTypeActions from './action';\nimport notification from \"../../helpers/Notification\";\nimport {push} from \"connected-react-router\";\nimport * as PageUrls from \"../../configs/PagesUrl\";\n\nexport function* fetchData() {\n    yield takeLatest(roomTypeActions.ROOM_TYPE_GET_LIST, function* (action) {\n        try {\n            const data = yield call(RoomTypeService.list, action.filter);\n            //call other apis if success\n\n            if(data.status) {\n                const state = {\n                    data: data.data,\n                    message: data.message\n                };\n                yield put({type: roomTypeActions.ROOM_TYPE_GET_LIST_SUCCESS, state});\n            } else {\n                yield put({type: roomTypeActions.ROOM_TYPE_GET_LIST_FAILED});\n            }\n        } catch (e) {\n            //already handle error in super fetch\n            //we show error only for dev if call wrong function\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* fetchDataById() {\n    yield takeLatest(roomTypeActions.ROOM_TYPE_GET_DETAIL, function* (action) {\n        try {\n            const data = yield call(RoomTypeService.show, action.params);\n            const state = {\n                data: data.data,\n                message: data.message,\n            };\n            if (data.status) {\n                yield put({ type: roomTypeActions.ROOM_TYPE_GET_DETAIL_SUCCESS, state });\n            } else {\n                yield put({ type: roomTypeActions.ROOM_TYPE_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\n\nexport function* addData() {\n    yield takeLatest(roomTypeActions.ROOM_TYPE_ADD, function* (action) {\n        try {\n            let info = {\n                ...action.params.data,\n            };\n\n            //add group data\n            notification.info(\"Đang thêm...\");\n            const data = yield call(RoomTypeService.add, info);\n            if (data.status) {\n                const state = {\n                    id: data.data.id,\n                    message: data.message,\n                };\n                yield put({ type: roomTypeActions.ROOM_TYPE_ADD_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                };\n                yield put({ type: roomTypeActions.ROOM_TYPE_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\nexport function* editData() {\n    yield takeLatest(roomTypeActions.ROOM_TYPE_EDIT, function* (action) {\n        try {\n            //get form params\n            let info = {\n                ...action.params.data\n            };\n            //update group\n            notification.info(\"Đang cập nhât...\");\n            const data = yield call(RoomTypeService.edit, info);\n            if (data.status) {\n                const state = {\n                    id: data.data.id,\n                    message: data.message,\n                };\n                yield put({ type:roomTypeActions.ROOM_TYPE_EDIT_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                };\n                yield put({ type: roomTypeActions.ROOM_TYPE_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n\n    yield takeLatest(roomTypeActions.ROOM_TYPE_UPDATE_SORT_LIST, function* (action) {\n        try {\n            notification.info(\"Đang cập nhât...\");\n            const data = yield call(RoomTypeService.updateSortList, action.params);\n            if (data.status) {\n                const state = {\n                    message: data.message,\n                };\n                yield put({ type:roomTypeActions.ROOM_TYPE_UPDATE_SORT_LIST_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                };\n                yield put({ type: roomTypeActions.ROOM_TYPE_UPDATE_SORT_LIST_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\nexport function* deleteData() {\n    yield takeLatest(roomTypeActions.ROOM_TYPE_DELETE, function* (action) {\n        try {\n            notification.info(\"Deleting...\");\n            const data = yield call(RoomTypeService.delete, action.params);\n            const state = {\n                message: data.message,\n            };\n            if (data.status) {\n                yield put({ type: roomTypeActions.ROOM_TYPE_DELETE_SUCCESS, state });\n            } else {\n                yield put({ type: roomTypeActions.ROOM_TYPE_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* displayMessage() {\n    yield takeEvery(roomTypeActions.ROOM_TYPE_ADD_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        yield put(push(PageUrls.PAGE_ROOM_TYPE_LIST));\n    });\n    yield takeEvery(roomTypeActions.ROOM_TYPE_EDIT_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        yield put(push(PageUrls.PAGE_ROOM_TYPE_LIST));\n    });\n    yield takeEvery(roomTypeActions.ROOM_TYPE_DELETE_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        yield put(push(PageUrls.PAGE_ROOM_TYPE_LIST));\n    });\n    yield takeEvery(roomTypeActions.ROOM_TYPE_STATUS_FAILED, function*(action) {\n        yield notification.error(action.state.message);\n    });\n    yield takeEvery(roomTypeActions.ROOM_TYPE_UPDATE_SORT_LIST_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n    });\n    yield takeEvery(roomTypeActions.ROOM_TYPE_UPDATE_SORT_LIST_FAILED, function*(action) {\n        yield notification.error(action.state.message);\n        yield put(push(PageUrls.PAGE_ROOM_TYPE_LIST));\n    });\n}\n\n\nexport default function* rootSaga() {\n    yield all([\n        fork(fetchData),\n        fork(displayMessage),\n        fork(addData),\n        fork(editData),\n        fork(deleteData),\n        fork(fetchDataById)\n    ]);\n}\n","import SuperFetch from './SuperFetch';\n\nconst Urls = {\n    LIST : 'room-facilities',\n    ADD : 'room-facilities',\n    EDIT: 'room-facilities/',\n    DELETE: 'room-facilities/',\n    SHOW: 'room-facilities/',\n};\n\nconst RoomFacilityService = {\n\n    list(payload) {\n        return new SuperFetch().get(Urls.LIST, payload);\n    },\n\n    add(payload) {\n        return new SuperFetch().post(Urls.ADD, payload);\n    },\n    edit(payload) {\n        return new SuperFetch().put(Urls.EDIT , payload);\n    },\n\n    delete(payload) {\n        return new SuperFetch().delete(Urls.DELETE, payload);\n    },\n\n    show(payload) {\n        return new SuperFetch().getById(Urls.SHOW , payload);\n    }\n};\n\nexport default RoomFacilityService;\nexport {\n    Urls\n}\n","import {all, fork, put, call, takeLatest, takeEvery} from 'redux-saga/effects';\nimport RoomFacilityService from \"../../services/RoomFacilityService\";\nimport variantActions from './action';\nimport notification from \"../../helpers/Notification\";\n// import variantActions from \"../variant/action\";\n// import memberVariantActions from \"../memberVariant/action\";\n// import VariantService from \"../../services/VariantService\";\nimport {push} from \"connected-react-router\";\nimport * as PageUrls from \"../../configs/PagesUrl\";\n\nexport function* fetchData() {\n    yield takeLatest(variantActions.VARIANT_GET_LIST, function* (action) {\n        try {\n            const data = yield call(RoomFacilityService.list, action.filter);\n            //call other apis if success\n\n            if(data.status) {\n                const state = {\n                    data: data.data,\n                    message: data.message\n                };\n                yield put({type: variantActions.VARIANT_GET_LIST_SUCCESS, state});\n            } else {\n                yield put({type: variantActions.VARIANT_GET_LIST_FAILED});\n            }\n        } catch (e) {\n            //already handle error in super fetch\n            //we show error only for dev if call wrong function\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* fetchDataById() {\n    yield takeLatest(variantActions.VARIANT_GET_DETAIL, function* (action) {\n        try {\n            const data = yield call(RoomFacilityService.show, action.params);\n            const state = {\n                data: data.data,\n                message: data.message,\n            };\n            if (data.status) {\n                yield put({ type: variantActions.VARIANT_GET_DETAIL_SUCCESS, state });\n            } else {\n                yield put({ type: variantActions.VARIANT_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\n\nexport function* addData() {\n    yield takeLatest(variantActions.VARIANT_ADD, function* (action) {\n        try {\n            let info = {\n                ...action.params.data,\n            };\n\n            //add variant data\n            notification.info(\"Đang thêm...\");\n            const data = yield call(RoomFacilityService.add, info);\n            if (data.status) {\n                const state = {\n                    id: data.data.id,\n                    message: data.message,\n                };\n                yield put({ type: variantActions.VARIANT_ADD_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                };\n                yield put({ type: variantActions.VARIANT_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\nexport function* editData() {\n    yield takeLatest(variantActions.VARIANT_EDIT, function* (action) {\n        try {\n            //get form params\n            let info = {\n                ...action.params.data\n            };\n            //update variant\n            notification.info(\"Đang cập nhât...\");\n            const data = yield call(RoomFacilityService.edit, info);\n            if (data.status) {\n                const state = {\n                    id: data.data.id,\n                    message: data.message,\n                };\n                yield put({ type:variantActions.VARIANT_EDIT_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                };\n                yield put({ type: variantActions.VARIANT_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\nexport function* deleteData() {\n    yield takeLatest(variantActions.VARIANT_DELETE, function* (action) {\n        try {\n            notification.info(\"Deleting...\");\n            const data = yield call(RoomFacilityService.delete, action.params);\n            const state = {\n                message: data.message,\n            };\n            if (data.status) {\n                yield put({ type: variantActions.VARIANT_DELETE_SUCCESS, state });\n            } else {\n                yield put({ type: variantActions.VARIANT_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* displayMessage() {\n    yield takeEvery(variantActions.VARIANT_ADD_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        yield put(push(PageUrls.PAGE_ROOM_FACILITY_LIST));\n    });\n    yield takeEvery(variantActions.VARIANT_EDIT_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        yield put(push(PageUrls.PAGE_ROOM_FACILITY_LIST));\n    });\n    yield takeEvery(variantActions.VARIANT_DELETE_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        yield put(push(PageUrls.PAGE_ROOM_FACILITY_LIST));\n    });\n    yield takeEvery(variantActions.VARIANT_STATUS_FAILED, function*(action) {\n        yield notification.error(action.state.message);\n    });\n}\n\n\nexport default function* rootSaga() {\n    yield all([\n        fork(fetchData),\n        fork(displayMessage),\n        fork(addData),\n        fork(editData),\n        fork(deleteData),\n        fork(fetchDataById)\n    ]);\n}\n","import SuperFetch from './SuperFetch';\n\nconst Urls = {\n    LIST: 'pages',\n    SHOW: 'pages/',\n    ADD: 'pages',\n    EDIT: 'pages/',\n    DELETE: 'pages/',\n    UPLOAD: 'images'\n};\nconst PageService = {\n\n    list(payload) {\n        return new SuperFetch().get(Urls.LIST, payload);\n    },\n\n    show(payload) {\n        return new SuperFetch().getById(Urls.SHOW, payload);\n    },\n\n    add(payload) {\n        return new SuperFetch().post(Urls.ADD, payload);\n    },\n\n    edit(payload) {\n        return new SuperFetch().put(Urls.EDIT, payload);\n    },\n\n    delete(payload) {\n        return new SuperFetch().delete(Urls.DELETE, payload);\n    },\n\n    upload(payload) {\n        return new SuperFetch().upload(Urls.UPLOAD, payload);\n    }\n};\n\nexport default PageService;\nexport {\n    Urls\n}\n","import { all, fork, put, call, takeLatest, takeEvery } from 'redux-saga/effects';\nimport PageService from \"../../services/PageService\";\nimport pageActions from './action';\nimport notification from \"../../helpers/Notification\";\nimport {push} from \"connected-react-router\";\nimport * as PageUrls from \"../../configs/PagesUrl\";\nimport ImageService from \"../../services/ImageService\";\n\nexport function* fetchData() {\n    yield takeLatest(pageActions.PAGE_GET_LIST, function* (action) {\n        try {\n            const data = yield call(PageService.list, action.filter);\n            const state = {\n                data: data.data,\n                message: data.message\n            };\n            if (data.status) {\n                yield put({ type: pageActions.PAGE_GET_LIST_SUCCESS, state });\n            } else {\n                yield put({ type: pageActions.PAGE_GET_LIST_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\nexport function* fetchDataById() {\n\n    yield takeLatest(pageActions.PAGE_GET_DETAIL, function* (action) {\n        try {\n            const data = yield call(PageService.show, action.params);\n            if (data.status) {\n                const state = {\n                    data: data.data\n                };\n                yield put({ type: pageActions.PAGE_GET_DETAIL_SUCCESS, state });\n            } else {\n                yield put({ type: pageActions.PAGE_GET_DETAIL_FAILED });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\nexport function* addData() {\n    yield takeLatest(pageActions.PAGE_ADD, function* (action) {\n        try {\n            //upload image\n            const dataUploadImage = yield call(ImageService.upload,\n                { image: action.params.image, nothumb: true });\n            if (!dataUploadImage.status) {\n                notification.error(dataUploadImage.message);\n                return;\n            }\n            //override image params\n            let info = {\n                ...action.params.data,\n                sample_image: dataUploadImage.data.big.id\n            };\n\n            //add product data\n            notification.info(\"Adding page template\");\n            const data = yield call(PageService.add, info);\n            if (data.status) {\n                const state = {\n                    id: data.data.id,\n                    message: data.message,\n                };\n                yield put({ type: pageActions.PAGE_ADD_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                };\n                yield put({ type: pageActions.PAGE_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* editData() {\n    yield takeLatest(pageActions.PAGE_EDIT, function* (action) {\n        try {\n            //get form params\n            let info = {\n                ...action.params.data\n            };\n            //upload image\n            if (action.params.image !== undefined) {\n                const dataUploadImage = yield call(ImageService.upload,\n                    {image: action.params.image, nothumb: true});\n                if (!dataUploadImage.status) {\n                    notification.error(dataUploadImage.message);\n                    return;\n                }\n                //override image params\n                info = {\n                    ...action.params.data,\n                    sample_image: dataUploadImage.data.big.id\n                };\n                //delete old images\n                yield call(ImageService.delete, info.sample_image_origin);\n            } else {\n                //do not post old one, it's url\n                delete info.sample_image;\n            }\n            //update product data\n            notification.info(\"Updating page template\");\n            const data = yield call(PageService.edit, info);\n            if (data.status) {\n                const state = {\n                    id: data.data.id,\n                    message: data.message,\n                };\n                yield put({ type: pageActions.PAGE_EDIT_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                };\n                yield put({ type: pageActions.PAGE_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* uploadImage() {\n    yield takeLatest(pageActions.PAGE_UPLOAD_IMAGE, function* (action) {\n        try {\n            const data = yield call(PageService.upload, action.params);\n            if (data.status) {\n                const state = {\n                    data: data.data\n                };\n                yield put({ type: pageActions.PAGE_UPLOAD_IMAGE_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                };\n                yield put({ type: pageActions.PAGE_UPLOAD_IMAGE_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* uploadLogo() {\n    yield takeLatest(pageActions.PAGE_UPLOAD_LOGO, function* (action) {\n        try {\n            const data = yield call(PageService.upload, action.params);\n            if (data.status) {\n                const state = {\n                    data: data.data\n                };\n                yield put({ type: pageActions.PAGE_UPLOAD_LOGO_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                };\n                yield put({ type: pageActions.PAGE_UPLOAD_LOGO_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* deleteData() {\n    yield takeLatest(pageActions.PAGE_DELETE, function* (action) {\n        try {\n            const data = yield call(PageService.delete, action.params.id);\n            const state = {\n                message: data.message,\n                id: parseInt(data.data)\n            };\n            if (data.status) {\n                yield put({ type: pageActions.PAGE_DELETE_SUCCESS, state });\n                yield call(ImageService.delete, action.params.image);\n\n            } else {\n                yield put({ type: pageActions.PAGE_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* displayMessage() {\n    yield takeEvery(pageActions.PAGE_STATUS_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        // yield put(push(PageUrls.PAGE_MEMBER_GROUP_DETAILS + \"/\" + action.state.id));\n    });\n\n    yield takeEvery(pageActions.PAGE_STATUS_FAILED, function*(action) {\n        yield notification.error(action.state.message);\n    });\n\n    yield takeEvery(pageActions.PAGE_GET_LIST_FAILED, function*(action) {\n        yield notification.error(action.state.message);\n    });\n\n    yield takeEvery(pageActions.PAGE_ADD_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        yield put(push(PageUrls.PAGE_MASTER_PAGE_LIST));\n    });\n\n    yield takeEvery(pageActions.PAGE_EDIT_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        yield put(push(PageUrls.PAGE_MASTER_PAGE_LIST));\n    });\n\n    yield takeEvery(pageActions.PAGE_DELETE_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        yield put(push(PageUrls.PAGE_MASTER_PAGE_LIST));\n    });\n    yield takeEvery(pageActions.PAGE_DELETE_FAILED, function*(action) {\n        yield notification.error(action.state.message);\n    });\n}\n\nexport default function* rootSaga() {\n    yield all([\n        fork(fetchData),\n        fork(fetchDataById),\n        fork(addData),\n        fork(editData),\n        fork(deleteData),\n        fork(displayMessage),\n        fork(uploadImage),\n        fork(uploadLogo),\n    ]);\n}\n","import SuperFetch from './SuperFetch';\n\nconst Urls = {\n    LIST: 'rooms',\n    SHOW: 'rooms/',\n    ADD: 'rooms',\n    EDIT: 'rooms/',\n    DELETE: 'rooms/',\n    LIST_FACILITY: 'room-facilities'\n};\nconst RoomService = {\n\n    list(payload) {\n        return new SuperFetch().get(Urls.LIST, payload);\n    },\n    show(payload) {\n        return new SuperFetch().getById(Urls.SHOW, payload);\n    },\n\n    add(payload) {\n        return new SuperFetch().post(Urls.ADD, payload);\n    },\n\n    edit(payload) {\n        return new SuperFetch().put(Urls.EDIT , payload);\n    },\n\n    delete(payload) {\n        return new SuperFetch().delete(Urls.DELETE, payload);\n    },\n\n    listVariant(payload) {\n        return new SuperFetch().get(Urls.LIST_FACILITY, payload);\n    }\n};\n\nexport default RoomService;\nexport {\n    Urls\n}\n","import { all, fork, put, call, takeLatest, takeEvery } from 'redux-saga/effects';\nimport RoomService from \"../../services/RoomService\";\nimport roomActions from './action';\nimport notification from \"../../helpers/Notification\";\nimport * as PageUrls from '../../configs/PagesUrl';\nimport { push } from 'connected-react-router';\nimport PageService from \"../../services/PageService\";\nimport ImageService from \"../../services/ImageService\";\nimport RoomTypeService from \"../../services/RoomTypeService\";\nimport {store} from \"../store\";\nimport authActions from \"../auth/action\";\n\nexport function* fetchData() {\n    yield takeLatest(roomActions.ROOM_GET_LIST, function* (action) {\n        try {\n            const data = yield call(RoomService.list, action.filter);\n            const state = {\n                data: data.data,\n                message: data.message,\n            };\n            if (data.status) {\n                yield put({ type: roomActions.ROOM_GET_LIST_SUCCESS, state });\n            } else {\n                yield put({ type: roomActions.ROOM_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n    yield takeLatest(roomActions.ROOM_GET_LIST_ROOM_TYPE, function* (action) {\n        try {\n            const data = yield call(RoomTypeService.list, {per_page: 1000000});\n            const state = {\n                data: data.data,\n                message: data.message,\n            };\n            if (data.status) {\n                yield put({ type: roomActions.ROOM_GET_LIST_ROOM_TYPE_SUCCESS, state });\n            } else {\n                yield put({ type: roomActions.ROOM_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n    yield takeLatest(roomActions.ROOM_GET_LIST_ROOM_FACILITY, function* (action) {\n        try {\n            const data = yield call(RoomService.listVariant, {per_page: 1000000});\n            const state = {\n                data: data.data,\n                message: data.message,\n            };\n            if (data.status) {\n                yield put({ type: roomActions.ROOM_GET_LIST_ROOM_FACILITY_SUCCESS, state });\n            } else {\n                yield put({ type: roomActions.ROOM_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* fetchDataById() {\n    yield takeLatest(roomActions.ROOM_GET_DETAIL, function* (action) {\n        try {\n            const data = yield call(RoomService.show, action.params);\n            const state = {\n                data: data.data,\n                message: data.message,\n            };\n            if (data.status) {\n                yield put({ type: roomActions.ROOM_GET_DETAIL_SUCCESS, state });\n            } else {\n                yield put({ type: roomActions.ROOM_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\nexport function* addData() {\n    yield takeLatest(roomActions.ROOM_ADD, function* (action) {\n        try {\n            //upload image\n            const dataUploadImage = yield call(ImageService.upload, { image: action.params.image });\n            if (!dataUploadImage.status) {\n                notification.error(dataUploadImage.message);\n                return;\n            }\n            //override image params\n            let info = {\n                ...action.params.data,\n                images: {\n                    source: dataUploadImage.data.big.id,\n                    thumbnail: dataUploadImage.data.thumb.id,\n                }\n            };\n\n            //add product data\n            notification.info(\"Đang thêm...\");\n            const data = yield call(RoomService.add, info);\n            if (data.status) {\n                const state = {\n                    id: data.data.id,\n                    message: data.message,\n                };\n                yield put({ type: roomActions.ROOM_ADD_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                };\n                yield put({ type: roomActions.ROOM_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n\n    yield takeLatest(roomActions.ROOM_ADD_IMAGE, function* (action) {\n        try {\n            //upload image\n            const dataUploadImage = yield call(ImageService.upload, { image: action.params.image });\n            if (!dataUploadImage.status) {\n                notification.error(dataUploadImage.message);\n                return;\n            }\n\n            //override image params\n            let newGalleries = [...action.params.data.galleries, {\n                source: dataUploadImage.data.big.id,\n                thumbnail: dataUploadImage.data.thumb.id,\n            }];\n\n            let info = {\n                ...action.params.data,\n                galleries: newGalleries\n            };\n\n            //add product data\n            notification.info(\"Adding image...\");\n            const data = yield call(RoomService.edit, info);\n            if (data.status) {\n                const state = {\n                    id: info.id,\n                    message: data.message,\n                };\n                yield put({ type: roomActions.ROOM_ADD_IMAGE_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                    id: info.id\n                };\n                yield put({ type: roomActions.ROOM_ADD_IMAGE_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* uploadImage() {\n    yield takeLatest(roomActions.ROOM_UPLOAD_IMAGE, function* (action) {\n        try {\n            const data = yield call(ImageService.upload, action.params);\n            if (data.status) {\n                const state = {\n                    data: data.data\n                };\n                notification.success('Upload success!');\n                yield put({ type: roomActions.ROOM_UPLOAD_IMAGE_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                };\n                notification.error('Upload failed!');\n                yield put({ type: roomActions.ROOM_UPLOAD_IMAGE_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* editData() {\n    yield takeLatest(roomActions.ROOM_EDIT, function* (action) {\n        try {\n            //get form params\n            let info = {\n                ...action.params.data\n            };\n            //upload image\n            if (action.params.image !== undefined) {\n                const dataUploadImage = yield call(ImageService.upload, {image: action.params.image});\n                if (!dataUploadImage.status) {\n                    notification.error(dataUploadImage.message);\n                    return;\n                }\n                //override image params\n                info = {\n                    ...action.params.data,\n                    images: {\n                        source: dataUploadImage.data.big.id,\n                        thumbnail: dataUploadImage.data.thumb.id,\n                    }\n                };\n                //delete old images\n                const [source, thumbnail] = yield all([\n                    call(ImageService.delete, info.images_origin.source),\n                    call(ImageService.delete, info.images_origin.thumbnail)\n                ]);\n            } else {\n                //do not post old one, it's url\n                delete info.images;\n            }\n            //update product data\n            notification.info(\"Đang cập nhât...\");\n            const data = yield call(RoomService.edit, info);\n            if (data.status) {\n                const state = {\n                    id: data.data.id,\n                    message: data.message,\n                };\n                yield put({ type: roomActions.ROOM_EDIT_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                };\n                yield put({ type: roomActions.ROOM_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n\n    yield takeLatest(roomActions.ROOM_DELETE_IMAGE, function* (action) {\n        try {\n            notification.info(\"Deleting image...\");\n            const params = action.params;\n\n            //delete old images\n            const [source, thumbnail] = yield all([\n                call(ImageService.delete, params.needDelete.source),\n                call(ImageService.delete, params.needDelete.thumbnail)\n            ]);\n            const newGalleries = params.galleries.filter((item) => {\n               if (item.source !== params.needDelete.source) {\n                   return item;\n               }\n            });\n            const info = {\n                id: params.id,\n                galleries: newGalleries\n            };\n\n            //update\n            const data = yield call(RoomService.edit, info);\n            if (data.status) {\n                const state = {\n                    id: data.data.id,\n                    message: data.message,\n                };\n                yield put({ type: roomActions.ROOM_DELETE_IMAGE_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                    id: info.id\n                };\n                yield put({ type: roomActions.ROOM_DELETE_IMAGE_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* deleteData() {\n    yield takeLatest(roomActions.ROOM_DELETE, function* (action) {\n        try {\n            notification.info(\"Deleting...\");\n            const data = yield call(RoomService.delete, action.params);\n            const state = {\n                message: data.message,\n            };\n            if (data.status) {\n                yield put({ type: roomActions.ROOM_DELETE_SUCCESS, state });\n            } else {\n                yield put({ type: roomActions.ROOM_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* displayMessage() {\n    yield takeEvery(roomActions.ROOM_ADD_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        yield put(push(PageUrls.PAGE_ROOM_LIST));\n    });\n    yield takeEvery(roomActions.ROOM_EDIT_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        yield put(push(PageUrls.PAGE_ROOM_LIST));\n    });\n    yield takeEvery(roomActions.ROOM_DELETE_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        yield put(push(PageUrls.PAGE_ROOM_LIST));\n    });\n\n    yield takeEvery(roomActions.ROOM_STATUS_FAILED, function*(action) {\n        yield notification.error(action.state.message);\n    });\n    yield takeEvery(roomActions.ROOM_ADD_IMAGE_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        //window.location = PageUrls.PAGE_ROOM_LIST_IMAGE + '/' + action.state.id;\n        console.log(action.state.id);\n        store.dispatch(roomActions.getById(action.state.id));\n    });\n    yield takeEvery(roomActions.ROOM_DELETE_IMAGE_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        // window.location = PageUrls.PAGE_ROOM_LIST_IMAGE + '/' + action.state.id;\n        store.dispatch(roomActions.getById(action.state.id));\n    });\n}\n\nexport default function* rootSaga() {\n    yield all([\n        fork(fetchData),\n        fork(fetchDataById),\n        fork(addData),\n        fork(editData),\n        fork(deleteData),\n        fork(displayMessage),\n        fork(uploadImage),\n    ]);\n}\n","import SuperFetch from './SuperFetch';\n\nconst Urls = {\n    LIST: 'categories',\n    SHOW: 'category-pages/category/{id}',\n    ADD: 'category-pages',\n    EDIT: 'category-pages/',\n    DELETE: 'category-pages/',\n    CATE_PAGE_PRODUCT: 'category-pages/{id}'\n};\nconst CategoryService  = {\n\n    list(payload) {\n        return new SuperFetch().get(Urls.LIST, payload);\n    },\n    listCatePageProduct(payload) {\n        let url = Urls.CATE_PAGE_PRODUCT.replace('{id}', payload.id)\n        return new SuperFetch().get(url);\n    },\n    show(payload) {\n        let url = Urls.SHOW.replace('{id}', payload.id)\n        return new SuperFetch().get(url);\n    },\n\n    add(payload) {\n        return new SuperFetch().post(Urls.ADD, payload);\n    },\n\n    edit(payload) {\n        return new SuperFetch().put(Urls.EDIT, payload);\n    },\n\n    delete(payload) {\n        return new SuperFetch().delete(Urls.DELETE, payload.id);\n    },\n};\n\nexport default CategoryService;\nexport {\n    Urls\n}\n","import { all, fork, put, call, takeLatest, takeEvery } from 'redux-saga/effects';\nimport PageService from \"../../services/PageService\";\nimport categoryPageActions from './action';\nimport notification from \"../../helpers/Notification\";\nimport CategoryPageService from '../../services/CategoryPageService';\nexport function* fetchData() {\n    yield takeLatest(categoryPageActions.CATEGORY_PAGE_GET_LIST, function* (action) {\n        try {\n            const data = yield call(PageService.list, action.filter);\n            if (data.status) {\n                const state = {\n                    data: data.data\n                };\n                yield put({ type: categoryPageActions.CATEGORY_PAGE_GET_LIST_STATUS_SUCCESS, state });\n            } else {\n                yield put({ type: categoryPageActions.CATEGORY_PAGE_GET_LIST_STATUS_FAILED });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\nexport function* fetchDataById() {\n\n    yield takeLatest(categoryPageActions.CATEGORY_PAGE_DETAIL, function* (action) {\n        try {\n            const data = yield call(CategoryPageService.show, action.params);\n            if (data.status) {\n                const state = {\n                    data: data.data\n                };\n                yield put({ type: categoryPageActions.CATEGORY_PAGE_DETAIL_STATUS_SUCCESS, state });\n            } else {\n                yield put({ type: categoryPageActions.CATEGORY_PAGE_DETAIL_STATUS_FAILED });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\nexport function* addCategoryPage() {\n\n    yield takeLatest(categoryPageActions.CATEGORY_PAGE_ADD, function* (action) {\n        try {\n            const data = yield call(CategoryPageService.add, action.params);\n            if (data.status) {\n                let newRecord = data.data;\n                newRecord.page_info = action.selectedPageTemplate;\n                const state = {\n                    data: newRecord,\n                    message: data.message\n                };\n                yield put({ type: categoryPageActions.CATEGORY_PAGE_ADD_STATUS_SUCCESS, state });\n            } else {\n                yield put({ type: categoryPageActions.CATEGORY_PAGE_ADD_STATUS_FAILED });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\nexport function* editCategoryPage() {\n\n    yield takeLatest(categoryPageActions.CATEGORY_PAGE_EDIT, function* (action) {\n        try {\n            const data = yield call(CategoryPageService.edit, action.params);\n            if (data.status) {\n                let newRecord = data.data;\n                newRecord.page_info = action.selectedPageTemplate;\n                const state = {\n                    data: newRecord,\n                    message: data.message\n                };\n                yield put({ type: categoryPageActions.CATEGORY_PAGE_EDIT_STATUS_SUCCESS, state });\n            } else {\n                yield put({ type: categoryPageActions.CATEGORY_PAGE_EDIT_STATUS_FAILED });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\nexport function* deleteCategoryPage() {\n\n    yield takeLatest(categoryPageActions.CATEGORY_PAGE_DELETE, function* (action) {\n        try {\n            const data = yield call(CategoryPageService.delete, action.params);\n            if (data.status) {\n                const state = {\n                    data: data.data,\n                    message: data.message\n                };\n                yield put({ type: categoryPageActions.CATEGORY_PAGE_DELETE_STATUS_SUCCESS, state });\n            } else {\n                yield put({ type: categoryPageActions.CATEGORY_PAGE_DELETE_STATUS_FAILED });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\nexport function* fetchCategoryPageProductData() {\n    yield takeLatest(categoryPageActions.CATEGORY_PAGE_ROOM_GET_LIST, function* (action) {\n        try {\n            const data = yield call(CategoryPageService.listCatePageProduct, action.params);\n            if (data.status) {\n                const state = {\n                    data: data.data\n                };\n                yield put({ type: categoryPageActions.CATEGORY_PAGE_ROOM_GET_LIST_STATUS_SUCCESS, state });\n            } else {\n                yield put({ type: categoryPageActions.CATEGORY_PAGE_ROOM_GET_LIST_STATUS_FAILED });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\nexport function* editDataById() {\n\n    yield takeLatest(categoryPageActions.CATEGORY_PAGE_ROOM_EDIT, function* (action) {\n        try {\n            const data = yield call(CategoryPageService.edit, action.params);\n            if (data.status) {\n                const state = {\n                    data: data.data,\n                    message: 'SUCCESS'\n                };\n                yield put({ type: categoryPageActions.CATEGORY_PAGE_ROOM_EDIT_STATUS_SUCCESS, state });\n               \n            } else {\n                yield put({ type: categoryPageActions.CATEGORY_PAGE_ROOM_EDIT_STATUS_FAILED });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\nexport function* displayMessage() {\n    yield takeEvery(categoryPageActions.CATEGORY_PAGE_ADD_STATUS_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n    });\n\n    yield takeEvery(categoryPageActions.CATEGORY_PAGE_DELETE_STATUS_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n    });\n}\n\nexport default function* rootSaga() {\n    yield all([\n        fork(fetchData),\n        fork(fetchDataById),\n        fork(addCategoryPage),\n        fork(deleteCategoryPage),\n        fork(fetchCategoryPageProductData),\n        fork(editDataById),\n        fork(editCategoryPage),\n        fork(displayMessage)\n    ]);\n}\n","import { all, fork, put, call, takeLatest, takeEvery } from 'redux-saga/effects';\nimport PromotionService from \"../../services/PromotionService\";\nimport promotionActions from './action';\nimport notification from \"../../helpers/Notification\";\nimport * as PageUrls from '../../configs/PagesUrl';\nimport { push } from 'connected-react-router';\nimport PageService from \"../../services/PageService\";\nimport ImageService from \"../../services/ImageService\";\nimport RoomService from \"../../services/RoomService\";\n\nexport function* fetchData() {\n    yield takeLatest(promotionActions.PROMOTION_GET_LIST, function* (action) {\n        try {\n            const data = yield call(PromotionService.list, action.filter);\n            const state = {\n                data: data.data,\n                message: data.message,\n            };\n            if (data.status) {\n                yield put({ type: promotionActions.PROMOTION_GET_LIST_SUCCESS, state });\n            } else {\n                yield put({ type: promotionActions.PROMOTION_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n\n    yield takeLatest(promotionActions.PROMOTION_GET_LIST_ROOM, function* (action) {\n        try {\n            const data = yield call(RoomService.list, {per_page: 1000000});\n            const state = {\n                data: data.data,\n                message: data.message,\n            };\n            if (data.status) {\n                yield put({ type: promotionActions.PROMOTION_GET_LIST_ROOM_SUCCESS, state });\n            } else {\n                yield put({ type: promotionActions.PROMOTION_GET_LIST_ROOM_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n\n}\n\nexport function* fetchDataById() {\n    yield takeLatest(promotionActions.PROMOTION_GET_DETAIL, function* (action) {\n        try {\n            const data = yield call(PromotionService.show, action.params);\n            const state = {\n                data: data.data,\n                message: data.message,\n            };\n            if (data.status) {\n                yield put({ type: promotionActions.PROMOTION_GET_DETAIL_SUCCESS, state });\n            } else {\n                yield put({ type: promotionActions.PROMOTION_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\nexport function* addData() {\n    yield takeLatest(promotionActions.PROMOTION_ADD, function* (action) {\n        try {\n            //upload image\n            const dataUploadImage = yield call(ImageService.upload,\n                { image: action.params.image, nothumb: true });\n            if (!dataUploadImage.status) {\n                notification.error(dataUploadImage.message);\n                return;\n            }\n            //override image params\n            let info = {\n                ...action.params.data,\n                image: dataUploadImage.data.big.id\n            };\n\n            //add product data\n            notification.info(\"Đang thêm...\");\n            const data = yield call(PromotionService.add, info);\n            if (data.status) {\n                const state = {\n                    id: data.data.id,\n                    message: data.message,\n                };\n                yield put({ type: promotionActions.PROMOTION_ADD_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                };\n                yield put({ type: promotionActions.PROMOTION_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* uploadImage() {\n    yield takeLatest(promotionActions.PROMOTION_UPLOAD_IMAGE, function* (action) {\n        try {\n            const data = yield call(ImageService.upload, action.params);\n            if (data.status) {\n                const state = {\n                    data: data.data\n                };\n                notification.success('Upload success!');\n                yield put({ type: promotionActions.PROMOTION_UPLOAD_IMAGE_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                };\n                notification.error('Upload failed!');\n                yield put({ type: promotionActions.PROMOTION_UPLOAD_IMAGE_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* editData() {\n    yield takeLatest(promotionActions.PROMOTION_EDIT, function* (action) {\n        try {\n            //get form params\n            let info = {\n                ...action.params.data\n            };\n            //upload image\n            if (action.params.image !== undefined) {\n                const dataUploadImage = yield call(ImageService.upload,\n                    {image: action.params.image, nothumb: true});\n                if (!dataUploadImage.status) {\n                    notification.error(dataUploadImage.message);\n                    return;\n                }\n                //override image params\n                info = {\n                    ...action.params.data,\n                    image: dataUploadImage.data.big.id\n                };\n                //delete old images\n                yield call(ImageService.delete, info.image_origin);\n            } else {\n                //do not post old one, it's url\n                delete info.image;\n            }\n\n            //update promotion data\n            notification.info(\"Đang cập nhât...\");\n            const data = yield call(PromotionService.edit, info);\n            if (data.status) {\n                const state = {\n                    id: data.data.id,\n                    message: data.message,\n                };\n                yield put({ type: promotionActions.PROMOTION_EDIT_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                };\n                yield put({ type: promotionActions.PROMOTION_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* deleteData() {\n    yield takeLatest(promotionActions.PROMOTION_DELETE, function* (action) {\n        try {\n            notification.info(\"Deleting...\");\n            const data = yield call(PromotionService.delete, action.params);\n            const state = {\n                message: data.message,\n            };\n            if (data.status) {\n                yield put({ type: promotionActions.PROMOTION_DELETE_SUCCESS, state });\n            } else {\n                yield put({ type: promotionActions.PROMOTION_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* displayMessage() {\n    yield takeEvery(promotionActions.PROMOTION_ADD_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        yield put(push(PageUrls.PAGE_PROMOTION_LIST));\n    });\n    yield takeEvery(promotionActions.PROMOTION_EDIT_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        yield put(push(PageUrls.PAGE_PROMOTION_LIST));\n    });\n    yield takeEvery(promotionActions.PROMOTION_DELETE_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        yield put(push(PageUrls.PAGE_PROMOTION_LIST));\n    });\n\n    yield takeEvery(promotionActions.PROMOTION_STATUS_FAILED, function*(action) {\n        yield notification.error(action.state.message);\n    });\n}\n\nexport default function* rootSaga() {\n    yield all([\n        fork(fetchData),\n        fork(fetchDataById),\n        fork(addData),\n        fork(editData),\n        fork(deleteData),\n        fork(displayMessage),\n        fork(uploadImage),\n    ]);\n}\n","import {all, fork, put, call, takeLatest, takeEvery} from 'redux-saga/effects';\nimport RoleService from \"../../services/RoleService\";\nimport roleActions from './action';\nimport notification from \"../../helpers/Notification\";\nimport {push} from \"connected-react-router\";\nimport * as PageUrls from \"../../configs/PagesUrl\";\n\nexport function* fetchData() {\n    yield takeLatest(roleActions.ROLE_GET_LIST, function* (action) {\n        try {\n            const data = yield call(RoleService.list, action.filter);\n            //call other apis if success\n\n            if(data.status) {\n                const state = {\n                    data: data.data,\n                    message: data.message\n                };\n                yield put({type: roleActions.ROLE_GET_LIST_SUCCESS, state});\n            } else {\n                yield put({type: roleActions.ROLE_GET_LIST_FAILED});\n            }\n        } catch (e) {\n            //already handle error in super fetch\n            //we show error only for dev if call wrong function\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* displayMessage() {\n\n    yield takeEvery(roleActions.ROLE_STATUS_FAILED, function*(action) {\n        yield notification.error(action.state.message);\n    });\n}\n\n\nexport default function* rootSaga() {\n    yield all([\n        fork(fetchData),\n        fork(displayMessage)\n    ]);\n}\n","import SuperFetch from './SuperFetch';\n\nconst Urls = {\n    LIST: 'galleries',\n    SHOW: 'galleries/',\n    ADD: 'galleries',\n    EDIT: 'galleries/',\n    DELETE: 'galleries/',\n    UPLOAD: 'images'\n};\nconst HomepageService = {\n\n    list(payload) {\n        return new SuperFetch().get(Urls.LIST, payload);\n    },\n\n    show(payload) {\n        return new SuperFetch().getById(Urls.SHOW, payload);\n    },\n\n    add(payload) {\n        return new SuperFetch().post(Urls.ADD, payload);\n    },\n\n    edit(payload) {\n        return new SuperFetch().put(Urls.EDIT, payload);\n    },\n\n    delete(payload) {\n        return new SuperFetch().delete(Urls.DELETE, payload);\n    },\n\n    upload(payload) {\n        return new SuperFetch().upload(Urls.UPLOAD, payload);\n    }\n};\n\nexport default HomepageService;\nexport {\n    Urls\n}\n","import { all, fork, put, call, takeLatest, takeEvery } from 'redux-saga/effects';\nimport HomepageService from \"../../services/HomepageService\";\nimport homepageActions from './action';\nimport notification from \"../../helpers/Notification\";\nimport {push} from \"connected-react-router\";\nimport * as PageUrls from \"../../configs/PagesUrl\";\nimport ImageService from \"../../services/ImageService\";\n\nexport function* fetchData() {\n    yield takeLatest(homepageActions.HOMEPAGE_GET_LIST, function* (action) {\n        try {\n            const data = yield call(HomepageService.list, action.filter);\n            const state = {\n                data: data.data,\n                message: data.message\n            };\n            if (data.status) {\n                yield put({ type: homepageActions.HOMEPAGE_GET_LIST_SUCCESS, state });\n            } else {\n                yield put({ type: homepageActions.HOMEPAGE_GET_LIST_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\nexport function* fetchDataById() {\n\n    yield takeLatest(homepageActions.HOMEPAGE_GET_DETAIL, function* (action) {\n        try {\n            const data = yield call(HomepageService.show, action.params);\n            if (data.status) {\n                const state = {\n                    data: data.data\n                };\n                yield put({ type: homepageActions.HOMEPAGE_GET_DETAIL_SUCCESS, state });\n            } else {\n                yield put({ type: homepageActions.HOMEPAGE_GET_DETAIL_FAILED });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\nexport function* addData() {\n    yield takeLatest(homepageActions.HOMEPAGE_ADD, function* (action) {\n        try {\n            //upload image\n            const dataUploadImage = yield call(ImageService.upload,\n                { image: action.params.image, nothumb: true });\n            if (!dataUploadImage.status) {\n                notification.error(dataUploadImage.message);\n                return;\n            }\n            //override image params\n            let info = {\n                ...action.params.data,\n                image: dataUploadImage.data.big.id\n            };\n\n            //add product data\n            notification.info(\"Đang thêm...\");\n            const data = yield call(HomepageService.add, info);\n            if (data.status) {\n                const state = {\n                    id: data.data.id,\n                    message: data.message,\n                };\n                yield put({ type: homepageActions.HOMEPAGE_ADD_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                };\n                yield put({ type: homepageActions.HOMEPAGE_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* editData() {\n    yield takeLatest(homepageActions.HOMEPAGE_EDIT, function* (action) {\n        try {\n            //get form params\n            let info = {\n                ...action.params.data\n            };\n            //upload image\n            if (action.params.image !== undefined) {\n                const dataUploadImage = yield call(ImageService.upload,\n                    {image: action.params.image, nothumb: true});\n                if (!dataUploadImage.status) {\n                    notification.error(dataUploadImage.message);\n                    return;\n                }\n                //override image params\n                info = {\n                    ...action.params.data,\n                    image: dataUploadImage.data.big.id\n                };\n                //delete old images\n                yield call(ImageService.delete, info.image_origin);\n            } else {\n                //do not post old one, it's url\n                delete info.image;\n            }\n            //update product data\n            notification.info(\"Đang cập nhât...\");\n            const data = yield call(HomepageService.edit, info);\n            if (data.status) {\n                const state = {\n                    id: data.data.id,\n                    message: data.message,\n                };\n                yield put({ type: homepageActions.HOMEPAGE_EDIT_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                };\n                yield put({ type: homepageActions.HOMEPAGE_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* uploadImage() {\n    yield takeLatest(homepageActions.HOMEPAGE_UPLOAD_IMAGE, function* (action) {\n        try {\n            const data = yield call(HomepageService.upload, action.params);\n            if (data.status) {\n                const state = {\n                    data: data.data\n                };\n                yield put({ type: homepageActions.HOMEPAGE_UPLOAD_IMAGE_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                };\n                yield put({ type: homepageActions.HOMEPAGE_UPLOAD_IMAGE_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* uploadLogo() {\n    yield takeLatest(homepageActions.HOMEPAGE_UPLOAD_LOGO, function* (action) {\n        try {\n            const data = yield call(HomepageService.upload, action.params);\n            if (data.status) {\n                const state = {\n                    data: data.data\n                };\n                yield put({ type: homepageActions.HOMEPAGE_UPLOAD_LOGO_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                };\n                yield put({ type: homepageActions.HOMEPAGE_UPLOAD_LOGO_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* deleteData() {\n    yield takeLatest(homepageActions.HOMEPAGE_DELETE, function* (action) {\n        try {\n            const data = yield call(HomepageService.delete, action.params.id);\n            const state = {\n                message: data.message,\n                id: parseInt(data.data)\n            };\n            if (data.status) {\n                yield put({ type: homepageActions.HOMEPAGE_DELETE_SUCCESS, state });\n                yield call(ImageService.delete, action.params.image);\n\n            } else {\n                yield put({ type: homepageActions.HOMEPAGE_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* displayMessage() {\n    yield takeEvery(homepageActions.HOMEPAGE_STATUS_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        // yield put(push(PageUrls.HOMEPAGE_MEMBER_GROUP_DETAILS + \"/\" + action.state.id));\n    });\n\n    yield takeEvery(homepageActions.HOMEPAGE_STATUS_FAILED, function*(action) {\n        yield notification.error(action.state.message);\n    });\n\n    yield takeEvery(homepageActions.HOMEPAGE_GET_LIST_FAILED, function*(action) {\n        yield notification.error(action.state.message);\n    });\n\n    yield takeEvery(homepageActions.HOMEPAGE_ADD_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        yield put(push(PageUrls.PAGE_HOMEPAGE_GALLERY_LIST));\n    });\n\n    yield takeEvery(homepageActions.HOMEPAGE_EDIT_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        yield put(push(PageUrls.PAGE_HOMEPAGE_GALLERY_LIST));\n    });\n\n    yield takeEvery(homepageActions.HOMEPAGE_DELETE_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        yield put(push(PageUrls.PAGE_HOMEPAGE_GALLERY_LIST));\n    });\n    yield takeEvery(homepageActions.HOMEPAGE_DELETE_FAILED, function*(action) {\n        yield notification.error(action.state.message);\n    });\n}\n\nexport default function* rootSaga() {\n    yield all([\n        fork(fetchData),\n        fork(fetchDataById),\n        fork(addData),\n        fork(editData),\n        fork(deleteData),\n        fork(displayMessage),\n        fork(uploadImage),\n        fork(uploadLogo),\n    ]);\n}\n","import SuperFetch from './SuperFetch';\n\nconst Urls = {\n    LIST: 'galleries',\n    SHOW: 'galleries/',\n    ADD: 'galleries',\n    EDIT: 'galleries/',\n    DELETE: 'galleries/',\n    UPLOAD: 'images'\n};\nconst GalleryService = {\n\n    list(payload) {\n        return new SuperFetch().get(Urls.LIST, payload);\n    },\n\n    show(payload) {\n        return new SuperFetch().getById(Urls.SHOW, payload);\n    },\n\n    add(payload) {\n        return new SuperFetch().post(Urls.ADD, payload);\n    },\n\n    edit(payload) {\n        return new SuperFetch().put(Urls.EDIT, payload);\n    },\n\n    delete(payload) {\n        return new SuperFetch().delete(Urls.DELETE, payload);\n    },\n\n    upload(payload) {\n        return new SuperFetch().upload(Urls.UPLOAD, payload);\n    }\n};\n\nexport default GalleryService;\nexport {\n    Urls\n}\n","import { all, fork, put, call, takeLatest, takeEvery } from 'redux-saga/effects';\nimport GalleryService from \"../../services/GalleryService\";\nimport galleryActions from './action';\nimport notification from \"../../helpers/Notification\";\nimport {push} from \"connected-react-router\";\nimport * as PageUrls from \"../../configs/PagesUrl\";\nimport ImageService from \"../../services/ImageService\";\n\nexport function* fetchData() {\n    yield takeLatest(galleryActions.GALLERY_GET_LIST, function* (action) {\n        try {\n            const data = yield call(GalleryService.list, action.filter);\n            const state = {\n                data: data.data,\n                message: data.message\n            };\n            if (data.status) {\n                yield put({ type: galleryActions.GALLERY_GET_LIST_SUCCESS, state });\n            } else {\n                yield put({ type: galleryActions.GALLERY_GET_LIST_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\nexport function* fetchDataById() {\n\n    yield takeLatest(galleryActions.GALLERY_GET_DETAIL, function* (action) {\n        try {\n            const data = yield call(GalleryService.show, action.params);\n            if (data.status) {\n                const state = {\n                    data: data.data\n                };\n                yield put({ type: galleryActions.GALLERY_GET_DETAIL_SUCCESS, state });\n            } else {\n                yield put({ type: galleryActions.GALLERY_GET_DETAIL_FAILED });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\nexport function* addData() {\n    yield takeLatest(galleryActions.GALLERY_ADD, function* (action) {\n        try {\n            //upload image\n            const dataUploadImage = yield call(ImageService.upload,\n                { image: action.params.image, nothumb: true });\n            if (!dataUploadImage.status) {\n                notification.error(dataUploadImage.message);\n                return;\n            }\n            //override image params\n            let info = {\n                ...action.params.data,\n                image: dataUploadImage.data.big.id\n            };\n\n            //add product data\n            notification.info(\"Đang thêm...\");\n            const data = yield call(GalleryService.add, info);\n            if (data.status) {\n                const state = {\n                    id: data.data.id,\n                    message: data.message,\n                };\n                yield put({ type: galleryActions.GALLERY_ADD_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                };\n                yield put({ type: galleryActions.GALLERY_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* editData() {\n    yield takeLatest(galleryActions.GALLERY_EDIT, function* (action) {\n        try {\n            //get form params\n            let info = {\n                ...action.params.data\n            };\n            //upload image\n            if (action.params.image !== undefined) {\n                const dataUploadImage = yield call(ImageService.upload,\n                    {image: action.params.image, nothumb: true});\n                if (!dataUploadImage.status) {\n                    notification.error(dataUploadImage.message);\n                    return;\n                }\n                //override image params\n                info = {\n                    ...action.params.data,\n                    image: dataUploadImage.data.big.id\n                };\n                //delete old images\n                yield call(ImageService.delete, info.image_origin);\n            } else {\n                //do not post old one, it's url\n                delete info.image;\n            }\n            //update product data\n            notification.info(\"Đang cập nhât...\");\n            const data = yield call(GalleryService.edit, info);\n            if (data.status) {\n                const state = {\n                    id: data.data.id,\n                    message: data.message,\n                };\n                yield put({ type: galleryActions.GALLERY_EDIT_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                };\n                yield put({ type: galleryActions.GALLERY_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* uploadImage() {\n    yield takeLatest(galleryActions.GALLERY_UPLOAD_IMAGE, function* (action) {\n        try {\n            const data = yield call(GalleryService.upload, action.params);\n            if (data.status) {\n                const state = {\n                    data: data.data\n                };\n                yield put({ type: galleryActions.GALLERY_UPLOAD_IMAGE_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                };\n                yield put({ type: galleryActions.GALLERY_UPLOAD_IMAGE_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* uploadLogo() {\n    yield takeLatest(galleryActions.GALLERY_UPLOAD_LOGO, function* (action) {\n        try {\n            const data = yield call(GalleryService.upload, action.params);\n            if (data.status) {\n                const state = {\n                    data: data.data\n                };\n                yield put({ type: galleryActions.GALLERY_UPLOAD_LOGO_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                };\n                yield put({ type: galleryActions.GALLERY_UPLOAD_LOGO_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* deleteData() {\n    yield takeLatest(galleryActions.GALLERY_DELETE, function* (action) {\n        try {\n            const data = yield call(GalleryService.delete, action.params.id);\n            const state = {\n                message: data.message,\n                id: parseInt(data.data)\n            };\n            if (data.status) {\n                yield put({ type: galleryActions.GALLERY_DELETE_SUCCESS, state });\n                yield call(ImageService.delete, action.params.image);\n\n            } else {\n                yield put({ type: galleryActions.GALLERY_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* displayMessage() {\n    yield takeEvery(galleryActions.GALLERY_STATUS_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        // yield put(push(PageUrls.GALLERY_MEMBER_GROUP_DETAILS + \"/\" + action.state.id));\n    });\n\n    yield takeEvery(galleryActions.GALLERY_STATUS_FAILED, function*(action) {\n        yield notification.error(action.state.message);\n    });\n\n    yield takeEvery(galleryActions.GALLERY_GET_LIST_FAILED, function*(action) {\n        yield notification.error(action.state.message);\n    });\n\n    yield takeEvery(galleryActions.GALLERY_ADD_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        yield put(push(PageUrls.PAGE_GALLERY_LIST));\n    });\n\n    yield takeEvery(galleryActions.GALLERY_EDIT_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        yield put(push(PageUrls.PAGE_GALLERY_LIST));\n    });\n\n    yield takeEvery(galleryActions.GALLERY_DELETE_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        yield put(push(PageUrls.PAGE_GALLERY_LIST));\n    });\n    yield takeEvery(galleryActions.GALLERY_DELETE_FAILED, function*(action) {\n        yield notification.error(action.state.message);\n    });\n}\n\nexport default function* rootSaga() {\n    yield all([\n        fork(fetchData),\n        fork(fetchDataById),\n        fork(addData),\n        fork(editData),\n        fork(deleteData),\n        fork(displayMessage),\n        fork(uploadImage),\n        fork(uploadLogo),\n    ]);\n}\n","import SuperFetch from './SuperFetch';\n\nconst Urls = {\n    LIST: 'services',\n    SHOW: 'services/',\n    ADD: 'services',\n    EDIT: 'services/',\n    DELETE: 'services/'\n};\nconst ServiceService = {\n\n    list(payload) {\n        return new SuperFetch().get(Urls.LIST, payload);\n    },\n    show(payload) {\n        return new SuperFetch().getById(Urls.SHOW, payload);\n    },\n\n    add(payload) {\n        return new SuperFetch().post(Urls.ADD, payload);\n    },\n\n    edit(payload) {\n        return new SuperFetch().put(Urls.EDIT , payload);\n    },\n\n    delete(payload) {\n        return new SuperFetch().delete(Urls.DELETE, payload);\n    },\n};\n\nexport default ServiceService;\nexport {\n    Urls\n}\n","import { all, fork, put, call, takeLatest, takeEvery } from 'redux-saga/effects';\nimport ServiceService from \"../../services/ServiceService\";\nimport serviceActions from './action';\nimport notification from \"../../helpers/Notification\";\nimport * as PageUrls from '../../configs/PagesUrl';\nimport { push } from 'connected-react-router';\nimport ImageService from \"../../services/ImageService\";\n\nexport function* fetchData() {\n    yield takeLatest(serviceActions.SERVICE_GET_LIST, function* (action) {\n        try {\n            const data = yield call(ServiceService.list, action.filter);\n            const state = {\n                data: data.data,\n                message: data.message,\n            };\n            if (data.status) {\n                yield put({ type: serviceActions.SERVICE_GET_LIST_SUCCESS, state });\n            } else {\n                yield put({ type: serviceActions.SERVICE_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* fetchDataById() {\n    yield takeLatest(serviceActions.SERVICE_GET_DETAIL, function* (action) {\n        try {\n            const data = yield call(ServiceService.show, action.params);\n            const state = {\n                data: data.data,\n                message: data.message,\n            };\n            if (data.status) {\n                yield put({ type: serviceActions.SERVICE_GET_DETAIL_SUCCESS, state });\n            } else {\n                yield put({ type: serviceActions.SERVICE_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\nexport function* addData() {\n    yield takeLatest(serviceActions.SERVICE_ADD, function* (action) {\n        try {\n            //upload image\n            const dataUploadImage = yield call(ImageService.upload, { image: action.params.image });\n            if (!dataUploadImage.status) {\n                notification.error(dataUploadImage.message);\n                return;\n            }\n            //override image params\n            let info = {\n                ...action.params.data,\n                images: {\n                    source: dataUploadImage.data.big.id,\n                    thumbnail: dataUploadImage.data.thumb.id,\n                }\n            };\n\n            //add product data\n            notification.info(\"Đang thêm...\");\n            const data = yield call(ServiceService.add, info);\n            if (data.status) {\n                const state = {\n                    id: data.data.id,\n                    message: data.message,\n                };\n                yield put({ type: serviceActions.SERVICE_ADD_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                };\n                yield put({ type: serviceActions.SERVICE_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* uploadImage() {\n    yield takeLatest(serviceActions.SERVICE_UPLOAD_IMAGE, function* (action) {\n        try {\n            const data = yield call(ImageService.upload, action.params);\n            if (data.status) {\n                const state = {\n                    data: data.data\n                };\n                notification.success('Upload success!');\n                yield put({ type: serviceActions.SERVICE_UPLOAD_IMAGE_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                };\n                notification.error('Upload failed!');\n                yield put({ type: serviceActions.SERVICE_UPLOAD_IMAGE_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* editData() {\n    yield takeLatest(serviceActions.SERVICE_EDIT, function* (action) {\n        try {\n            //get form params\n            let info = {\n                ...action.params.data\n            };\n            //upload image\n            if (action.params.image !== undefined) {\n                const dataUploadImage = yield call(ImageService.upload, {image: action.params.image});\n                if (!dataUploadImage.status) {\n                    notification.error(dataUploadImage.message);\n                    return;\n                }\n                //override image params\n                info = {\n                    ...action.params.data,\n                    images: {\n                        source: dataUploadImage.data.big.id,\n                        thumbnail: dataUploadImage.data.thumb.id,\n                    }\n                };\n                //delete old images\n                const [source, thumbnail] = yield all([\n                    call(ImageService.delete, info.images_origin.source),\n                    call(ImageService.delete, info.images_origin.thumbnail)\n                ]);\n            } else {\n                //do not post old one, it's url\n                delete info.images;\n            }\n            //update product data\n            notification.info(\"Đang cập nhât...\");\n            const data = yield call(ServiceService.edit, info);\n            if (data.status) {\n                const state = {\n                    id: data.data.id,\n                    message: data.message,\n                };\n                yield put({ type: serviceActions.SERVICE_EDIT_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                };\n                yield put({ type: serviceActions.SERVICE_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* deleteData() {\n    yield takeLatest(serviceActions.SERVICE_DELETE, function* (action) {\n        try {\n            notification.info(\"Deleting...\");\n            const data = yield call(ServiceService.delete, action.params);\n            const state = {\n                message: data.message,\n            };\n            if (data.status) {\n                yield put({ type: serviceActions.SERVICE_STATUS_SUCCESS, state });\n            } else {\n                yield put({ type: serviceActions.SERVICE_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* displayMessage() {\n    yield takeEvery(serviceActions.SERVICE_ADD_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        yield put(push(PageUrls.PAGE_SERVICE_LIST));\n    });\n    yield takeEvery(serviceActions.SERVICE_EDIT_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        yield put(push(PageUrls.PAGE_SERVICE_LIST));\n    });\n\n    yield takeEvery(serviceActions.SERVICE_STATUS_FAILED, function*(action) {\n        yield notification.error(action.state.message);\n    });\n}\n\nexport default function* rootSaga() {\n    yield all([\n        fork(fetchData),\n        fork(fetchDataById),\n        fork(addData),\n        fork(editData),\n        fork(deleteData),\n        fork(displayMessage),\n        fork(uploadImage),\n    ]);\n}\n","import SuperFetch from './SuperFetch';\n\nconst Urls = {\n    LIST: 'informations',\n    SHOW: 'informations/',\n    ADD: 'informations',\n    EDIT: 'informations/',\n    DELETE: 'informations/'\n};\nconst InformationService = {\n\n    list(payload) {\n        return new SuperFetch().get(Urls.LIST, payload);\n    },\n    show(payload) {\n        return new SuperFetch().getById(Urls.SHOW, payload);\n    },\n\n    add(payload) {\n        return new SuperFetch().post(Urls.ADD, payload);\n    },\n\n    edit(payload) {\n        return new SuperFetch().put(Urls.EDIT , payload);\n    },\n\n    delete(payload) {\n        return new SuperFetch().delete(Urls.DELETE, payload);\n    },\n};\n\nexport default InformationService;\nexport {\n    Urls\n}\n","import { all, fork, put, call, takeLatest, takeEvery } from 'redux-saga/effects';\nimport InformationService from \"../../services/InformationService\";\nimport informationActions from './action';\nimport notification from \"../../helpers/Notification\";\nimport * as PageUrls from '../../configs/PagesUrl';\nimport { push } from 'connected-react-router';\nimport ImageService from \"../../services/ImageService\";\n\nexport function* fetchData() {\n    yield takeLatest(informationActions.INFORMATION_GET_LIST, function* (action) {\n        try {\n            const data = yield call(InformationService.list, action.filter);\n            const state = {\n                data: data.data,\n                message: data.message,\n            };\n            if (data.status) {\n                yield put({ type: informationActions.INFORMATION_GET_LIST_SUCCESS, state });\n            } else {\n                yield put({ type: informationActions.INFORMATION_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* fetchDataById() {\n    yield takeLatest(informationActions.INFORMATION_GET_DETAIL, function* (action) {\n        try {\n            const data = yield call(InformationService.show, action.params);\n            const state = {\n                data: data.data,\n                message: data.message,\n            };\n            if (data.status) {\n                yield put({ type: informationActions.INFORMATION_GET_DETAIL_SUCCESS, state });\n            } else {\n                yield put({ type: informationActions.INFORMATION_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\nexport function* addData() {\n    yield takeLatest(informationActions.INFORMATION_ADD, function* (action) {\n        try {\n            //upload image\n            const dataUploadImage = yield call(ImageService.upload, { image: action.params.image });\n            if (!dataUploadImage.status) {\n                notification.error(dataUploadImage.message);\n                return;\n            }\n            //override image params\n            let info = {\n                ...action.params.data,\n                images: {\n                    source: dataUploadImage.data.big.id,\n                    thumbnail: dataUploadImage.data.thumb.id,\n                }\n            };\n\n            //add product data\n            notification.info(\"Đang thêm...\");\n            const data = yield call(InformationService.add, info);\n            if (data.status) {\n                const state = {\n                    id: data.data.id,\n                    message: data.message,\n                };\n                yield put({ type: informationActions.INFORMATION_ADD_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                };\n                yield put({ type: informationActions.INFORMATION_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* uploadImage() {\n    yield takeLatest(informationActions.INFORMATION_UPLOAD_IMAGE, function* (action) {\n        try {\n            const data = yield call(ImageService.upload, action.params);\n            if (data.status) {\n                const state = {\n                    data: data.data\n                };\n                notification.success('Upload success!');\n                yield put({ type: informationActions.INFORMATION_UPLOAD_IMAGE_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                };\n                notification.error('Upload failed!');\n                yield put({ type: informationActions.INFORMATION_UPLOAD_IMAGE_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* editData() {\n    yield takeLatest(informationActions.INFORMATION_EDIT, function* (action) {\n        try {\n            //get form params\n            let info = {\n                ...action.params.data\n            };\n            //upload image\n            if (action.params.image !== undefined) {\n                const dataUploadImage = yield call(ImageService.upload, {image: action.params.image});\n                if (!dataUploadImage.status) {\n                    notification.error(dataUploadImage.message);\n                    return;\n                }\n                //override image params\n                info = {\n                    ...action.params.data,\n                    images: {\n                        source: dataUploadImage.data.big.id,\n                        thumbnail: dataUploadImage.data.thumb.id,\n                    }\n                };\n                //delete old images\n                const [source, thumbnail] = yield all([\n                    call(ImageService.delete, info.images_origin.source),\n                    call(ImageService.delete, info.images_origin.thumbnail)\n                ]);\n            } else {\n                //do not post old one, it's url\n                delete info.images;\n            }\n            //update product data\n            notification.info(\"Đang cập nhât...\");\n            const data = yield call(InformationService.edit, info);\n            if (data.status) {\n                const state = {\n                    id: data.data.id,\n                    message: data.message,\n                };\n                yield put({ type: informationActions.INFORMATION_EDIT_SUCCESS, state });\n            } else {\n                const state = {\n                    message: data.message,\n                };\n                yield put({ type: informationActions.INFORMATION_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* deleteData() {\n    yield takeLatest(informationActions.INFORMATION_DELETE, function* (action) {\n        try {\n            notification.info(\"Deleting...\");\n            const data = yield call(InformationService.delete, action.params);\n            const state = {\n                message: data.message,\n            };\n            if (data.status) {\n                yield put({ type: informationActions.INFORMATION_STATUS_SUCCESS, state });\n            } else {\n                yield put({ type: informationActions.INFORMATION_STATUS_FAILED, state });\n            }\n        } catch (e) {\n            if (e.message.indexOf('call') !== -1) {\n                notification.error('Call wrong function & params. Check the coding');\n            }\n        }\n    });\n}\n\nexport function* displayMessage() {\n    yield takeEvery(informationActions.INFORMATION_ADD_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        yield put(push(PageUrls.PAGE_INFORMATION_LIST));\n    });\n    yield takeEvery(informationActions.INFORMATION_EDIT_SUCCESS, function*(action) {\n        yield notification.success(action.state.message);\n        yield put(push(PageUrls.PAGE_INFORMATION_LIST));\n    });\n\n    yield takeEvery(informationActions.INFORMATION_STATUS_FAILED, function*(action) {\n        yield notification.error(action.state.message);\n    });\n}\n\nexport default function* rootSaga() {\n    yield all([\n        fork(fetchData),\n        fork(fetchDataById),\n        fork(addData),\n        fork(editData),\n        fork(deleteData),\n        fork(displayMessage),\n        fork(uploadImage),\n    ]);\n}\n","import { all } from 'redux-saga/effects';\nimport userSaga from './user/saga';\nimport authSaga from './auth/saga';\nimport categorySaga from './category/saga';\nimport roomTypeSaga from './roomType/saga';\nimport roomFacilitySaga from './roomFacility/saga';\nimport pageSaga from './page/saga';\nimport roomSaga from './room/saga'\nimport categoryPageSaga from './categoryPage/saga';\nimport promotionSaga from './promotion/saga';\nimport roleSaga from './role/saga';\nimport homepageSaga from './homepage/saga';\nimport gallerySaga from './gallery/saga';\nimport serviceSaga from './service/saga';\nimport informationSaga from './information/saga';\n\nexport default function* rootSaga(getState) {\n    yield all([\n        userSaga(),\n        authSaga(),\n        categorySaga(),\n        roomTypeSaga(),\n        roomFacilitySaga(),\n        pageSaga(),\n        roomSaga(),\n        categoryPageSaga(),\n        promotionSaga(),\n        roleSaga(),\n        homepageSaga(),\n        gallerySaga(),\n        serviceSaga(),\n        informationSaga()\n    ]);\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { createBrowserHistory } from 'history';\n// import { routerReducer, routerMiddleware } from 'react-router-redux';\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport { reducer as formReducer } from 'redux-form'\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './reducers';\nimport rootSaga from './sagas';\n\nconst history = createBrowserHistory();\nconst sagaMiddleware = createSagaMiddleware();\nconst routeMiddleware = routerMiddleware(history);\nconst middlewares = [sagaMiddleware, routeMiddleware];\n\nconst composeEnhancers =\n    typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n        ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n          // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n        })\n        : compose;\n\nconst store = createStore(\n    combineReducers({\n        ...reducers,\n        router: connectRouter(history),\n        form: formReducer\n    }),\n    composeEnhancers(applyMiddleware(...middlewares))\n);\n\nsagaMiddleware.run(rootSaga);\nexport { store, history };","import { getAuthorizeData } from \"../helpers/Ultis\";\nimport SuperFetchBase from \"./SuperFetchBase\";\n\nclass SuperFetch extends SuperFetchBase {\n    constructor() {\n        super(getAuthorizeData());\n    }\n}\n\nexport default SuperFetch;\n","import axios from 'axios';\nimport siteConfig from '../configs/siteConfig';\nimport notification from \"../helpers/Notification\";\nimport MockDataProvider from \"../mock_data/Provider\";\nimport {clearToken, getAuthorizeData, getTokenInfo} from '../helpers/Ultis';\nimport { store } from '../redux/store';\nimport layoutAction from '../redux/layout/action';\nimport {push} from \"connected-react-router\";\nimport * as PageUrls from \"../configs/PagesUrl\";\nimport { Urls } from \"./UserService\";\n\nclass SuperFetchBase {\n\n    constructor(authorizeInfo) {\n        let service = axios.create({\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': authorizeInfo,\n            },\n            baseURL: siteConfig.apiRoot,\n            timeout: siteConfig.apiTimeout,\n        });\n        service.interceptors.response.use(this.handleSuccess, this.handleError);\n        service.interceptors.request.use(this.checkTokenExpired, this.handleError);\n        this.service = service;\n    }\n\n    handleSuccess(response) {\n        store.dispatch(layoutAction.isCallingApi(false));\n        return response;\n    }\n\n    handleError = (error) => {\n        store.dispatch(layoutAction.isCallingApi(false));\n        if (error.response !== undefined) {\n            switch (error.response.status) {\n                case 401:\n                    notification.error(error.response.status + ': ' + error.response.statusText);\n                    clearToken();\n                    window.location = PageUrls.PAGE_ROOT;\n                    break;\n                case 404:\n                    notification.error(error.response.status + ': ' + error.response.statusText);\n                    break;\n                case 500:\n                    notification.error(error.message);\n                    break;\n                default:\n                    notification.error(error.response.status + ': ' + error.response.statusText);\n                    break;\n            }\n        } else {\n            notification.error(error.message);\n        }\n        return Promise.reject(error);\n    };\n\n    async checkTokenExpired(request) {\n        if (request.url === Urls.LOGIN) {\n            return request;\n        }\n\n        //get cached token info\n        const tokenInfo = getTokenInfo();\n        if (tokenInfo === false) {\n            clearToken();\n            window.location = PageUrls.PAGE_ROOT;\n            return request;\n        }\n\n        // check if expired\n        if (tokenInfo) {\n            const expiredAt = tokenInfo.expires_at;\n            if ((parseInt(expiredAt) * 1000 - Date.now()) <= 60 * 5 * 1000) {\n                let service = axios.create({\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': tokenInfo.token_type + ' ' + tokenInfo.access_token\n                    },\n                    baseURL: siteConfig.apiRoot,\n                    timeout: siteConfig.apiTimeout,\n                });\n                let res = await service.request({\n                    method: 'GET',\n                    url: Urls.REFRESH_TOKEN + `?grant_type=refresh_token&refresh_token=REFESH_TOKEN`,\n                    responseType: 'json'\n                });\n\n                if (res.data.status && res.data.data.access_token !== undefined\n                    && res.data.data.access_token !== '' && Object.keys(res.data.data.access_token).length > 0) {\n                    const state = {\n                        isLoggedIn: true,\n                        tokenInfo: res.data.data,\n                        message: res.data.message,\n                    };\n\n                    //set local\n                    localStorage.setItem('data', JSON.stringify(state));\n\n                    //override header of this request\n                    request.headers.Authorization = state.tokenInfo.token_type + ' ' + state.tokenInfo.access_token;\n                    return request;\n\n                } else {\n                    clearToken();\n                    window.location = PageUrls.PAGE_ROOT;\n                }\n            } else {\n                return request;\n            }\n        } else {\n            return request;\n        }\n    }\n\n    get(path, payload) {\n        store.dispatch(layoutAction.isCallingApi(true));\n        console.log('will call api ');\n        if (payload !== undefined) {\n            console.log(siteConfig.apiRoot + path + '?' + Object.keys(payload).map(key => key + '=' + payload[key]).join('&'));\n        } else {\n            console.log(siteConfig.apiRoot + path);\n        }\n\n        if (siteConfig.fakeData) {\n            console.log('use mock data');\n            return new Promise(resolve => {\n                resolve(MockDataProvider.getData(path, payload));\n            });\n        }\n\n        if (payload !== undefined) {\n            path += '?' + Object.keys(payload).map(key => key + '=' + payload[key]).join('&');\n        }\n\n        return this.service.get(path).then((response) => {\n            return new Promise(resolve => {\n                resolve(response.data);\n            });\n        });\n    }\n\n    post(path, payload) {\n        store.dispatch(layoutAction.isCallingApi(true));\n\n        console.log('will call api ');\n        console.log(siteConfig.apiRoot + path);\n\n        if (siteConfig.fakeData) {\n            console.log('use mock data');\n            return new Promise(resolve => {\n                resolve(MockDataProvider.getData(path, payload));\n            });\n        }\n\n        return this.service.request({\n            method: 'POST',\n            url: path,\n            responseType: 'json',\n            data: payload\n        }).then((response) => {\n            return new Promise(resolve => {\n                resolve(response.data);\n            });\n        });\n    }\n\n    put(path, payload) {\n        store.dispatch(layoutAction.isCallingApi(true));\n\n        console.log(siteConfig.apiRoot + path + payload.id);\n\n        return this.service.request({\n            method: 'PUT',\n            url: path + payload.id,\n            responseType: 'json',\n            data: payload\n        }).then((response) => {\n            return new Promise(resolve => {\n                resolve(response.data);\n            });\n        });\n    }\n\n    getById(path, id) {\n        store.dispatch(layoutAction.isCallingApi(true));\n\n        if (siteConfig.fakeData) {\n            console.log('use mock data');\n            return new Promise(resolve => {\n                resolve(MockDataProvider.getData(path, id));\n            });\n        }\n\n        path += id;\n        console.log('will call api');\n        console.log(siteConfig.apiRoot + path);\n\n        return this.service.get(path).then((response) => {\n            return new Promise(resolve => {\n                resolve(response.data);\n            });\n        });\n    }\n\n    delete(path, payload) {\n        store.dispatch(layoutAction.isCallingApi(true));\n\n        console.log(siteConfig.apiRoot + path + payload);\n\n        return this.service.request({\n            method: 'DELETE',\n            url: path + payload,\n            responseType: 'json',\n            data: payload\n        }).then((response) => {\n            return new Promise(resolve => {\n                resolve(response.data);\n            });\n        });\n    }\n\n    export(path, payload) {\n        store.dispatch(layoutAction.isCallingApi(true));\n\n        console.log('will call api ');\n        console.log(siteConfig.apiRoot + path);\n        console.log(payload);\n        return this.service.request({\n            method: 'POST',\n            url: path,\n            responseType: 'json',\n            data: payload\n        }).then((response) => {\n            return new Promise(resolve => {\n                resolve(response.data);\n            });\n        });\n    }\n\n    upload(path, payload) {\n        notification.info('Uploading ...');\n        store.dispatch(layoutAction.isCallingApi(true));\n\n        console.log('will call api ');\n        console.log(siteConfig.apiRoot + path);\n\n        let formData = new FormData();\n        formData.append('image', payload.image);\n\n        if (payload.nothumb !== undefined) {\n            path += '?nothumb=1';\n        }\n\n        return this.service.request({\n            method: 'POST',\n            url: path,\n            responseType: 'json',\n            data: formData\n        }).then((response) => {\n            return new Promise(resolve => {\n                notification.info('Upload success!');\n                resolve(response.data);\n            });\n        });\n    }\n}\n\nexport default SuperFetchBase;\n","import SuperFetch from './SuperFetch';\n\nconst Urls = {\n    LIST: 'images',\n    SHOW: 'images/',\n    ADD: 'images',\n    EDIT: 'images/',\n    DELETE: 'images/',\n    UPLOAD: 'images',\n    UPLOAD_FILE: 'upload',\n    DELETE_FILE: 'upload/',\n};\nconst ImageService = {\n\n    list(payload) {\n        return new SuperFetch().get(Urls.LIST, payload);\n    },\n\n    show(payload) {\n        return new SuperFetch().getById(Urls.SHOW, payload);\n    },\n\n    add(payload) {\n        return new SuperFetch().post(Urls.ADD, payload);\n    },\n\n    edit(payload) {\n        return new SuperFetch().put(Urls.EDIT, payload);\n    },\n\n    delete(payload) {\n        if (payload === '') return true;\n        return new SuperFetch().delete(Urls.DELETE_FILE, payload);\n    },\n\n    upload(payload) {\n        return new SuperFetch().upload(Urls.UPLOAD_FILE, payload);\n    },\n\n    uploadImage(payload) {\n        return new SuperFetch().upload(Urls.UPLOAD, payload);\n    }\n};\n\nexport default ImageService;\nexport {\n    Urls\n}\n","import {getAuthorizeData} from \"../helpers/Ultis\";\nimport { Urls } from \"./ImageService\";\nimport siteConfig from \"../configs/siteConfig\";\n\nclass CKEditorUploadAdapter {\n\n    constructor( loader ) {\n        // The file loader instance to use during the upload.\n        this.loader = loader;\n    }\n\n    // Starts the upload process.\n    upload() {\n        return this.loader.file\n            .then( file => new Promise( ( resolve, reject ) => {\n                this._initRequest();\n                this._initListeners( resolve, reject, file );\n                this._sendRequest( file );\n            } ) );\n    }\n\n    // Aborts the upload process.\n    abort() {\n        if ( this.xhr ) {\n            this.xhr.abort();\n        }\n    }\n\n    // Initializes the XMLHttpRequest object using the URL passed to the constructor.\n    _initRequest() {\n        const xhr = this.xhr = new XMLHttpRequest();\n\n        // Note that your request may look different. It is up to you and your editor\n        // integration to choose the right communication channel. This example uses\n        // a POST request with JSON as a data structure but your configuration\n        // could be different.\n\n        xhr.open( 'POST', siteConfig.apiRoot + Urls.UPLOAD_FILE + '?nothumb=1', true );\n        xhr.responseType = 'json';\n    }\n\n    // Initializes XMLHttpRequest listeners.\n    _initListeners( resolve, reject, file ) {\n        const xhr = this.xhr;\n        const loader = this.loader;\n        const genericErrorText = `Couldn't upload file: ${ file.name }.`;\n\n        xhr.addEventListener( 'error', () => reject( genericErrorText ) );\n        xhr.addEventListener( 'abort', () => reject() );\n        xhr.addEventListener( 'load', () => {\n            const response = xhr.response;\n\n            // This example assumes the XHR server's \"response\" object will come with\n            // an \"error\" which has its own \"message\" that can be passed to reject()\n            // in the upload promise.\n            //\n            // Your integration may handle upload errors in a different way so make sure\n            // it is done properly. The reject() function must be called when the upload fails.\n            if ( !response || !response.status ) {\n                return reject( response && response.error_message ? response.error_message : genericErrorText );\n            }\n\n            // If the upload is successful, resolve the upload promise with an object containing\n            // at least the \"default\" URL, pointing to the image on the server.\n            // This URL will be used to display the image in the content. Learn more in the\n            // UploadAdapter#upload documentation.\n            resolve( {\n                default: response.data.big.url\n            } );\n        } );\n\n        // Upload progress when it is supported. The file loader has the #uploadTotal and #uploaded\n        // properties which are used e.g. to display the upload progress bar in the editor\n        // user interface.\n        if ( xhr.upload ) {\n            xhr.upload.addEventListener( 'progress', evt => {\n                if ( evt.lengthComputable ) {\n                    loader.uploadTotal = evt.total;\n                    loader.uploaded = evt.loaded;\n                }\n            } );\n        }\n    }\n\n    // Prepares the data and sends the request.\n    _sendRequest( file ) {\n        // Prepare the form data.\n        const data = new FormData();\n\n        data.append( 'image', file );\n\n        // Important note: This is the right place to implement security mechanisms\n        // like authentication and CSRF protection. For instance, you can use\n        // XMLHttpRequest.setRequestHeader() to set the request headers containing\n        // the CSRF token generated earlier by your application.\n        this.xhr.setRequestHeader('Authorization', getAuthorizeData());\n\n        // Send the request.\n        this.xhr.send( data );\n    }\n}\n\nfunction MyCustomUploadAdapterPlugin(editor) {\n    editor.plugins.get( 'FileRepository' ).createUploadAdapter = (loader  => {\n        // Configure the URL to the upload script in your back-end here!\n        return new CKEditorUploadAdapter(loader);\n    });\n}\nconst editorConfig = {\n    // toolbar: {\n    //     items: [\n    //         'heading',\n    //         '|',\n    //         'alignment',                                                 // <--- ADDED\n    //         'bold',\n    //         'italic',\n    //         'link',\n    //         'bulletedList',\n    //         'numberedList',\n    //         'imageUpload',\n    //         'blockQuote',\n    //         'undo',\n    //         'redo',\n    //         // 'ckfinder',\n    //         'filebrowser'\n    //     ],\n    // },\n    // image: {\n    //     toolbar: [\n    //         'imageStyle:full',\n    //         'imageStyle:side',\n    //         '|',\n    //         'imageTextAlternative'\n    //     ]\n    // },\n    // extraPlugins: [MyCustomUploadAdapterPlugin],\n    // // This value must be kept in sync with the language defined in webpack.config.js.\n    // language: 'en',\n    // plugins: [CKFinder],\n    // ckfinder: {\n    //     uploadUrl: siteConfig.apiRoot + Urls.UPLOAD + '?nothumb=1',\n    //     openerMethod: 'popup'\n    // },\n    // filebrowserBrowseUrl: 'avc.php'\n\n    toolbar: {\n        items: [\n            'heading',\n            '|',\n            'fontsize',\n            'fontfamily',\n            '|',\n            'bold',\n            'italic',\n            'underline',\n            'strikethrough',\n            'highlight',\n            '|',\n            'alignment',\n            '|',\n            'numberedList',\n            'bulletedList',\n            '|',\n            'indent',\n            'outdent',\n            '|',\n            'link',\n            'blockquote',\n            'imageUpload',\n            'insertTable',\n            'mediaEmbed',\n            '|',\n            'undo',\n            'redo',\n        ]\n    },\n    image: {\n        styles: [\n            'full',\n            'alignLeft',\n            'alignRight'\n        ],\n        toolbar: [\n            'imageStyle:alignLeft',\n            'imageStyle:full',\n            'imageStyle:alignRight',\n            '|',\n            'imageTextAlternative'\n        ]\n    },\n    table: {\n        contentToolbar: [\n            'tableColumn',\n            'tableRow',\n            'mergeTableCells'\n        ]\n    },\n    // This value must be kept in sync with the language defined in webpack.config.js.\n    language: 'en',\n    extraPlugins: [MyCustomUploadAdapterPlugin],\n};\nexport default editorConfig;\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport {FieldArray, FormikProvider, useFormik} from 'formik';\nimport Form from \"react-bootstrap/Form\";\nimport {PAGE_ROOM_LIST, PAGE_SERVICE_LIST} from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../Common/Spinner\";\nimport Button from \"react-bootstrap/Button\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport DecoupledEditor from \"@ckeditor/ckeditor5-build-decoupled-document\";\nimport editorConfig from \"../../services/CKEditorUploadAdapter\";\n\nconst RoomFormDetails = (props) => {\n    const lang = props.languageSwitcher.languageMessages;\n    const { formData, isDetail, listRoomFacility, listRoomType } = props;\n\n    let initialValues = {\n        id: formData.id,\n        code: formData.code,\n        name_en: formData.name.en,\n        name_vi: formData.name.vi,\n        name_jp_kanji: formData.name.jp.kanji,\n        name_jp_romaji: formData.name.jp.romaji,\n        name_kr: formData.name.kr,\n        description_en: formData.description.en,\n        description_vi: formData.description.vi,\n        description_jp_kanji: formData.description.jp.kanji,\n        description_jp_romaji: formData.description.jp.romaji,\n        description_kr: formData.description.kr,\n        price: formData.price,\n        room_type_id: formData.room_type_id,\n        images_source: formData.images.source,\n        images_thumbnail: formData.images.thumbnail,\n        images_origin_source: formData.images_origin.source,\n        images_origin_thumbnail: formData.images_origin.thumbnail,\n        facilities: formData.facilities,\n        price_text_en: formData.price_text.en,\n        price_text_vi: formData.price_text.vi,\n        price_text_jp_kanji: formData.price_text.jp.kanji,\n        price_text_jp_romaji: formData.price_text.jp.romaji,\n        price_text_kr: formData.price_text.kr,\n        status: formData.status,\n    };\n    //convert null value to empty, else formik will not work\n    Object.keys(initialValues).forEach(key => {\n        if (initialValues[key] === undefined || initialValues[key] === null) {\n            initialValues[key] = '';\n        }\n    });\n\n    let formik = useFormik({\n        initialValues: initialValues,\n        enableReinitialize: true,\n        onSubmit: values => {\n            props.submitHandler(values);\n        },\n    });\n\n    return (\n        <div className=\"box box-primary\">\n            <FormikProvider value={formik}>\n            <Form onSubmit={formik.handleSubmit}>\n                <div className=\"box-body\">\n                    <Tabs defaultActiveKey=\"general\">\n                        <Tab eventKey=\"general\" title=\"Thông tin cơ bản\">\n                            <Form.Group>\n                                <Form.Label>Danh mục</Form.Label>\n                                <Form.Control as=\"select\" disabled\n                                              id=\"room_type_id\"\n                                              name=\"room_type_id\"\n                                              onChange={formik.handleChange}\n                                              value={formik.values.room_type_id}>\n                                    <option value=\"0\">{lang['common.select.default']}</option>\n                                    {listRoomType !== undefined && listRoomType.map(d => (\n                                    <option key={d.id} value={d.id}>{d.name.vi} | {d.name.en}</option>\n                                    ))}\n                                </Form.Control>\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Giá</Form.Label>\n                                <Form.Control disabled\n                                    id=\"price\"\n                                    name=\"price\"\n                                    type=\"number\"\n                                    onChange={formik.handleChange}\n                                    value={formik.values.price}\n                                />\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Hiển thị</Form.Label>\n                                <Form.Check disabled\n                                    id=\"status\"\n                                    name=\"status\"\n                                    type=\"checkbox\"\n                                    checked={parseInt(formik.values.status) === 1}\n                                    onChange={e => {\n                                        if (e.target.checked) {\n                                            formik.setFieldValue('status', 1);\n                                        } else {\n                                            formik.setFieldValue('status', 0);\n                                        }\n                                    }}\n                                    value={formik.values.status}\n                                />\n                            </Form.Group>\n                        </Tab>\n                        {/*<Tab eventKey=\"priceText\" title=\"Price Text\">*/}\n                            {/*<Form.Group>*/}\n                                {/*<Form.Label>Vi</Form.Label>*/}\n                                {/*<Form.Control disabled*/}\n                                    {/*id=\"price_text_vi\"*/}\n                                    {/*name=\"price_text_vi\"*/}\n                                    {/*type=\"text\"*/}\n                                    {/*onChange={formik.handleChange}*/}\n                                    {/*value={formik.values.price_text_vi}*/}\n                                {/*/>*/}\n                            {/*</Form.Group>*/}\n                            {/*<Form.Group>*/}\n                                {/*<Form.Label>En</Form.Label>*/}\n                                {/*<Form.Control disabled*/}\n                                    {/*id=\"price_text_en\"*/}\n                                    {/*name=\"price_text_en\"*/}\n                                    {/*type=\"text\"*/}\n                                    {/*onChange={formik.handleChange}*/}\n                                    {/*value={formik.values.price_text_en}*/}\n                                {/*/>*/}\n                            {/*</Form.Group>*/}\n                            {/*<Form.Group>*/}\n                                {/*<Form.Label>Jp Kanji</Form.Label>*/}\n                                {/*<Form.Control disabled*/}\n                                    {/*id=\"price_text_jp_kanji\"*/}\n                                    {/*name=\"price_text_jp_kanji\"*/}\n                                    {/*type=\"text\"*/}\n                                    {/*onChange={formik.handleChange}*/}\n                                    {/*value={formik.values.price_text_jp_kanji}*/}\n                                {/*/>*/}\n                            {/*</Form.Group>*/}\n                            {/*<Form.Group>*/}\n                                {/*<Form.Label>Jp Romaji</Form.Label>*/}\n                                {/*<Form.Control disabled*/}\n                                    {/*id=\"price_text_jp_romaji\"*/}\n                                    {/*name=\"price_text_jp_romaji\"*/}\n                                    {/*type=\"text\"*/}\n                                    {/*onChange={formik.handleChange}*/}\n                                    {/*value={formik.values.price_text_jp_romaji}*/}\n                                {/*/>*/}\n                            {/*</Form.Group>*/}\n                            {/*<Form.Group>*/}\n                                {/*<Form.Label>Kr</Form.Label>*/}\n                                {/*<Form.Control disabled*/}\n                                    {/*id=\"price_text_kr\"*/}\n                                    {/*name=\"price_text_kr\"*/}\n                                    {/*type=\"text\"*/}\n                                    {/*onChange={formik.handleChange}*/}\n                                    {/*value={formik.values.price_text_kr}*/}\n                                {/*/>*/}\n                            {/*</Form.Group>*/}\n                        {/*</Tab>*/}\n                        <Tab eventKey=\"home\" title=\"Tên\">\n                            <Form.Group>\n                                <Form.Label>Vi</Form.Label>\n                                <Form.Control disabled\n                                    id=\"name_vi\"\n                                    name=\"name_vi\"\n                                    type=\"text\"\n                                    onChange={formik.handleChange}\n                                    value={formik.values.name_vi}\n                                />\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>En</Form.Label>\n                                <Form.Control disabled\n                                    id=\"name_en\"\n                                    name=\"name_en\"\n                                    type=\"text\"\n                                    onChange={formik.handleChange}\n                                    value={formik.values.name_en}\n                                />\n                            </Form.Group>\n                            <Form.Group className=\"hide\">\n                                <Form.Label>Jp Kanji</Form.Label>\n                                <Form.Control disabled\n                                    id=\"name_jp_kanji\"\n                                    name=\"name_jp_kanji\"\n                                    type=\"text\"\n                                    onChange={formik.handleChange}\n                                    value={formik.values.name_jp_kanji}\n                                />\n                            </Form.Group>\n                            <Form.Group className=\"hide\">\n                                <Form.Label>Jp Romaji</Form.Label>\n                                <Form.Control disabled\n                                    id=\"name_jp_romaji\"\n                                    name=\"name_jp_romaji\"\n                                    type=\"text\"\n                                    onChange={formik.handleChange}\n                                    value={formik.values.name_jp_romaji}\n                                />\n                            </Form.Group>\n                            <Form.Group className=\"hide\">\n                                <Form.Label>Kr</Form.Label>\n                                <Form.Control disabled\n                                              id=\"name_kr\"\n                                              name=\"name_kr\"\n                                              type=\"text\"\n                                              onChange={formik.handleChange}\n                                              value={formik.values.name_kr}\n                                />\n                            </Form.Group>\n                        </Tab>\n                        <Tab eventKey=\"description_vi\" title=\"Mô tả chi tiết Vi\">\n                            <Form.Group>\n                                <CKEditor disabled\n                                    editor={DecoupledEditor}\n                                    config={editorConfig}\n                                    data={formik.values.description_vi}\n                                    onChange={(event, editor) => {\n                                        formik.setFieldValue('description_vi', editor.getData());\n                                    }}\n                                    onInit={editor => {\n                                        editor.ui.getEditableElement().parentElement.insertBefore(\n                                            editor.ui.view.toolbar.element,\n                                            editor.ui.getEditableElement()\n                                        );\n                                    }}\n                                />\n                            </Form.Group>\n                        </Tab>\n                        <Tab eventKey=\"description_en\" title=\"Mô tả chi tiết En\">\n                            <Form.Group>\n                                <CKEditor disabled\n                                    editor={DecoupledEditor}\n                                    config={editorConfig}\n                                    data={formik.values.description_en}\n                                    onChange={(event, editor) => {\n                                        formik.setFieldValue('description_en', editor.getData());\n                                    }}\n                                    onInit={editor => {\n                                        editor.ui.getEditableElement().parentElement.insertBefore(\n                                            editor.ui.view.toolbar.element,\n                                            editor.ui.getEditableElement()\n                                        );\n                                    }}\n                                />\n                            </Form.Group>\n                        </Tab>\n                        {/*<Tab eventKey=\"description_jp_kanji\" title=\"Description Jp Kanji\">*/}\n                            {/*<Form.Group>*/}\n                                {/*<CKEditor disabled*/}\n                                    {/*editor={DecoupledEditor}*/}\n                                    {/*config={editorConfig}*/}\n                                    {/*data={formik.values.description_jp_kanji}*/}\n                                    {/*onChange={(event, editor) => {*/}\n                                        {/*formik.setFieldValue('description_jp_kanji', editor.getData());*/}\n                                    {/*}}*/}\n                                    {/*onInit={editor => {*/}\n                                        {/*editor.ui.getEditableElement().parentElement.insertBefore(*/}\n                                            {/*editor.ui.view.toolbar.element,*/}\n                                            {/*editor.ui.getEditableElement()*/}\n                                        {/*);*/}\n                                    {/*}}*/}\n                                {/*/>*/}\n                            {/*</Form.Group>*/}\n                        {/*</Tab>*/}\n                        {/*<Tab eventKey=\"description_jp_romanji\" title=\"Description Jp Romanji\">*/}\n                            {/*<Form.Group>*/}\n                                {/*<CKEditor disabled*/}\n                                    {/*editor={DecoupledEditor}*/}\n                                    {/*config={editorConfig}*/}\n                                    {/*data={formik.values.description_jp_romaji}*/}\n                                    {/*onChange={(event, editor) => {*/}\n                                        {/*formik.setFieldValue('description_jp_romaji', editor.getData());*/}\n                                    {/*}}*/}\n                                    {/*onInit={editor => {*/}\n                                        {/*editor.ui.getEditableElement().parentElement.insertBefore(*/}\n                                            {/*editor.ui.view.toolbar.element,*/}\n                                            {/*editor.ui.getEditableElement()*/}\n                                        {/*);*/}\n                                    {/*}}*/}\n                                {/*/>*/}\n                            {/*</Form.Group>*/}\n                        {/*</Tab>*/}\n                        {/*<Tab eventKey=\"description_kr\" title=\"Description Kr\">*/}\n                            {/*<Form.Group>*/}\n                                {/*<CKEditor disabled*/}\n                                    {/*editor={DecoupledEditor}*/}\n                                    {/*config={editorConfig}*/}\n                                    {/*data={formik.values.description_kr}*/}\n                                    {/*onChange={(event, editor) => {*/}\n                                        {/*formik.setFieldValue('description_kr', editor.getData());*/}\n                                    {/*}}*/}\n                                    {/*onInit={editor => {*/}\n                                        {/*editor.ui.getEditableElement().parentElement.insertBefore(*/}\n                                            {/*editor.ui.view.toolbar.element,*/}\n                                            {/*editor.ui.getEditableElement()*/}\n                                        {/*);*/}\n                                    {/*}}*/}\n                                {/*/>*/}\n                            {/*</Form.Group>*/}\n                        {/*</Tab>*/}\n                        {/*<Tab eventKey=\"facilities\" title=\"Facilities\">*/}\n                            {/*<FieldArray*/}\n                                {/*name=\"facilities\"*/}\n                                {/*render={arrayHelpers => (*/}\n                                    {/*<div>*/}\n                                        {/*{listRoomFacility.length > 0 ? (*/}\n                                            {/*listRoomFacility.map((facility, index) => (*/}\n                                                {/*<Form.Group controlId={facility.id} key={facility.id}>*/}\n                                                {/*<Form.Check*/}\n                                                    {/*key={`facilities.[${facility.id}].id`}*/}\n                                                    {/*name={`facilities.[${facility.id}].id`}*/}\n                                                    {/*disabled={true}*/}\n                                                    {/*className=\"margin-right-5px\"*/}\n                                                    {/*value={facility.id}*/}\n                                                    {/*label={facility.name.vi + '-' + facility.name.en}*/}\n                                                    {/*checked={formik.values.facilities.includes(facility.id)}*/}\n                                                    {/*onChange={e => {*/}\n\n                                                    {/*}}>*/}\n                                                {/*</Form.Check>*/}\n                                                {/*</Form.Group>*/}\n                                            {/*))*/}\n                                        {/*) : ''}*/}\n                                    {/*</div>*/}\n                                {/*)}*/}\n                            {/*/>*/}\n                        {/*</Tab>*/}\n                        <Tab eventKey=\"image\" title=\"Hình đại diện\">\n                            { formData.id !== '' ? (\n                                    <Form.Group>\n                                        <Form.Label>Hình đang sử dụng</Form.Label>\n                                        <Form.Text>\n                                            <img src={formData.images.thumbnail} alt=\"Current Image\" />\n                                        </Form.Text>\n                                    </Form.Group>)\n                                : ''}\n                        </Tab>\n                    </Tabs>\n                </div>\n                <div className=\"box-footer text-center\">\n                    {isDetail === undefined ?\n                        <React.Fragment>\n                        <button type=\"submit\" className=\"btn btn-info\">{lang['layout.button.delete']}</button>\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={(event) => {props.history.push(PAGE_ROOM_LIST)} }>{lang['layout.button.cancel']}</button>\n                        </React.Fragment>\n                        :\n                        <React.Fragment>\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={(event) => {props.history.push(PAGE_ROOM_LIST)} }>{lang['layout.button.back']}</button>\n                        </React.Fragment>\n                    }\n                </div>\n            </Form>\n            </FormikProvider>\n        </div>\n    );\n};\nconst mapStateToProps = (state) => ({\n    ...state.roomReducer,\n    ...state.layoutReducer,\n    ...state\n});\nexport default withRouter(connect(mapStateToProps, {})(RoomFormDetails));\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/room/action\";\nimport { withRouter } from 'react-router-dom';\nimport RoomFormDetails from './FormDetails';\nimport SpinnerComponent from \"../Common/Spinner\";\n\nclass RoomDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.resetFormData();\n    }\n\n    componentDidMount() {\n        this.props.getListRoomType();\n        this.props.getListRoomFacility();\n        this.props.getById(this.props.match.params.id);\n    }\n\n    render() {\n\n        const lang = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <React.Fragment>\n                <RoomFormDetails\n                    submitHandler={this.onSubmit}\n                    isDetail={true}\n                />\n                <SpinnerComponent show={this.props.layoutReducer.isCallingApi}> </SpinnerComponent>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.roomReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(RoomDetails));\n","import React from 'react';\nimport {Breadcrumb} from \"react-bootstrap\";\nimport * as PageUrls from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport { withRouter } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/room/action\";\nimport RoomDetail from \"../../components/Room/Detail\";\n\nclass ScreensRoomDetail extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_GROUP_LIST}>\n                            {messages['room.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['room.details.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <RoomDetail />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensRoomDetail));\n","import React, { useState } from \"react\"\nimport \"react-dates/initialize\"\nimport { DateRangePicker } from \"react-dates\"\nimport \"react-dates/lib/css/_datepicker.css\"\n\nconst DatePickerWithFormik = ({\n                                  startDateId,\n                                  endDateId,\n                                  form: { setFieldValue, setFieldTouched, values },\n                                  field,\n                                  ...props\n                              }) => {\n    const [focusedInput, setFocusedInput] = useState(null);\n    return (\n        <DateRangePicker\n            startDate={values.start_date}\n            startDateId=\"Start\"\n            endDate={values.end_date}\n            endDateId=\"End\"\n            onDatesChange={({ startDate, endDate }) => {\n                setFieldValue(\"start_date\", startDate);\n                setFieldValue(\"end_date\", endDate);\n            }}\n            focusedInput={focusedInput}\n            onFocusChange={focusedInput => setFocusedInput(focusedInput)}\n        />\n    )\n};\n\nexport default DatePickerWithFormik;\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {withRouter} from 'react-router-dom';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport {useFormik} from 'formik';\nimport Form from \"react-bootstrap/Form\";\nimport ImageUploader from 'react-images-upload';\nimport {PAGE_ROOM_LIST} from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../Common/Spinner\";\nimport Button from \"react-bootstrap/Button\";\nimport {Field, FieldArray, FormikProvider} from \"formik\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport DecoupledEditor from '@ckeditor/ckeditor5-build-decoupled-document';\nimport editorConfig from \"../../services/CKEditorUploadAdapter\";\nimport moment from \"moment\";\nimport siteConfig from \"../../configs/siteConfig\";\nimport {DatePicker} from \"antd\";\nimport {SingleDatePicker, DateRangePicker} from 'react-dates';\nimport DatePickerWithFormik from \"../../common/DatePickerWithFormmik\";\n\n\nconst RoomForm = (props) => {\n    const lang = props.languageSwitcher.languageMessages;\n    const {listRoomType, buttonStyle, listRoomFacility, formData} = props;\n\n    let initialValues = {\n        id: formData.id,\n        code: formData.code,\n        name_en: formData.name.en,\n        name_vi: formData.name.vi,\n        name_jp_kanji: formData.name.jp.kanji,\n        name_jp_romaji: formData.name.jp.romaji,\n        name_kr: formData.name.kr,\n        description_en: formData.description.en,\n        description_vi: formData.description.vi,\n        description_jp_kanji: formData.description.jp.kanji,\n        description_jp_romaji: formData.description.jp.romaji,\n        description_kr: formData.description.kr,\n        price: formData.price,\n        room_type_id: parseInt(formData.room_type_id) !== 0 ? formData.room_type_id : props.filter.room_type_id,\n        images_source: formData.images.source,\n        images_thumbnail: formData.images.thumbnail,\n        images_origin_source: formData.images_origin.source,\n        images_origin_thumbnail: formData.images_origin.thumbnail,\n        facilities: formData.facilities,\n        price_text_en: formData.price_text.en,\n        price_text_vi: formData.price_text.vi,\n        price_text_jp_kanji: formData.price_text.jp.kanji,\n        price_text_jp_romaji: formData.price_text.jp.romaji,\n        price_text_kr: formData.price_text.kr,\n        status: formData.status,\n    };\n    console.log(initialValues.room_type_id);\n    //convert null value to empty, else formik will not work\n    Object.keys(initialValues).forEach(key => {\n        if (initialValues[key] === undefined || initialValues[key] === null) {\n            initialValues[key] = '';\n        }\n    });\n\n    let formik = useFormik({\n        initialValues: initialValues,\n        enableReinitialize: true,\n        onSubmit: values => {\n            props.submitHandler(values);\n        },\n    });\n\n    const onDrop = (pictureSelected, pictureDataURLs) => {\n        props.handleImageSelected(pictureSelected, pictureDataURLs);\n    };\n\n    const uploadButtonLabel = (formData.id !== undefined && formData.id !== '') ?\n        'Chọn hình mới thay thế hình đang có' : 'Chọn hình cần upload';\n\n    return (\n        <div className=\"box box-primary\">\n            <SpinnerComponent show={props.isCallingApi}> </SpinnerComponent>\n            <FormikProvider value={formik}>\n                <Form onSubmit={formik.handleSubmit}>\n                    <div className=\"box-body\">\n                        <Tabs defaultActiveKey=\"general\">\n                            <Tab eventKey=\"general\" title=\"Thông tin cơ bản\">\n                                <Form.Group>\n                                    <Form.Label>Danh mục</Form.Label>\n                                    <Form.Control as=\"select\"\n                                                  id=\"room_type_id\"\n                                                  name=\"room_type_id\"\n                                                  onChange={formik.handleChange}\n                                                  value={formik.values.room_type_id}>\n                                        <option value=\"0\">{lang['common.select.default']}</option>\n                                        {listRoomType.map(d => (\n                                            <option key={d.id}\n                                                    value={d.id}>{d.name.vi} | {d.name.en} </option>\n                                        ))}\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Tên</Form.Label>\n                                    <Form.Control\n                                        id=\"name_vi\"\n                                        name=\"name_vi\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_vi}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Giá</Form.Label>\n                                    <Form.Control\n                                        id=\"price\"\n                                        name=\"price\"\n                                        type=\"number\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.price}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Hiển thị</Form.Label>\n                                    <Form.Check\n                                        id=\"status\"\n                                        name=\"status\"\n                                        type=\"checkbox\"\n                                        checked={parseInt(formik.values.status) === 1}\n                                        onChange={e => {\n                                            if (e.target.checked) {\n                                                formik.setFieldValue('status', 1);\n                                            } else {\n                                                formik.setFieldValue('status', 0);\n                                            }\n                                        }}\n                                        value={formik.values.status}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            {/*<Tab eventKey=\"priceText\" title=\"Price Text\" hide>*/}\n                                {/*<Form.Group>*/}\n                                    {/*<Form.Label>Vi</Form.Label>*/}\n                                    {/*<Form.Control*/}\n                                        {/*id=\"price_text_vi\"*/}\n                                        {/*name=\"price_text_vi\"*/}\n                                        {/*type=\"text\"*/}\n                                        {/*onChange={formik.handleChange}*/}\n                                        {/*value={formik.values.price_text_vi}*/}\n                                    {/*/>*/}\n                                {/*</Form.Group>*/}\n                                {/*<Form.Group>*/}\n                                    {/*<Form.Label>En</Form.Label>*/}\n                                    {/*<Form.Control*/}\n                                        {/*id=\"price_text_en\"*/}\n                                        {/*name=\"price_text_en\"*/}\n                                        {/*type=\"text\"*/}\n                                        {/*onChange={formik.handleChange}*/}\n                                        {/*value={formik.values.price_text_en}*/}\n                                    {/*/>*/}\n                                {/*</Form.Group>*/}\n                                {/*<Form.Group className=\"\">*/}\n                                    {/*<Form.Label>Jp Kanji</Form.Label>*/}\n                                    {/*<Form.Control*/}\n                                        {/*id=\"price_text_jp_kanji\"*/}\n                                        {/*name=\"price_text_jp_kanji\"*/}\n                                        {/*type=\"text\"*/}\n                                        {/*onChange={formik.handleChange}*/}\n                                        {/*value={formik.values.price_text_jp_kanji}*/}\n                                    {/*/>*/}\n                                {/*</Form.Group>*/}\n                                {/*<Form.Group className=\"hide\">*/}\n                                    {/*<Form.Label>Jp Romaji</Form.Label>*/}\n                                    {/*<Form.Control*/}\n                                        {/*id=\"price_text_jp_romaji\"*/}\n                                        {/*name=\"price_text_jp_romaji\"*/}\n                                        {/*type=\"text\"*/}\n                                        {/*onChange={formik.handleChange}*/}\n                                        {/*value={formik.values.price_text_jp_romaji}*/}\n                                    {/*/>*/}\n                                {/*</Form.Group>*/}\n                                {/*<Form.Group className=\"hide\">*/}\n                                    {/*<Form.Label>Kr</Form.Label>*/}\n                                    {/*<Form.Control*/}\n                                        {/*id=\"price_text_kr\"*/}\n                                        {/*name=\"price_text_kr\"*/}\n                                        {/*type=\"text\"*/}\n                                        {/*onChange={formik.handleChange}*/}\n                                        {/*value={formik.values.price_text_kr}*/}\n                                    {/*/>*/}\n                                {/*</Form.Group>*/}\n                            {/*</Tab>*/}\n                            <Tab eventKey=\"description_vi\" title=\"Mô tả chi tiết Vi\">\n                                <Form.Group>\n                                    <CKEditor\n                                        editor={DecoupledEditor}\n                                        config={editorConfig}\n                                        data={formik.values.description_vi}\n                                        onChange={(event, editor) => {\n                                            formik.setFieldValue('description_vi', editor.getData());\n                                        }}\n                                        onInit={editor => {\n                                            editor.ui.getEditableElement().parentElement.insertBefore(\n                                                editor.ui.view.toolbar.element,\n                                                editor.ui.getEditableElement()\n                                            );\n                                        }}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"home\" title=\"Tên En\">\n                                <Form.Group>\n                                    <Form.Label>En</Form.Label>\n                                    <Form.Control\n                                        id=\"name_en\"\n                                        name=\"name_en\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_en}\n                                    />\n                                </Form.Group>\n                                <Form.Group className=\"hide\">\n                                    <Form.Label>Jp Kanji</Form.Label>\n                                    <Form.Control\n                                        id=\"name_jp_kanji\"\n                                        name=\"name_jp_kanji\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_jp_kanji}\n                                    />\n                                </Form.Group>\n                                <Form.Group className=\"hide\">\n                                    <Form.Label>Jp Romaji</Form.Label>\n                                    <Form.Control\n                                        id=\"name_jp_romaji\"\n                                        name=\"name_jp_romaji\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_jp_romaji}\n                                    />\n                                </Form.Group>\n                                <Form.Group className=\"hide\">\n                                    <Form.Label>Kr</Form.Label>\n                                    <Form.Control\n                                        id=\"name_kr\"\n                                        name=\"name_kr\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_kr}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"description_en\" title=\"Mô tả chi tiết En\">\n                                <Form.Group>\n                                    <CKEditor\n                                        editor={DecoupledEditor}\n                                        config={editorConfig}\n                                        data={formik.values.description_en}\n                                        onChange={(event, editor) => {\n                                            formik.setFieldValue('description_en', editor.getData());\n                                        }}\n                                        onInit={editor => {\n                                            editor.ui.getEditableElement().parentElement.insertBefore(\n                                                editor.ui.view.toolbar.element,\n                                                editor.ui.getEditableElement()\n                                            );\n                                        }}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            {/*<Tab eventKey=\"description_jp_kanji\" title=\"Description Jp Kanji\">*/}\n                                {/*<Form.Group>*/}\n                                    {/*<CKEditor*/}\n                                        {/*editor={DecoupledEditor}*/}\n                                        {/*config={editorConfig}*/}\n                                        {/*data={formik.values.description_jp_kanji}*/}\n                                        {/*onChange={(event, editor) => {*/}\n                                            {/*formik.setFieldValue('description_jp_kanji', editor.getData());*/}\n                                        {/*}}*/}\n                                        {/*onInit={editor => {*/}\n                                            {/*editor.ui.getEditableElement().parentElement.insertBefore(*/}\n                                                {/*editor.ui.view.toolbar.element,*/}\n                                                {/*editor.ui.getEditableElement()*/}\n                                            {/*);*/}\n                                        {/*}}*/}\n                                    {/*/>*/}\n                                {/*</Form.Group>*/}\n                            {/*</Tab>*/}\n                            {/*<Tab eventKey=\"description_jp_romanji\" title=\"Description Jp Romanji\">*/}\n                                {/*<Form.Group>*/}\n                                    {/*<CKEditor*/}\n                                        {/*editor={DecoupledEditor}*/}\n                                        {/*config={editorConfig}*/}\n                                        {/*data={formik.values.description_jp_romaji}*/}\n                                        {/*onChange={(event, editor) => {*/}\n                                            {/*formik.setFieldValue('description_jp_romaji', editor.getData());*/}\n                                        {/*}}*/}\n                                        {/*onInit={editor => {*/}\n                                            {/*editor.ui.getEditableElement().parentElement.insertBefore(*/}\n                                                {/*editor.ui.view.toolbar.element,*/}\n                                                {/*editor.ui.getEditableElement()*/}\n                                            {/*);*/}\n                                        {/*}}*/}\n                                    {/*/>*/}\n                                {/*</Form.Group>*/}\n                            {/*</Tab>*/}\n                            {/*<Tab eventKey=\"description_kr\" title=\"Description Kr\">*/}\n                                {/*<Form.Group>*/}\n                                    {/*<CKEditor*/}\n                                        {/*editor={DecoupledEditor}*/}\n                                        {/*config={editorConfig}*/}\n                                        {/*data={formik.values.description_kr}*/}\n                                        {/*onChange={(event, editor) => {*/}\n                                            {/*formik.setFieldValue('description_kr', editor.getData());*/}\n                                        {/*}}*/}\n                                        {/*onInit={editor => {*/}\n                                            {/*editor.ui.getEditableElement().parentElement.insertBefore(*/}\n                                                {/*editor.ui.view.toolbar.element,*/}\n                                                {/*editor.ui.getEditableElement()*/}\n                                            {/*);*/}\n                                        {/*}}*/}\n                                    {/*/>*/}\n                                {/*</Form.Group>*/}\n                            {/*</Tab>*/}\n                            {/*<Tab eventKey=\"facilities\" title=\"Facilities\">*/}\n                                {/*<FieldArray*/}\n                                    {/*name=\"facilities\"*/}\n                                    {/*render={arrayHelpers => (*/}\n                                        {/*<div>*/}\n                                            {/*{listRoomFacility.length > 0 ? (*/}\n                                                {/*listRoomFacility.map((facility, index) => (*/}\n                                                    {/*<Form.Group controlId={facility.id} key={facility.id}>*/}\n                                                        {/*<Form.Check*/}\n                                                            {/*key={`facilities.[${facility.id}].id`}*/}\n                                                            {/*name={`facilities.[${facility.id}].id`}*/}\n                                                            {/*className=\"margin-right-5px\"*/}\n                                                            {/*value={facility.id}*/}\n                                                            {/*label={facility.name.vi + '-' + facility.name.en}*/}\n                                                            {/*type=\"checkbox\"*/}\n                                                            {/*checked={formik.values.facilities.includes(facility.id)}*/}\n                                                            {/*onChange={e => {*/}\n                                                                {/*if (e.target.checked) arrayHelpers.push(facility.id);*/}\n                                                                {/*else {*/}\n                                                                    {/*const idx = formik.values.facilities.indexOf(facility.id);*/}\n                                                                    {/*arrayHelpers.remove(idx);*/}\n                                                                {/*}*/}\n                                                            {/*}}>*/}\n                                                        {/*</Form.Check>*/}\n                                                    {/*</Form.Group>*/}\n                                                {/*))*/}\n                                            {/*) : ''}*/}\n                                        {/*</div>*/}\n                                    {/*)}*/}\n                                {/*/>*/}\n                            {/*</Tab>*/}\n                            <Tab eventKey=\"image\" title=\"Hình đại diện\">\n                                {formData.id !== '' ? (\n                                        <Form.Group>\n                                            <Form.Label>Hình đang có</Form.Label>\n                                            <Form.Text>\n                                                <img src={formData.images.thumbnail} alt=\"Current Image\"/>\n                                            </Form.Text>\n                                        </Form.Group>)\n                                    : ''}\n                                <Form.Group>\n                                    <ImageUploader\n                                        singleImage={true}\n                                        withIcon={true}\n                                        buttonText={uploadButtonLabel}\n                                        onChange={onDrop}\n                                        imgExtension={['.jpg', '.png', '.gif']}\n                                        maxFileSize={5242880}\n                                        withPreview={true}\n                                        buttonStyles={buttonStyle}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                        </Tabs>\n                    </div>\n                    <div className=\"box-footer text-center\">\n                        <button type=\"submit\" className=\"btn btn-info\">{lang['layout.button.save']}</button>\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={(event) => {\n                            props.history.push(PAGE_ROOM_LIST)\n                        }}>{lang['layout.button.cancel']}</button>\n                    </div>\n                </Form>\n            </FormikProvider>\n        </div>\n    );\n};\nconst mapStateToProps = (state) => ({\n    ...state.roomReducer,\n    ...state.layoutReducer,\n    ...state\n});\nexport default withRouter(connect(mapStateToProps, {})(RoomForm));\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/room/action\";\nimport { withRouter } from 'react-router-dom';\nimport RoomForm from './Form';\nimport notification from \"../../helpers/Notification\";\n\nclass RoomAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            localImageFile: [],\n            localImageData: [],\n        };\n        this.props.resetFormData();\n    }\n\n    handleImageSelected = (pictureSelected, pictureDataURLs)  => {\n        if (pictureSelected.length > 0) {\n            this.setState({\n                localImageFile: [pictureSelected[pictureSelected.length - 1]],\n                localImageData: [pictureDataURLs[pictureDataURLs.length - 1]]\n            });\n        } else {\n            this.setState({\n                localImageFile: [],\n                localImageData: []\n            });\n        }\n    };\n\n    onSubmit = values => {\n        if (!this.validate(values)) {\n            return;\n        }\n\n        const data = {\n            id: values.id,\n            code: '',//values.code,\n            name: {\n                vi: values.name_vi,\n                en: values.name_en,\n                jp: {\n                    kanji: values.name_jp_kanji,\n                    romaji: values.name_jp_romaji\n                },\n                kr: values.name_kr\n            },\n            description: {\n                vi: values.description_vi,\n                en: values.description_en,\n                jp: {\n                    kanji: values.description_jp_kanji,\n                    romaji: values.description_jp_romaji\n                },\n                kr: values.description_kr\n            },\n            price: values.price === '' ? 0 : values.price ,\n            room_type_id: values.room_type_id,\n            images: {\n                source: values.images_source,\n                thumbnail: values.images_thumbnail,\n            },\n            images_origin: {\n                source: values.images_origin_source,\n                thumbnail: values.images_origin_thumbnail\n            },\n            facilities: values.facilities,\n            price_text: {\n                vi: values.price_text_vi,\n                en: values.price_text_en,\n                jp: {\n                    kanji: values.price_text_jp_kanji,\n                    romaji: values.price_text_jp_romaji\n                },\n                kr: values.price_text_kr\n            },\n            status: values.status,\n        };\n        //add product\n        this.props.add({\n            data: data,\n            image: this.state.localImageFile[0]\n        });\n    };\n\n    validate(values) {\n        console.log(values);\n\n        let errors = [];\n        if (values.room_type_id === '' || values.room_type_id === 0) {\n            errors.push('Vui lòng chọn danh mục');\n        }\n        if (values.name_vi === '' && values.name_en === '' && values.name_jp_kanji === '' && values.name_jp_romaji === '' && values.name_kr === '') {\n            errors.push('Vui lòng nhập Tên');\n        }\n        if (this.state.localImageFile.length === 0) {\n            errors.push('Vui lòng chọn hình');\n        }\n\n        if (errors.length > 0) {\n            notification.error(errors);\n            return false;\n        }\n        return true;\n    }\n\n    componentDidMount() {\n        this.props.getListRoomType();\n        this.props.getListRoomFacility();\n    }\n\n    render() {\n\n        let buttonStyle = {};\n        if (this.state.localImageData.length > 0) {\n            buttonStyle = {display: 'none'};\n        }\n\n        return (\n            <RoomForm\n                submitHandler={this.onSubmit}\n                handleUploadImage={this.handleUploadImage}\n                handleImageSelected={this.handleImageSelected}\n                buttonStyle={buttonStyle}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.roomReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(RoomAdd));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport actions from \"../../redux/room/action\";\nimport { Link, withRouter } from 'react-router-dom';\nimport { Breadcrumb } from \"react-bootstrap\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport * as PageUrls from '../../configs/PagesUrl';\nimport RoomAdd from '../../components/Room/Add';\n\nclass ScreensRoomAdd extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_ROOM_LIST}>\n                            {messages['room.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['room.add.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <RoomAdd />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensRoomAdd));\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/room/action\";\nimport { withRouter } from 'react-router-dom';\nimport RoomForm from './Form';\nimport notification from \"../../helpers/Notification\";\n\nclass RoomEdit extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            localImageFile: [],\n            localImageData: [],\n        };\n        this.props.resetFormData();\n    }\n\n    handleUploadImage = async event => {\n        console.log('upload product image');\n        console.log(event.target.files[0]);\n        // notification.info('Uploading...');\n        // let formData = {\n        //     image: event.target.files[0]\n        // };\n        // await this.props.uploadImage(formData);\n    };\n\n    handleImageSelected = (pictureSelected, pictureDataURLs)  => {\n        if (pictureSelected.length > 0) {\n            this.setState({\n                localImageFile: [pictureSelected[pictureSelected.length - 1]],\n                localImageData: [pictureDataURLs[pictureDataURLs.length - 1]]\n            });\n        } else {\n            this.setState({\n                localImageFile: [],\n                localImageData: []\n            });\n        }\n    };\n\n    onSubmit = values => {\n        if (!this.validate(values)) {\n            return;\n        }\n\n        const data = {\n            id: values.id,\n            code: '',\n            name: {\n                vi: values.name_vi,\n                en: values.name_en,\n                jp: {\n                    kanji: values.name_jp_kanji,\n                    romaji: values.name_jp_romaji\n                },\n                kr: values.name_kr\n            },\n            description: {\n                vi: values.description_vi,\n                en: values.description_en,\n                jp: {\n                    kanji: values.description_jp_kanji,\n                    romaji: values.description_jp_romaji\n                },\n                kr: values.description_kr\n            },\n            price: values.price === '' ? 0 : values.price,\n            room_type_id: values.room_type_id,\n            images: {\n                source: values.images_source,\n                thumbnail: values.images_thumbnail,\n            },\n            images_origin: {\n                source: values.images_origin_source,\n                thumbnail: values.images_origin_thumbnail\n            },\n            facilities: values.facilities,\n            price_text: {\n                vi: values.price_text_vi,\n                en: values.price_text_en,\n                jp: {\n                    kanji: values.price_text_jp_kanji,\n                    romaji: values.price_text_jp_romaji\n                },\n                kr: values.price_text_kr\n            },\n            status: values.status,\n        };\n        //update product\n        if (this.state.localImageFile.length > 0) {\n            this.props.edit({\n                data: data,\n                image: this.state.localImageFile[0]\n            });\n        } else {\n            this.props.edit({\n                data: data,\n            });\n        }\n    };\n\n    validate = values => {\n\n        if (values.id === '') {\n            notification.error('Record does not exist');\n            return false;\n        }\n\n        let errors = [];\n        if (values.room_type_id === '' || values.room_type_id === 0) {\n            errors.push('Vui lòng chọn danh mục');\n        }\n        if (values.name_vi === '' && values.name_en === '' && values.name_jp_kanji === '' && values.name_jp_romaji === '' && values.name_kr === '') {\n            errors.push('Vui lòng nhập tên');\n        }\n\n        if (errors.length > 0) {\n            notification.error(errors);\n            return false;\n        }\n        return true;\n    };\n\n    componentDidMount() {\n        this.props.getById(this.props.match.params.id);\n        this.props.getListRoomType();\n        this.props.getListRoomFacility();\n    }\n\n    render() {\n\n        let buttonStyle = {};\n        if (this.state.localImageData.length > 0) {\n            buttonStyle = {display: 'none'};\n        }\n\n        return (\n            <RoomForm\n                submitHandler={this.onSubmit}\n                handleUploadImage={this.handleUploadImage}\n                handleImageSelected={this.handleImageSelected}\n                buttonStyle={buttonStyle}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.roomReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(RoomEdit));\n","import React from 'react';\nimport {Breadcrumb} from \"react-bootstrap\";\nimport * as PageUrls from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport { withRouter } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/room/action\";\nimport RoomEdit from \"../../components/Room/Edit\";\n\nclass ScreensRoomEdit extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_ROOM_LIST}>\n                            {messages['room.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['room.edit.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <RoomEdit />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensRoomEdit));\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/room/action\";\nimport { withRouter } from 'react-router-dom';\nimport RoomFormDetails from './FormDetails';\nimport SpinnerComponent from \"../Common/Spinner\";\n\nclass RoomDelete extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.resetFormData();\n    }\n\n    onSubmit = values => {\n        this.props.delete(values.id);\n    };\n\n    componentDidMount() {\n        this.props.getListRoomType();\n        this.props.getListRoomFacility();\n        this.props.getById(this.props.match.params.id);\n\n    }\n\n    render() {\n\n        const lang = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <React.Fragment>\n            <p>{lang['message.confirmDelete']}</p>\n            <RoomFormDetails\n                submitHandler={this.onSubmit}\n            />\n            <SpinnerComponent show={this.props.layoutReducer.isCallingApi}> </SpinnerComponent>\n\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.serviceReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(RoomDelete));\n","import React from 'react';\nimport {Breadcrumb} from \"react-bootstrap\";\nimport * as PageUrls from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport { withRouter } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/room/action\";\nimport RoomDelete from \"../../components/Room/Delete\";\n\nclass ScreensRoomDelete extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_GROUP_LIST}>\n                            {messages['room.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['room.delete.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <RoomDelete />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensRoomDelete));\n","import React from 'react';\nimport * as PagesUrl from '../../configs/PagesUrl';\nimport {Link} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport actions from '../../redux/room/action';\nimport {withRouter} from 'react-router-dom';\nimport Paginator from \"../../common/Paginator\";\nimport Filter from \"./Popup/Filter\";\nimport {Table} from 'react-bootstrap';\nimport { toVND } from \"../../helpers/Ultis\";\nimport SpinnerComponent from \"../Common/Spinner\";\nimport RoomFormDetails from \"./FormDetails\";\nimport ImageUploader from \"react-images-upload\";\nimport Form from \"react-bootstrap/Form\";\nimport {FormikProvider, useFormik} from \"formik\";\nimport notification from \"../../helpers/Notification\";\n\nclass RoomListImage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.props.resetFormData();\n        this.state = {\n            localImageFile: [],\n            localImageData: [],\n        };\n    }\n\n    componentDidMount() {\n        this.props.getListRoomType();\n        this.props.getListRoomFacility();\n        this.props.getById(this.props.match.params.id);\n    }\n\n    renderList(listData) {\n        if (listData === undefined) return;\n\n        return listData.map((row, index) => {\n            const key = \"room_image_\" + index;\n            return (\n                <tr key={key}>\n                    <td style={{textAlign: 'center'}}>\n                        <img style={{width: '200px'}} src={row.thumbnail} />\n                    </td>\n                    <td className=\"text-nowrap text-center\">\n                        <span className=\"action-link ml-1\">\n                            <Link to={'#'} onClick={event => {this.handelDeleteImage(row)}} className=\"btn btn-sm btn-danger\">\n                                <i className=\"fa fa-trash\"> </i>\n                            </Link>\n                        </span>\n                    </td>\n                </tr>\n            );\n        });\n    }\n\n    onDrop = (pictureSelected, pictureDataURLs)  => {\n        this.handleImageSelected(pictureSelected, pictureDataURLs);\n    };\n    handleImageSelected = (pictureSelected, pictureDataURLs)  => {\n        if (pictureSelected.length > 0) {\n            this.setState({\n                localImageFile: [pictureSelected[pictureSelected.length - 1]],\n                localImageData: [pictureDataURLs[pictureDataURLs.length - 1]]\n            });\n        } else {\n            this.setState({\n                localImageFile: [],\n                localImageData: []\n            });\n        }\n    };\n\n    onSubmit(event) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (!this.state.localImageFile[0]) {\n            notification.error('Vui lòng chọn hình');\n            return false;\n        }\n\n        const data = [];\n\n        //add image\n        this.props.addImage({\n            data: {\n                id: this.props.match.params.id,\n                galleries: this.props.formData.galleries ? this.props.formData.galleries : []\n            },\n            image: this.state.localImageFile[0]\n        });\n    };\n\n    handelDeleteImage(row) {\n        this.props.deleteImage({\n            needDelete: row.imagesOrigin,\n            id: this.props.match.params.id,\n            galleries: this.props.formData.galleries ? this.props.formData.galleries : []\n        });\n    }\n\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <React.Fragment>\n                <div className=\"box\">\n                    {/*<div className=\"box-header with-border\">*/}\n                        {/*<div className=\"float-md-right mt-2 mt-md-0\">*/}\n                            {/*<Link to={PagesUrl.PAGE_ROOM_LIST}>*/}\n                                {/*<button type=\"button\"*/}\n                                        {/*className=\"btn btn-primary btn-sm ml-1\">{messages['layout.button.back']}</button>*/}\n                            {/*</Link>*/}\n                        {/*</div>*/}\n                    {/*</div>*/}\n                    <RoomFormDetails isDetail={true}/>\n                    <div className=\"box-body\">\n                        <div className=\"datatable_container\">\n                            <div className=\"row m-0 my-2\">\n                                <h3>Thêm hình cho sản phẩm</h3>\n                                    <Form onSubmit={this.onSubmit.bind(this)} id=\"form-upload-image\">\n                                        <Form.Group>\n                                            <ImageUploader\n                                                singleImage={true}\n                                                withIcon={true}\n                                                buttonText={'Chọn hình'}\n                                                onChange={this.onDrop}\n                                                imgExtension={['.jpg', '.png', '.gif']}\n                                                maxFileSize={5242880}\n                                                withPreview={true}\n                                            />\n                                            <button type=\"submit\" className=\"btn btn-info\">{messages['layout.button.upload']}</button>\n                                        </Form.Group>\n                                    </Form>\n                            </div>\n\n                            <div className=\"row m-0 my-2\">\n                                <div className=\"col-sm-12 p-0\">\n                                    <Table bordered hover responsive size=\"sm\" className=\"table-custom mb-0\">\n                                        <thead>\n                                        <tr>\n                                            <th>Hình</th>\n                                            <th style={{ width: '100px' }} rowSpan={2}>{messages['layout.column.action']}</th>\n                                        </tr>\n                                        </thead>\n                                        <tbody>\n                                        {this.renderList(this.props.formData.galleries_show)}\n                                        </tbody>\n                                    </Table>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <SpinnerComponent show={props.isCallingApi}> </SpinnerComponent>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.roomReducer,\n    ...state.layoutReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(RoomListImage));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport RoomListImage from '../../components/Room/ListImage';\nimport actions from \"../../redux/auth/action\";\nimport { withRouter } from 'react-router-dom';\n\nclass ScreensRoomListImage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <h1>\n                        {messages['room.image.title']}\n                    </h1>\n                </section>\n                <section className=\"content\">\n                    <div className=\"row m-0\">\n                        <div className=\"col-12 p-0\">\n                            <RoomListImage />\n                        </div>\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps,actions)(ScreensRoomListImage));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Modal } from 'react-bootstrap';\nimport actions from '../../../redux/room/action';\n\nclass Filter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleApplyFilterButton = this.applyFilter.bind(this);\n        this.handleDiscardsFilterButton = this.discardFilter.bind(this);\n        this.changeSearchText = this.changeSearchTextFunc.bind(this);\n        this.changeGroup = this.changeGroupFunc.bind(this);\n\n        //need same param name in reducer.filter which we want override\n        this.state = {\n            ...this.props.filter,\n            group_id: this.props.filter.group_id\n        };\n    }\n    applyFilter() {\n        //simple clone value of state pass back to parent callback\n        this.props.onApplyFilter({...this.state});\n    }\n    discardFilter() {\n        //discard meaning reset all state params\n        this.setState({ s: '', group_id: 0}, () => {\n            //simple clone value of state pass back to parent callback\n            this.props.onApplyFilter({...this.state});\n        })\n    }\n    changeSearchTextFunc(e) {\n        this.setState({ s: e.target.value});\n    }\n    changeGroupFunc(e) {\n        this.setState({ group_id: e.target.value});\n    }\n    componentDidMount() {\n        this.props.getListGroup();\n    }\n\n    render() {\n\n        const lang = this.props.languageSwitcher.languageMessages;\n        const { listGroup } = this.props;\n\n        return (\n            <Modal\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                show={this.props.show}\n                onHide={this.props.closePopup}\n                className=\"popup_inner popup_inner_filter\"\n            >\n                <Modal.Header closeButton className=\"box-header-filter\">\n                    <Modal.Title id=\"contained-modal-title-vcenter\" className=\"box-title-filter\">\n                        {lang['layout.title.filterList']}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form className=\"form-horizontal\">\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"user\" className=\"col-md-3 control-label\">Search</label>\n                            <div className=\"col-md-9\">\n                                <input type=\"text\" className=\"form-control\"\n                                       value={this.state.s}\n                                       onChange={this.changeSearchText}\n                                       id=\"s\" name=\"s\" placeholder=\"Enter any chars to search\" />\n                            </div>\n                        </div>\n                        {/*<div className=\"form-group row\">*/}\n                            {/*<label htmlFor=\"group_id\" className=\"col-md-3 control-label\">Group</label>*/}\n                            {/*<div className=\"col-md-9\">*/}\n                                {/*<select className=\"form-control\"*/}\n                                        {/*onChange={this.changeGroup}*/}\n                                        {/*value={this.state.group_id}>*/}\n                                    {/*<option value=\"0\">{lang['common.select.default']}</option>*/}\n                                    {/*{listGroup.map(d => (*/}\n                                        {/*<option key={d.id} value={d.id}>{d.name.vi} - {d.name.en} - {d.name.jp.kanji} - {d.name.jp.romaji}</option>*/}\n                                    {/*))}*/}\n                                {/*</select>*/}\n                            {/*</div>*/}\n                        {/*</div>*/}\n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={this.handleDiscardsFilterButton} >\n                        <i className=\"fa fa-times mr-1\"> </i>\n                        {lang['layout.button.discardFilter']}\n                    </button>\n                    <button type=\"button\" className=\"btn btn-primary ml-1\" onClick={this.handleApplyFilterButton} >\n                        <i className=\"fa fa-check mr-1\"> </i>\n                        {lang['layout.button.applyFilter']}\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n}\nconst mapStateToProps = (state) => ({\n    ...state.serviceReducer,\n    ...state,\n});\n\nexport default connect(mapStateToProps, actions)(Filter);\n","import React from 'react';\nimport * as PagesUrl from '../../configs/PagesUrl';\nimport {Link} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport actions from '../../redux/service/action';\nimport {withRouter} from 'react-router-dom';\nimport Paginator from \"../../common/Paginator\";\nimport Filter from \"./Popup/Filter\";\nimport {Table} from 'react-bootstrap';\nimport { toVND } from \"../../helpers/Ultis\";\nimport SpinnerComponent from \"../Common/Spinner\";\n\nclass ServiceList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showPopupFilter: false,\n        };\n        this.onChangePageNumber = this.handlePaging.bind(this);\n        this.onChangeItemPerPage = this.handleItemPerPage.bind(this);\n        this.onApplyFilter = this.handleFilter.bind(this);\n    }\n\n    togglePopupFilter() {\n        this.setState({\n            showPopupFilter: !this.state.showPopupFilter\n        });\n    }\n\n    componentDidMount() {\n        this.props.getList({\n            ...this.props.filter\n        });\n    }\n\n    async handlePaging(pageNumber) {\n        //update filter first, so paging number can changed\n        await this.props.updateFilter({\n            ...this.props.filter,\n            page: pageNumber\n        });\n        await this.getList();\n    }\n\n    async handleItemPerPage(itemPerPage) {\n        //update filter first, so paging number can changed\n        //change item per page must reset page to 1\n        await this.props.updateFilter({\n            ...this.props.filter,\n            per_page: itemPerPage,\n            page: 1\n        });\n        await this.getList();\n    }\n\n    async handleFilter(params) {\n        this.setState({showPopupFilter: false}, async () => {\n            //update filter first, so paging number can changed\n            //change item per page must reset page to 1\n            await this.props.updateFilter({\n                ...this.props.filter,\n                ...params,\n                page: 1\n            });\n            await this.getList();\n        });\n    }\n\n    getList() {\n        this.props.getList(this.props.filter);\n    }\n\n    renderList(listData) {\n        if (listData === undefined || listData.items === undefined) return;\n\n        return listData.items.map((row) => {\n            return (\n                <tr key={row.id}>\n                    <td>{row.id}</td>\n                    <td>{row.name.en}</td>\n                    <td>{row.name.vi}</td>\n                    <td>{row.name.jp.kanji}</td>\n                    <td>{row.name.jp.romaji}</td>\n                    <td>{row.name.kr}</td>\n                    <td style={{width: '200px', textAlign: 'center'}}>\n                        <img style={{width: '100%'}} alt={row.name_vi} src={row.images.thumbnail} />\n                    </td>\n                    <td className=\"text-nowrap text-center\">\n                        <span className=\"action-link\">\n                            <Link to={PagesUrl.PAGE_SERVICE_DETAIL + '/' + row.id} className=\"btn btn-sm btn-info\">\n                                <i className=\"fa fa-eye\"> </i>\n                            </Link>\n                        </span>\n                        <span className=\"action-link ml-1\">\n                            <Link to={PagesUrl.PAGE_SERVICE_EDIT + '/' + row.id} className=\"btn btn-sm btn-success\">\n                                <i className=\"fa fa-pencil\"> </i>\n                            </Link>\n                        </span>\n                        <span className=\"action-link ml-1\">\n                            <Link to={PagesUrl.PAGE_SERVICE_DELETE + '/' + row.id} className=\"btn btn-sm btn-danger\">\n                                <i className=\"fa fa-trash\"> </i>\n                            </Link>\n                        </span>\n                    </td>\n                </tr>\n            );\n        });\n    }\n\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <React.Fragment>\n                <div className=\"box\">\n                    <div className=\"box-header with-border\">\n                        <div className=\"float-md-right mt-2 mt-md-0\">\n                            <button type=\"button\" className=\"btn btn-secondary btn-sm ml-1\"\n                                    >Export\n                            </button>\n                            <Link to={PagesUrl.PAGE_SERVICE_ADD}>\n                                <button type=\"button\"\n                                        className=\"btn btn-primary btn-sm ml-1\">{messages['layout.button.register']}</button>\n                            </Link>\n                        </div>\n                    </div>\n                    <div className=\"box-body\">\n                        <div className=\"datatable_container\">\n                            <Paginator\n                                total={this.props.listData.total}\n                                itemPerPage={this.props.filter.per_page}\n                                currentPage={this.props.filter.page}\n                                onChangePageNumber={this.onChangePageNumber}\n                                onChangeItemPerPage={this.onChangeItemPerPage}\n                                onTogglePopupFilter={this.togglePopupFilter.bind(this)}\n                                filterData={this.props.filter}\n                            />\n                            <div className=\"row m-0 my-2\">\n                                <div className=\"col-sm-12 p-0\">\n                                    <Table bordered hover responsive size=\"sm\" className=\"table-custom mb-0\">\n                                        <thead>\n                                        <tr>\n                                            <th>Id</th>\n                                            <th colSpan={5}>Tên</th>\n                                            <th>Image</th>\n                                            <th style={{ width: '100px' }} rowSpan={2}>{messages['layout.column.action']}</th>\n                                        </tr>\n                                        <tr>\n                                            <th> </th>\n                                            <th>En</th>\n                                            <th>Vi</th>\n                                            <th>Jp - Kanji</th>\n                                            <th>Jp - Romanji</th>\n                                            <th>Kr</th>\n                                            <th> </th>\n                                        </tr>\n                                        </thead>\n                                        <tbody>\n                                        {this.renderList(this.props.listData)}\n                                        </tbody>\n                                    </Table>\n                                </div>\n                            </div>\n                            <div className=\"block-paging-bottom\">\n                                <Paginator\n                                    total={this.props.listData.total}\n                                    itemPerPage={this.props.filter.per_page}\n                                    currentPage={this.props.filter.page}\n                                    onChangePageNumber={this.onChangePageNumber}\n                                    onChangeItemPerPage={this.onChangeItemPerPage}\n                                    filterData={this.props.filter}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    {this.state.showPopupFilter ?\n                        <Filter\n                            show={this.state.showPopupFilter}\n                            closePopup={this.togglePopupFilter.bind(this)}\n                            onApplyFilter={this.onApplyFilter}\n                        />\n                        : null\n                    }\n                </div>\n                <SpinnerComponent show={props.isCallingApi}> </SpinnerComponent>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.serviceReducer,\n    ...state.layoutReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ServiceList));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport ServiceList from '../../components/Service/List';\nimport actions from \"../../redux/auth/action\";\nimport { withRouter } from 'react-router-dom';\n\nclass ScreensServiceList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <h1>\n                        {messages['service.title']}\n                    </h1>\n                </section>\n                <section className=\"content\">\n                    <div className=\"row m-0\">\n                        <div className=\"col-12 p-0\">\n                            <ServiceList />\n                        </div>\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps,actions)(ScreensServiceList));\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {withRouter} from 'react-router-dom';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport {useFormik} from 'formik';\nimport Form from \"react-bootstrap/Form\";\nimport ImageUploader from 'react-images-upload';\nimport {PAGE_ROOM_LIST, PAGE_SERVICE_LIST} from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../Common/Spinner\";\nimport Button from \"react-bootstrap/Button\";\nimport {Field, FieldArray, FormikProvider} from \"formik\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport DecoupledEditor from '@ckeditor/ckeditor5-build-decoupled-document';\nimport editorConfig from \"../../services/CKEditorUploadAdapter\";\nimport moment from \"moment\";\nimport siteConfig from \"../../configs/siteConfig\";\nimport {DatePicker} from \"antd\";\nimport {SingleDatePicker, DateRangePicker} from 'react-dates';\nimport DatePickerWithFormik from \"../../common/DatePickerWithFormmik\";\n\n\nconst ServiceForm = (props) => {\n    const lang = props.languageSwitcher.languageMessages;\n    const {listRoomType, buttonStyle, listRoomFacility, formData} = props;\n\n    console.log(listRoomType);\n\n    let initialValues = {\n        id: formData.id,\n        name_en: formData.name.en,\n        name_vi: formData.name.vi,\n        name_jp_kanji: formData.name.jp.kanji,\n        name_jp_romaji: formData.name.jp.romaji,\n        name_kr: formData.name.kr,\n        description_en: formData.description.en,\n        description_vi: formData.description.vi,\n        description_jp_kanji: formData.description.jp.kanji,\n        description_jp_romaji: formData.description.jp.romaji,\n        description_kr: formData.description.kr,\n        images_source: formData.images.source,\n        images_thumbnail: formData.images.thumbnail,\n        images_origin_source: formData.images_origin.source,\n        images_origin_thumbnail: formData.images_origin.thumbnail\n    };\n    //convert null value to empty, else formik will not work\n    Object.keys(initialValues).forEach(key => {\n        if (initialValues[key] === undefined || initialValues[key] === null) {\n            initialValues[key] = '';\n        }\n    });\n\n    let formik = useFormik({\n        initialValues: initialValues,\n        enableReinitialize: true,\n        onSubmit: values => {\n            props.submitHandler(values);\n        },\n    });\n\n    const onDrop = (pictureSelected, pictureDataURLs)  => {\n        props.handleImageSelected(pictureSelected, pictureDataURLs);\n    };\n\n    const uploadButtonLabel = (formData.id !== undefined && formData.id !== '') ?\n        'Choose new image to replace current one' : 'Choose image';\n\n    return (\n        <div className=\"box box-primary\">\n            <SpinnerComponent show={props.isCallingApi}> </SpinnerComponent>\n            <FormikProvider value={formik}>\n                <Form onSubmit={formik.handleSubmit}>\n                    <div className=\"box-body\">\n                        <Tabs defaultActiveKey=\"home\">\n                            <Tab eventKey=\"home\" title=\"Tên\">\n                                <Form.Group>\n                                    <Form.Label>Vi</Form.Label>\n                                    <Form.Control\n                                        id=\"name_vi\"\n                                        name=\"name_vi\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_vi}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>En</Form.Label>\n                                    <Form.Control\n                                        id=\"name_en\"\n                                        name=\"name_en\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_en}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Jp Kanji</Form.Label>\n                                    <Form.Control\n                                        id=\"name_jp_kanji\"\n                                        name=\"name_jp_kanji\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_jp_kanji}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Jp Romaji</Form.Label>\n                                    <Form.Control\n                                        id=\"name_jp_romaji\"\n                                        name=\"name_jp_romaji\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_jp_romaji}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Kr</Form.Label>\n                                    <Form.Control\n                                        id=\"name_kr\"\n                                        name=\"name_kr\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_kr}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"description_vi\" title=\"Description Vi\">\n                                <Form.Group>\n                                    <CKEditor\n                                        editor={DecoupledEditor}\n                                        config={editorConfig}\n                                        data={formik.values.description_vi}\n                                        onChange={(event, editor) => {\n                                            formik.setFieldValue('description_vi', editor.getData());\n                                        }}\n                                        onInit={editor => {\n                                            editor.ui.getEditableElement().parentElement.insertBefore(\n                                                editor.ui.view.toolbar.element,\n                                                editor.ui.getEditableElement()\n                                            );\n                                        }}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"description_en\" title=\"Description En\">\n                                <Form.Group>\n                                    <CKEditor\n                                        editor={DecoupledEditor}\n                                        config={editorConfig}\n                                        data={formik.values.description_en}\n                                        onChange={(event, editor) => {\n                                            formik.setFieldValue('description_en', editor.getData());\n                                        }}\n                                        onInit={editor => {\n                                            editor.ui.getEditableElement().parentElement.insertBefore(\n                                                editor.ui.view.toolbar.element,\n                                                editor.ui.getEditableElement()\n                                            );\n                                        }}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"description_jp_kanji\" title=\"Description Jp Kanji\">\n                                <Form.Group>\n                                    <CKEditor\n                                        editor={DecoupledEditor}\n                                        config={editorConfig}\n                                        data={formik.values.description_jp_kanji}\n                                        onChange={(event, editor) => {\n                                            formik.setFieldValue('description_jp_kanji', editor.getData());\n                                        }}\n                                        onInit={editor => {\n                                            editor.ui.getEditableElement().parentElement.insertBefore(\n                                                editor.ui.view.toolbar.element,\n                                                editor.ui.getEditableElement()\n                                            );\n                                        }}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"description_jp_romanji\" title=\"Description Jp Romanji\">\n                                <Form.Group>\n                                    <CKEditor\n                                        editor={DecoupledEditor}\n                                        config={editorConfig}\n                                        data={formik.values.description_jp_romaji}\n                                        onChange={(event, editor) => {\n                                            formik.setFieldValue('description_jp_romaji', editor.getData());\n                                        }}\n                                        onInit={editor => {\n                                            editor.ui.getEditableElement().parentElement.insertBefore(\n                                                editor.ui.view.toolbar.element,\n                                                editor.ui.getEditableElement()\n                                            );\n                                        }}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"description_kr\" title=\"Description Kr\">\n                                <Form.Group>\n                                    <CKEditor\n                                        editor={DecoupledEditor}\n                                        config={editorConfig}\n                                        data={formik.values.description_kr}\n                                        onChange={(event, editor) => {\n                                            formik.setFieldValue('description_kr', editor.getData());\n                                        }}\n                                        onInit={editor => {\n                                            editor.ui.getEditableElement().parentElement.insertBefore(\n                                                editor.ui.view.toolbar.element,\n                                                editor.ui.getEditableElement()\n                                            );\n                                        }}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"image\" title=\"Image\">\n                                { formData.id !== '' ? (\n                                        <Form.Group>\n                                            <Form.Label>Current Image</Form.Label>\n                                            <Form.Text>\n                                                <img src={formData.images.thumbnail} alt=\"Current Image\" />\n                                            </Form.Text>\n                                        </Form.Group>)\n                                    : ''}\n                                <Form.Group>\n                                    <ImageUploader\n                                        singleImage={true}\n                                        withIcon={true}\n                                        buttonText={uploadButtonLabel}\n                                        onChange={onDrop}\n                                        imgExtension={['.jpg', '.png', '.gif']}\n                                        maxFileSize={5242880}\n                                        withPreview={true}\n                                        buttonStyles={buttonStyle}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                        </Tabs>\n                    </div>\n                    <div className=\"box-footer text-center\">\n                        <button type=\"submit\" className=\"btn btn-info\">{lang['layout.button.save']}</button>\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={(event) => {props.history.push(PAGE_SERVICE_LIST)} }>{lang['layout.button.cancel']}</button>\n                    </div>\n                </Form>\n            </FormikProvider>\n        </div>\n    );\n};\nconst mapStateToProps = (state) => ({\n    ...state.serviceReducer,\n    ...state.layoutReducer,\n    ...state\n});\nexport default withRouter(connect(mapStateToProps, {})(ServiceForm));\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/service/action\";\nimport { withRouter } from 'react-router-dom';\nimport ServiceForm from './Form';\nimport notification from \"../../helpers/Notification\";\n\nclass ServiceAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            localImageFile: [],\n            localImageData: [],\n        };\n        this.props.resetFormData();\n    }\n\n    handleImageSelected = (pictureSelected, pictureDataURLs)  => {\n        if (pictureSelected.length > 0) {\n            this.setState({\n                localImageFile: [pictureSelected[pictureSelected.length - 1]],\n                localImageData: [pictureDataURLs[pictureDataURLs.length - 1]]\n            });\n        } else {\n            this.setState({\n                localImageFile: [],\n                localImageData: []\n            });\n        }\n    };\n\n    onSubmit = values => {\n        if (!this.validate(values)) {\n            return;\n        }\n\n        const data = {\n            id: values.id,\n            name: {\n                vi: values.name_vi,\n                en: values.name_en,\n                jp: {\n                    kanji: values.name_jp_kanji,\n                    romaji: values.name_jp_romaji\n                },\n                kr: values.name_kr\n            },\n            description: {\n                vi: values.description_vi,\n                en: values.description_en,\n                jp: {\n                    kanji: values.description_jp_kanji,\n                    romaji: values.description_jp_romaji\n                },\n                kr: values.description_kr\n            },\n            images: {\n                source: values.images_source,\n                thumbnail: values.images_thumbnail,\n            },\n            images_origin: {\n                source: values.images_origin_source,\n                thumbnail: values.images_origin_thumbnail\n            },\n        };\n        //add product\n        this.props.add({\n            data: data,\n            image: this.state.localImageFile[0]\n        });\n    };\n\n    validate(values) {\n        console.log(values);\n\n        let errors = [];\n        if (values.name_vi === '' || values.name_en === '' || values.name_jp_kanji === '' || values.name_jp_romaji === '' || values.name_kr === '') {\n            errors.push('All Name is required');\n        }\n        if (this.state.localImageFile.length === 0) {\n            errors.push('Image is required');\n        }\n\n        if (errors.length > 0) {\n            notification.error(errors);\n            return false;\n        }\n        return true;\n    }\n\n    componentDidMount() {\n        \n    }\n\n    render() {\n\n        let buttonStyle = {};\n        if (this.state.localImageData.length > 0) {\n            buttonStyle = {display: 'none'};\n        }\n\n        return (\n            <ServiceForm\n                submitHandler={this.onSubmit}\n                handleUploadImage={this.handleUploadImage}\n                handleImageSelected={this.handleImageSelected}\n                buttonStyle={buttonStyle}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.serviceReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ServiceAdd));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport actions from \"../../redux/service/action\";\nimport { Link, withRouter } from 'react-router-dom';\nimport { Breadcrumb } from \"react-bootstrap\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport * as PageUrls from '../../configs/PagesUrl';\nimport ServiceAdd from '../../components/Service/Add';\n\nclass ScreensServiceAdd extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_SERVICE_LIST}>\n                            {messages['service.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['service.add.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <ServiceAdd />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensServiceAdd));\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/service/action\";\nimport { withRouter } from 'react-router-dom';\nimport ServiceForm from './Form';\nimport notification from \"../../helpers/Notification\";\n\nclass ServiceEdit extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            localImageFile: [],\n            localImageData: [],\n        };\n        this.props.resetFormData();\n    }\n\n    handleUploadImage = async event => {\n        console.log('upload product image');\n        console.log(event.target.files[0]);\n        // notification.info('Uploading...');\n        // let formData = {\n        //     image: event.target.files[0]\n        // };\n        // await this.props.uploadImage(formData);\n    };\n\n    handleImageSelected = (pictureSelected, pictureDataURLs)  => {\n        if (pictureSelected.length > 0) {\n            this.setState({\n                localImageFile: [pictureSelected[pictureSelected.length - 1]],\n                localImageData: [pictureDataURLs[pictureDataURLs.length - 1]]\n            });\n        } else {\n            this.setState({\n                localImageFile: [],\n                localImageData: []\n            });\n        }\n    };\n\n    onSubmit = values => {\n        if (!this.validate(values)) {\n            return;\n        }\n\n        const data = {\n            id: values.id,\n            name: {\n                vi: values.name_vi,\n                en: values.name_en,\n                jp: {\n                    kanji: values.name_jp_kanji,\n                    romaji: values.name_jp_romaji\n                }\n            },\n            description: {\n                vi: values.description_vi,\n                en: values.description_en,\n                jp: {\n                    kanji: values.description_jp_kanji,\n                    romaji: values.description_jp_romaji\n                }\n            },\n            images: {\n                source: values.images_source,\n                thumbnail: values.images_thumbnail,\n            },\n            images_origin: {\n                source: values.images_origin_source,\n                thumbnail: values.images_origin_thumbnail\n            }\n        };\n        //update product\n        if (this.state.localImageFile.length > 0) {\n            this.props.edit({\n                data: data,\n                image: this.state.localImageFile[0]\n            });\n        } else {\n            this.props.edit({\n                data: data,\n            });\n        }\n    };\n\n    validate = values => {\n\n        if (values.id === '') {\n            notification.error('Record does not exist');\n            return false;\n        }\n\n        let errors = [];\n        if (values.name_vi === '' || values.name_en === '' || values.name_jp_kanji === '' || values.name_jp_romaji === '' || values.name_kr === '') {\n            errors.push('All Name is required');\n        }\n\n        if (errors.length > 0) {\n            notification.error(errors);\n            return false;\n        }\n        return true;\n    };\n\n    componentDidMount() {\n        this.props.getById(this.props.match.params.id);\n    }\n\n    render() {\n\n        let buttonStyle = {};\n        if (this.state.localImageData.length > 0) {\n            buttonStyle = {display: 'none'};\n        }\n\n        return (\n            <ServiceForm\n                submitHandler={this.onSubmit}\n                handleUploadImage={this.handleUploadImage}\n                handleImageSelected={this.handleImageSelected}\n                buttonStyle={buttonStyle}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.serviceReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ServiceEdit));\n","import React from 'react';\nimport {Breadcrumb} from \"react-bootstrap\";\nimport * as PageUrls from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport { withRouter } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/service/action\";\nimport ServiceEdit from \"../../components/Service/Edit\";\n\nclass ScreensServiceEdit extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_SERVICE_LIST}>\n                            {messages['service.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['service.edit.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <ServiceEdit />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensServiceEdit));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport {FieldArray, FormikProvider, useFormik} from 'formik';\nimport Form from \"react-bootstrap/Form\";\nimport {PAGE_SERVICE_LIST} from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../Common/Spinner\";\nimport Button from \"react-bootstrap/Button\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport DecoupledEditor from \"@ckeditor/ckeditor5-build-decoupled-document\";\nimport editorConfig from \"../../services/CKEditorUploadAdapter\";\n\nconst ServiceFormDetails = (props) => {\n    const lang = props.languageSwitcher.languageMessages;\n    const { formData, isDetail } = props;\n\n    let initialValues = {\n        id: formData.id,\n        name_en: formData.name.en,\n        name_vi: formData.name.vi,\n        name_jp_kanji: formData.name.jp.kanji,\n        name_jp_romaji: formData.name.jp.romaji,\n        name_kr: formData.name.kr,\n        description_en: formData.description.en,\n        description_vi: formData.description.vi,\n        description_jp_kanji: formData.description.jp.kanji,\n        description_jp_romaji: formData.description.jp.romaji,\n        description_kr: formData.description.kr,\n        images_source: formData.images.source,\n        images_thumbnail: formData.images.thumbnail,\n        images_origin_source: formData.images_origin.source,\n        images_origin_thumbnail: formData.images_origin.thumbnail,\n    };\n    //convert null value to empty, else formik will not work\n    Object.keys(initialValues).forEach(key => {\n        if (initialValues[key] === undefined || initialValues[key] === null) {\n            initialValues[key] = '';\n        }\n    });\n\n    let formik = useFormik({\n        initialValues: initialValues,\n        enableReinitialize: true,\n        onSubmit: values => {\n            props.submitHandler(values);\n        },\n    });\n\n    return (\n        <div className=\"box box-primary\">\n            <SpinnerComponent show={props.isCallingApi}> </SpinnerComponent>\n            <FormikProvider value={formik}>\n                <Form onSubmit={formik.handleSubmit}>\n                    <div className=\"box-body\">\n                        <Tabs defaultActiveKey=\"home\">\n                            <Tab eventKey=\"home\" title=\"Tên\">\n                                <Form.Group>\n                                    <Form.Label>Vi</Form.Label>\n                                    <Form.Control disabled\n                                                  id=\"name_vi\"\n                                                  name=\"name_vi\"\n                                                  type=\"text\"\n                                                  onChange={formik.handleChange}\n                                                  value={formik.values.name_vi}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>En</Form.Label>\n                                    <Form.Control disabled\n                                                  id=\"name_en\"\n                                                  name=\"name_en\"\n                                                  type=\"text\"\n                                                  onChange={formik.handleChange}\n                                                  value={formik.values.name_en}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Jp Kanji</Form.Label>\n                                    <Form.Control disabled\n                                                  id=\"name_jp_kanji\"\n                                                  name=\"name_jp_kanji\"\n                                                  type=\"text\"\n                                                  onChange={formik.handleChange}\n                                                  value={formik.values.name_jp_kanji}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Jp Romaji</Form.Label>\n                                    <Form.Control disabled\n                                                  id=\"name_jp_romaji\"\n                                                  name=\"name_jp_romaji\"\n                                                  type=\"text\"\n                                                  onChange={formik.handleChange}\n                                                  value={formik.values.name_jp_romaji}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Kr</Form.Label>\n                                    <Form.Control disabled\n                                                  id=\"name_kr\"\n                                                  name=\"name_kr\"\n                                                  type=\"text\"\n                                                  onChange={formik.handleChange}\n                                                  value={formik.values.name_kr}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"description_vi\" title=\"Description Vi\">\n                                <Form.Group>\n                                    <CKEditor disabled\n                                              editor={DecoupledEditor}\n                                              config={editorConfig}\n                                              data={formik.values.description_vi}\n                                              onChange={(event, editor) => {\n                                                  formik.setFieldValue('description_vi', editor.getData());\n                                              }}\n                                              onInit={editor => {\n                                                  editor.ui.getEditableElement().parentElement.insertBefore(\n                                                      editor.ui.view.toolbar.element,\n                                                      editor.ui.getEditableElement()\n                                                  );\n                                              }}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"description_en\" title=\"Description En\">\n                                <Form.Group>\n                                    <CKEditor disabled\n                                              editor={DecoupledEditor}\n                                              config={editorConfig}\n                                              data={formik.values.description_en}\n                                              onChange={(event, editor) => {\n                                                  formik.setFieldValue('description_en', editor.getData());\n                                              }}\n                                              onInit={editor => {\n                                                  editor.ui.getEditableElement().parentElement.insertBefore(\n                                                      editor.ui.view.toolbar.element,\n                                                      editor.ui.getEditableElement()\n                                                  );\n                                              }}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"description_jp_kanji\" title=\"Description Jp Kanji\">\n                                <Form.Group>\n                                    <CKEditor disabled\n                                              editor={DecoupledEditor}\n                                              config={editorConfig}\n                                              data={formik.values.description_jp_kanji}\n                                              onChange={(event, editor) => {\n                                                  formik.setFieldValue('description_jp_kanji', editor.getData());\n                                              }}\n                                              onInit={editor => {\n                                                  editor.ui.getEditableElement().parentElement.insertBefore(\n                                                      editor.ui.view.toolbar.element,\n                                                      editor.ui.getEditableElement()\n                                                  );\n                                              }}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"description_jp_romanji\" title=\"Description Jp Romanji\">\n                                <Form.Group>\n                                    <CKEditor disabled\n                                              editor={DecoupledEditor}\n                                              config={editorConfig}\n                                              data={formik.values.description_jp_romaji}\n                                              onChange={(event, editor) => {\n                                                  formik.setFieldValue('description_jp_romaji', editor.getData());\n                                              }}\n                                              onInit={editor => {\n                                                  editor.ui.getEditableElement().parentElement.insertBefore(\n                                                      editor.ui.view.toolbar.element,\n                                                      editor.ui.getEditableElement()\n                                                  );\n                                              }}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"description_kr\" title=\"Description Kr\">\n                                <Form.Group>\n                                    <CKEditor disabled\n                                              editor={DecoupledEditor}\n                                              config={editorConfig}\n                                              data={formik.values.description_kr}\n                                              onChange={(event, editor) => {\n                                                  formik.setFieldValue('description_kr', editor.getData());\n                                              }}\n                                              onInit={editor => {\n                                                  editor.ui.getEditableElement().parentElement.insertBefore(\n                                                      editor.ui.view.toolbar.element,\n                                                      editor.ui.getEditableElement()\n                                                  );\n                                              }}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"image\" title=\"Image\">\n                                { formData.id !== '' ? (\n                                        <Form.Group>\n                                            <Form.Label>Current Image</Form.Label>\n                                            <Form.Text>\n                                                <img src={formData.images.thumbnail} alt=\"Current Image\" />\n                                            </Form.Text>\n                                        </Form.Group>)\n                                    : ''}\n                            </Tab>\n                        </Tabs>\n                    </div>\n                    <div className=\"box-footer text-center\">\n                        {isDetail === undefined ?\n                            <React.Fragment>\n                                <button type=\"submit\" className=\"btn btn-info\">{lang['layout.button.delete']}</button>\n                                <button type=\"button\" className=\"btn btn-secondary\" onClick={(event) => {props.history.push(PAGE_SERVICE_LIST)} }>{lang['layout.button.cancel']}</button>\n                            </React.Fragment>\n                            :\n                            <React.Fragment>\n                                <button type=\"button\" className=\"btn btn-secondary\" onClick={(event) => {props.history.push(PAGE_SERVICE_LIST)} }>{lang['layout.button.back']}</button>\n                            </React.Fragment>\n                        }\n                    </div>\n                </Form>\n            </FormikProvider>\n        </div>\n    );\n};\nconst mapStateToProps = (state) => ({\n    ...state.serviceReducer,\n    ...state.layoutReducer,\n    ...state\n});\nexport default withRouter(connect(mapStateToProps, {})(ServiceFormDetails));\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/service/action\";\nimport { withRouter } from 'react-router-dom';\nimport ServiceFormDetails from './FormDetails';\n\nclass ServiceDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.resetFormData();\n    }\n\n    componentDidMount() {\n        this.props.getById(this.props.match.params.id);\n    }\n\n    render() {\n\n        const lang = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <React.Fragment>\n                <ServiceFormDetails\n                    submitHandler={this.onSubmit}\n                    isDetail={true}\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.roomReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ServiceDetails));\n","import React from 'react';\nimport {Breadcrumb} from \"react-bootstrap\";\nimport * as PageUrls from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport { withRouter } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/service/action\";\nimport ServiceDetail from \"../../components/Service/Detail\";\n\nclass ScreensServiceDetail extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_SERVICE_LIST}>\n                            {messages['service.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['service.details.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <ServiceDetail />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensServiceDetail));\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/service/action\";\nimport { withRouter } from 'react-router-dom';\nimport ServiceFormDetails from './FormDetails';\n\nclass ServiceDelete extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.resetFormData();\n    }\n\n    onSubmit = values => {\n        this.props.delete(values.id);\n    };\n\n    componentDidMount() {\n        this.props.getById(this.props.match.params.id);\n    }\n\n    render() {\n\n        const lang = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <React.Fragment>\n            <p>{lang['message.confirmDelete']}</p>\n            <ServiceFormDetails\n                submitHandler={this.onSubmit}\n            />\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.roomReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ServiceDelete));\n","import React from 'react';\nimport {Breadcrumb} from \"react-bootstrap\";\nimport * as PageUrls from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport { withRouter } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/service/action\";\nimport ServiceDelete from \"../../components/Service/Delete\";\n\nclass ScreensServiceDelete extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_SERVICE_LIST}>\n                            {messages['service.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['service.delete.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <ServiceDelete />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensServiceDelete));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Modal } from 'react-bootstrap';\nimport actions from '../../../redux/room/action';\n\nclass Filter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleApplyFilterButton = this.applyFilter.bind(this);\n        this.handleDiscardsFilterButton = this.discardFilter.bind(this);\n        this.changeSearchText = this.changeSearchTextFunc.bind(this);\n\n        //need same param name in reducer.filter which we want override\n        this.state = {\n            ...this.props.filter\n        };\n    }\n    applyFilter() {\n        //simple clone value of state pass back to parent callback\n        this.props.onApplyFilter({...this.state});\n    }\n    discardFilter() {\n        //discard meaning reset all state params\n        this.setState({ s: ''}, () => {\n            //simple clone value of state pass back to parent callback\n            this.props.onApplyFilter({...this.state});\n        })\n    }\n    changeSearchTextFunc(e) {\n        this.setState({ s: e.target.value});\n    }\n    componentDidMount() {\n\n    }\n\n    render() {\n\n        const lang = this.props.languageSwitcher.languageMessages;\n        const { listGroup } = this.props;\n\n        return (\n            <Modal\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                show={this.props.show}\n                onHide={this.props.closePopup}\n                className=\"popup_inner popup_inner_filter\"\n            >\n                <Modal.Header closeButton className=\"box-header-filter\">\n                    <Modal.Title id=\"contained-modal-title-vcenter\" className=\"box-title-filter\">\n                        {lang['layout.title.filterList']}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form className=\"form-horizontal\">\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"user\" className=\"col-md-3 control-label\">Search by name or description</label>\n                            <div className=\"col-md-9\">\n                                <input type=\"text\" className=\"form-control\"\n                                       value={this.state.s}\n                                       onChange={this.changeSearchText}\n                                       id=\"s\" name=\"s\" placeholder=\"Enter any chars to search\" />\n                            </div>\n                        </div>\n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={this.handleDiscardsFilterButton} >\n                        <i className=\"fa fa-times mr-1\"> </i>\n                        {lang['layout.button.discardFilter']}\n                    </button>\n                    <button type=\"button\" className=\"btn btn-primary ml-1\" onClick={this.handleApplyFilterButton} >\n                        <i className=\"fa fa-check mr-1\"> </i>\n                        {lang['layout.button.applyFilter']}\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n}\nconst mapStateToProps = (state) => ({\n    ...state.promotionReducer,\n    ...state,\n});\n\nexport default connect(mapStateToProps, actions)(Filter);\n","import React from 'react';\nimport * as PagesUrl from '../../configs/PagesUrl';\nimport {Link} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport actions from '../../redux/promotion/action';\nimport {withRouter} from 'react-router-dom';\nimport Paginator from \"../../common/Paginator\";\nimport Filter from \"./Popup/Filter\";\nimport {Table} from 'react-bootstrap';\nimport { toVND } from \"../../helpers/Ultis\";\nimport SpinnerComponent from \"../Common/Spinner\";\nimport siteConfig from \"../../configs/siteConfig\";\nimport moment from \"moment\";\n\nclass RoomList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showPopupFilter: false,\n        };\n        this.onChangePageNumber = this.handlePaging.bind(this);\n        this.onChangeItemPerPage = this.handleItemPerPage.bind(this);\n        this.onApplyFilter = this.handleFilter.bind(this);\n    }\n\n    togglePopupFilter() {\n        this.setState({\n            showPopupFilter: !this.state.showPopupFilter\n        });\n    }\n\n    componentDidMount() {\n        this.props.getList({\n            ...this.props.filter\n        });\n    }\n\n    async handlePaging(pageNumber) {\n        //update filter first, so paging number can changed\n        await this.props.updateFilter({\n            ...this.props.filter,\n            page: pageNumber\n        });\n        await this.getList();\n    }\n\n    async handleItemPerPage(itemPerPage) {\n        //update filter first, so paging number can changed\n        //change item per page must reset page to 1\n        await this.props.updateFilter({\n            ...this.props.filter,\n            per_page: itemPerPage,\n            page: 1\n        });\n        await this.getList();\n    }\n\n    async handleFilter(params) {\n        this.setState({showPopupFilter: false}, async () => {\n            //update filter first, so paging number can changed\n            //change item per page must reset page to 1\n            await this.props.updateFilter({\n                ...this.props.filter,\n                ...params,\n                page: 1\n            });\n            await this.getList();\n        });\n    }\n\n    getList() {\n        this.props.getList(this.props.filter);\n    }\n\n    renderList(listData) {\n        if (listData === undefined || listData.items === undefined) return;\n\n        return listData.items.map((row) => {\n            return (\n                <tr key={row.id}>\n                    <td>{row.name.en}</td>\n                    <td>{row.name.vi}</td>\n                    <td>{row.name.jp.kanji}</td>\n                    <td>{row.name.jp.romaji}</td>\n                    <td>{row.name.kr}</td>\n                    <td>{moment(row.start_date).format(siteConfig.dateTimeFormat)}</td>\n                    <td>{moment(row.end_date).format(siteConfig.dateTimeFormat)}</td>\n                    <td>{row.status === 1 ? 'Active' : 'Inactive'}</td>\n                    <td style={{width: '200px', textAlign: 'center'}}>\n                        <img style={{width: '100%'}} src={row.image}  alt={row.name.vi}/>\n                    </td>\n                    <td className=\"text-nowrap text-center\">\n                        <span className=\"action-link\">\n                            <Link to={PagesUrl.PAGE_PROMOTION_DETAIL + '/' + row.id} className=\"btn btn-sm btn-info\">\n                                <i className=\"fa fa-eye\"> </i>\n                            </Link>\n                        </span>\n                        <span className=\"action-link ml-1\">\n                            <Link to={PagesUrl.PAGE_PROMOTION_EDIT + '/' + row.id} className=\"btn btn-sm btn-success\">\n                                <i className=\"fa fa-pencil\"> </i>\n                            </Link>\n                        </span>\n                        <span className=\"action-link ml-1\">\n                            <Link to={PagesUrl.PAGE_PROMOTION_DELETE + '/' + row.id} className=\"btn btn-sm btn-danger\">\n                                <i className=\"fa fa-trash\"> </i>\n                            </Link>\n                        </span>\n                    </td>\n                </tr>\n            );\n        });\n    }\n\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <React.Fragment>\n                <div className=\"box\">\n                    <div className=\"box-header with-border\">\n                        <div className=\"float-md-right mt-2 mt-md-0\">\n                            <button type=\"button\" className=\"btn btn-secondary btn-sm ml-1\"\n                                    >Export\n                            </button>\n                            <Link to={PagesUrl.PAGE_PROMOTION_ADD}>\n                                <button type=\"button\"\n                                        className=\"btn btn-primary btn-sm ml-1\">{messages['layout.button.register']}</button>\n                            </Link>\n                        </div>\n                    </div>\n                    <div className=\"box-body\">\n                        <div className=\"datatable_container\">\n                            <Paginator\n                                total={this.props.listData.total}\n                                itemPerPage={this.props.filter.per_page}\n                                currentPage={this.props.filter.page}\n                                onChangePageNumber={this.onChangePageNumber}\n                                onChangeItemPerPage={this.onChangeItemPerPage}\n                                onTogglePopupFilter={this.togglePopupFilter.bind(this)}\n                                filterData={this.props.filter}\n                            />\n                            <div className=\"row m-0 my-2\">\n                                <div className=\"col-sm-12 p-0\">\n                                    <Table bordered hover responsive size=\"sm\" className=\"table-custom mb-0\">\n                                        <thead>\n                                        <tr>\n                                            <th colSpan={5}>Title</th>\n                                            <th>Start date</th>\n                                            <th>End date</th>\n                                            <th>Status</th>\n                                            <th>Image</th>\n                                            <th style={{ width: '100px' }} rowSpan={2}>{messages['layout.column.action']}</th>\n                                        </tr>\n                                        <tr>\n                                            <th>En</th>\n                                            <th>Vi</th>\n                                            <th>Jp - Kanji</th>\n                                            <th>Jp - Romanji</th>\n                                            <th>Kr</th>\n                                            <th></th>\n                                            <th></th>\n                                            <th></th>\n                                            <th></th>\n                                        </tr>\n                                        </thead>\n                                        <tbody>\n                                        {this.renderList(this.props.listData)}\n                                        </tbody>\n                                    </Table>\n                                </div>\n                            </div>\n                            <div className=\"block-paging-bottom\">\n                                <Paginator\n                                    total={this.props.listData.total}\n                                    itemPerPage={this.props.filter.per_page}\n                                    currentPage={this.props.filter.page}\n                                    onChangePageNumber={this.onChangePageNumber}\n                                    onChangeItemPerPage={this.onChangeItemPerPage}\n                                    filterData={this.props.filter}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    {this.state.showPopupFilter ?\n                        <Filter\n                            show={this.state.showPopupFilter}\n                            closePopup={this.togglePopupFilter.bind(this)}\n                            onApplyFilter={this.onApplyFilter}\n                        />\n                        : null\n                    }\n                </div>\n                <SpinnerComponent show={props.isCallingApi}> </SpinnerComponent>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.promotionReducer,\n    ...state.layoutReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(RoomList));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport PromotionList from '../../components/Promotion/List';\nimport { withRouter } from 'react-router-dom';\n\nclass ScreensPromotionList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <h1>\n                        {messages['promotion.title']}\n                    </h1>\n                </section>\n                <section className=\"content\">\n                    <div className=\"row m-0\">\n                        <div className=\"col-12 p-0\">\n                            <PromotionList />\n                        </div>\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, {})(ScreensPromotionList));","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {withRouter} from 'react-router-dom';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport {useFormik} from 'formik';\nimport Form from \"react-bootstrap/Form\";\nimport ImageUploader from 'react-images-upload';\nimport {PAGE_PROMOTION_LIST} from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../Common/Spinner\";\nimport Button from \"react-bootstrap/Button\";\nimport {Field, FormikProvider} from \"formik\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport CKEditor from '@ckeditor/ckeditor5-react';\n// import ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport DecoupledEditor from '@ckeditor/ckeditor5-build-decoupled-document';\nimport editorConfig from \"../../services/CKEditorUploadAdapter\";\nimport moment from \"moment\";\nimport siteConfig from \"../../configs/siteConfig\";\nimport {DatePicker} from \"antd\";\nimport {SingleDatePicker, DateRangePicker} from 'react-dates';\nimport DatePickerWithFormik from \"../../common/DatePickerWithFormmik\";\n\n\nconst PromotionFormDetails = (props) => {\n    const lang = props.languageSwitcher.languageMessages;\n    const {formData, isDetail, listRoom} = props;\n\n    let startDate = null;\n    if (formData.start_date != null && formData.start_date !== '') {\n        startDate = moment(formData.start_date).format(siteConfig.dateTimeFormat);\n        startDate = moment(startDate);\n    }\n\n    let endDate = null;\n    if (formData.end_date != null && formData.end_date !== '') {\n        endDate = moment(formData.end_date).format(siteConfig.dateTimeFormat);\n        endDate = moment(endDate);\n    }\n\n\n    let initialValues = {\n        id: formData.id,\n        name_en: formData.name.en,\n        name_vi: formData.name.vi,\n        name_jp_kanji: formData.name.jp.kanji,\n        name_jp_romaji: formData.name.jp.romaji,\n        name_kr: formData.name.kr,\n        short_description_en: formData.short_description.en,\n        short_description_vi: formData.short_description.vi,\n        short_description_jp_kanji: formData.short_description.jp.kanji,\n        short_description_jp_romaji: formData.short_description.jp.romaji,\n        description_en: formData.description.en,\n        description_vi: formData.description.vi,\n        description_jp_kanji: formData.description.jp.kanji,\n        description_jp_romaji: formData.description.jp.romaji,\n        description_kr: formData.description.kr,\n        start_date: startDate,\n        end_date: endDate,\n        status: formData.status,\n        image: formData.image,\n        room_id: formData.room_id\n    };\n\n    //convert null value to empty, else formik will not work\n    Object.keys(initialValues).forEach(key => {\n        if (initialValues[key] === undefined || (key !== 'start_date' && key !== 'end_date' && initialValues[key] === null)) {\n            initialValues[key] = '';\n        }\n    });\n\n    let formik = useFormik({\n        initialValues: initialValues,\n        enableReinitialize: true,\n        onSubmit: values => {\n            props.submitHandler(values);\n        },\n    });\n\n    return (\n        <div className=\"box box-primary\">\n            <SpinnerComponent show={props.isCallingApi}> </SpinnerComponent>\n            <FormikProvider value={formik}>\n                <Form onSubmit={formik.handleSubmit}>\n                    <div className=\"box-body\">\n                        <Tabs defaultActiveKey=\"general\">\n                            <Tab eventKey=\"general\" title=\"General\">\n                                <Form.Group>\n                                    <Form.Label>Room</Form.Label>\n                                    <Form.Control as=\"select\" disabled\n                                                  id=\"room_id\"\n                                                  name=\"room_id\"\n                                                  onChange={formik.handleChange}\n                                                  value={formik.values.room_id}>\n                                        <option value=\"0\">{lang['common.select.default']}</option>\n                                        {listRoom.map(d => (\n                                            <option key={d.id} value={d.id}>{d.name.vi} | {d.name.en} | {d.name.jp.kanji} | {d.name.jp.romaji} | {d.name.kr} </option>\n                                        ))}\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group>\n                                    <Field disabled\n                                        component={DatePickerWithFormik}\n                                        required\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Status</Form.Label>\n                                    <Form.Group>\n                                        <Form.Check inline label=\"Active\" type=\"radio\" name=\"status\"\n                                                    checked={parseInt(formik.values.status) === 1}\n                                                    onChange={formik.handleChange}\n                                                    value=\"1\" disabled />\n                                        <Form.Check inline label=\"Inactive\" type=\"radio\" name=\"status\"\n                                                    checked={parseInt(formik.values.status) === 0}\n                                                    onChange={formik.handleChange}\n                                                    value=\"0\" disabled />\n                                    </Form.Group>\n                                </Form.Group>\n                                {formData.id !== '' ? (\n                                        <Form.Group>\n                                            <Form.Label>Current Image</Form.Label>\n                                            <Form.Text>\n                                                <img style={{width:'400px'}} src={formData.image} alt=\"Current Image\"/>\n                                            </Form.Text>\n                                        </Form.Group>)\n                                    : ''}\n                            </Tab>\n                            <Tab eventKey=\"home\" title=\"Title\">\n                                <Form.Group>\n                                    <Form.Label>Vi</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"name_vi\"\n                                        name=\"name_vi\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_vi}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>En</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"name_en\"\n                                        name=\"name_en\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_en}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Jp Kanji</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"name_jp_kanji\"\n                                        name=\"name_jp_kanji\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_jp_kanji}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Jp Romaji</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"name_jp_romaji\"\n                                        name=\"name_jp_romaji\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_jp_romaji}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Kr</Form.Label>\n                                    <Form.Control disabled\n                                                  id=\"name_kr\"\n                                                  name=\"name_kr\"\n                                                  type=\"text\"\n                                                  onChange={formik.handleChange}\n                                                  value={formik.values.name_kr}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"short_desc\" title=\"Short Description\">\n                                <Form.Group>\n                                    <Form.Label>Vi</Form.Label>\n                                    <Form.Control disabled\n                                                  id=\" short_description_vi\"\n                                                  name=\"short_description_vi\"\n                                                  type=\"text\"\n                                                  onChange={formik.handleChange}\n                                                  value={formik.values.short_description_vi}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>En</Form.Label>\n                                    <Form.Control disabled\n                                                  id=\"short_description_en\"\n                                                  name=\"short_description_en\"\n                                                  type=\"text\"\n                                                  onChange={formik.handleChange}\n                                                  value={formik.values.short_description_en}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Jp Kanji</Form.Label>\n                                    <Form.Control disabled\n                                                  id=\"short_description_jp_kanji\"\n                                                  name=\"short_description_jp_kanji\"\n                                                  type=\"text\"\n                                                  onChange={formik.handleChange}\n                                                  value={formik.values.short_description_jp_kanji}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Jp Romaji</Form.Label>\n                                    <Form.Control disabled\n                                                  id=\"short_description_jp_romaji\"\n                                                  name=\"short_description_jp_romaji\"\n                                                  type=\"text\"\n                                                  onChange={formik.handleChange}\n                                                  value={formik.values.short_description_jp_romaji}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Kr</Form.Label>\n                                    <Form.Control disabled\n                                                  id=\"short_description_kr\"\n                                                  name=\"short_description_kr\"\n                                                  type=\"text\"\n                                                  onChange={formik.handleChange}\n                                                  value={formik.values.short_description_kr}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"description_vi\" title=\"Description Vi\">\n                                <Form.Group>\n                                    <CKEditor disabled\n                                        editor={DecoupledEditor}\n                                        config={editorConfig}\n                                        data={formik.values.description_vi}\n                                        onChange={(event, editor) => {\n                                            formik.setFieldValue('description_vi', editor.getData());\n                                        }}\n                                        onInit={editor => {\n                                            editor.ui.getEditableElement().parentElement.insertBefore(\n                                                editor.ui.view.toolbar.element,\n                                                editor.ui.getEditableElement()\n                                            );\n                                        }}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"description_en\" title=\"Description En\">\n                                <Form.Group>\n                                    <CKEditor disabled\n                                        editor={DecoupledEditor}\n                                        config={editorConfig}\n                                        data={formik.values.description_en}\n                                        onChange={(event, editor) => {\n                                            formik.setFieldValue('description_en', editor.getData());\n                                        }}\n                                        onInit={editor => {\n                                            editor.ui.getEditableElement().parentElement.insertBefore(\n                                                editor.ui.view.toolbar.element,\n                                                editor.ui.getEditableElement()\n                                            );\n                                        }}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"description_jp_kanji\" title=\"Description Jp Kanji\">\n                                <Form.Group>\n                                    <CKEditor disabled\n                                        editor={DecoupledEditor}\n                                        config={editorConfig}\n                                        data={formik.values.description_jp_kanji}\n                                        onChange={(event, editor) => {\n                                            formik.setFieldValue('description_jp_kanji', editor.getData());\n                                        }}\n                                        onInit={editor => {\n                                            editor.ui.getEditableElement().parentElement.insertBefore(\n                                                editor.ui.view.toolbar.element,\n                                                editor.ui.getEditableElement()\n                                            );\n                                        }}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"description_jp_romanji\" title=\"Description Jp Romanji\">\n                                <Form.Group>\n                                    <CKEditor disabled\n                                        editor={DecoupledEditor}\n                                        config={editorConfig}\n                                        data={formik.values.description_jp_romaji}\n                                        onChange={(event, editor) => {\n                                            formik.setFieldValue('description_jp_romaji', editor.getData());\n                                        }}\n                                        onInit={editor => {\n                                            editor.ui.getEditableElement().parentElement.insertBefore(\n                                                editor.ui.view.toolbar.element,\n                                                editor.ui.getEditableElement()\n                                            );\n                                        }}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"description_kr\" title=\"Description kr\">\n                                <Form.Group>\n                                    <CKEditor disabled\n                                        editor={DecoupledEditor}\n                                        config={editorConfig}\n                                        data={formik.values.description_kr}\n                                        onChange={(event, editor) => {\n                                            formik.setFieldValue('description_kr', editor.getData());\n                                        }}\n                                        onInit={editor => {\n                                            editor.ui.getEditableElement().parentElement.insertBefore(\n                                                editor.ui.view.toolbar.element,\n                                                editor.ui.getEditableElement()\n                                            );\n                                        }}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                        </Tabs>\n                    </div>\n                    <div className=\"box-footer text-center\">\n                        {isDetail === undefined ?\n                            <React.Fragment>\n                                <button type=\"submit\" className=\"btn btn-info\">{lang['layout.button.delete']}</button>\n                                <button type=\"button\" className=\"btn btn-secondary\" onClick={(event) => {props.history.push(PAGE_PROMOTION_LIST)} }>{lang['layout.button.cancel']}</button>\n                            </React.Fragment>\n                            :\n                            <React.Fragment>\n                                <button type=\"button\" className=\"btn btn-secondary\" onClick={(event) => {props.history.push(PAGE_PROMOTION_LIST)} }>{lang['layout.button.back']}</button>\n                            </React.Fragment>\n                        }\n                    </div>\n                </Form>\n            </FormikProvider>\n        </div>\n    );\n};\nconst mapStateToProps = (state) => ({\n    ...state.promotionReducer,\n    ...state.layoutReducer,\n    ...state\n});\nexport default withRouter(connect(mapStateToProps, {})(PromotionFormDetails));\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/promotion/action\";\nimport { withRouter } from 'react-router-dom';\nimport PromotionFormDetails from './FormDetails';\n\nclass PromotionDetail extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.resetFormData();\n    }\n\n    componentDidMount() {\n        this.props.getListRoom();\n        this.props.getById(this.props.match.params.promotionId);\n    }\n\n    render() {\n\n        const lang = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <React.Fragment>\n                <PromotionFormDetails\n                    submitHandler={this.onSubmit}\n                    isDetail={true}\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.promotionReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(PromotionDetail));\n","import React from 'react';\nimport {Breadcrumb} from \"react-bootstrap\";\nimport * as PageUrls from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport { withRouter } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/promotion/action\";\nimport PromotionDetail from \"../../components/Promotion/Detail\";\n\nclass ScreensPromotionDetail extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_PROMOTION_LIST}>\n                            {messages['promotion.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['promotion.details.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <PromotionDetail />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensPromotionDetail));\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {withRouter} from 'react-router-dom';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport {useFormik} from 'formik';\nimport Form from \"react-bootstrap/Form\";\nimport ImageUploader from 'react-images-upload';\nimport {PAGE_PROMOTION_LIST} from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../Common/Spinner\";\nimport Button from \"react-bootstrap/Button\";\nimport {Field, FormikProvider} from \"formik\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport CKEditor from '@ckeditor/ckeditor5-react';\n// import ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport DecoupledEditor from '@ckeditor/ckeditor5-build-decoupled-document';\nimport editorConfig from \"../../services/CKEditorUploadAdapter\";\nimport moment from \"moment\";\nimport siteConfig from \"../../configs/siteConfig\";\nimport {DatePicker} from \"antd\";\nimport {SingleDatePicker, DateRangePicker} from 'react-dates';\nimport DatePickerWithFormik from \"../../common/DatePickerWithFormmik\";\nimport CKFinder from '@ckeditor/ckeditor5-build-decoupled-document';\n\n\nconst PromotionForm = (props) => {\n    const lang = props.languageSwitcher.languageMessages;\n    const {buttonStyle, formData, listRoom} = props;\n\n    let startDate = null;\n    if (formData.start_date != null && formData.start_date !== '') {\n        startDate = moment(formData.start_date).format(siteConfig.dateTimeFormat);\n        startDate = moment(startDate);\n    }\n\n    let endDate = null;\n    if (formData.end_date != null && formData.end_date !== '') {\n        endDate = moment(formData.end_date).format(siteConfig.dateTimeFormat);\n        endDate = moment(endDate);\n    }\n\n\n    let initialValues = {\n        id: formData.id,\n        name_en: formData.name.en,\n        name_vi: formData.name.vi,\n        name_jp_kanji: formData.name.jp.kanji,\n        name_jp_romaji: formData.name.jp.romaji,\n        name_kr: formData.name.kr,\n        short_description_en: formData.short_description.en,\n        short_description_vi: formData.short_description.vi,\n        short_description_jp_kanji: formData.short_description.jp.kanji,\n        short_description_jp_romaji: formData.short_description.jp.romaji,\n        short_description_kr: formData.short_description.kr,\n        description_en: formData.description.en,\n        description_vi: formData.description.vi,\n        description_jp_kanji: formData.description.jp.kanji,\n        description_jp_romaji: formData.description.jp.romaji,\n        description_kr: formData.description.kr,\n        start_date: startDate,\n        end_date: endDate,\n        status: formData.status,\n        image: formData.image,\n        image_origin: formData.image_origin,\n        room_id: formData.room_id\n    };\n\n    //convert null value to empty, else formik will not work\n    Object.keys(initialValues).forEach(key => {\n        if (initialValues[key] === undefined || (key !== 'start_date' && key !== 'end_date' && initialValues[key] === null)) {\n            initialValues[key] = '';\n        }\n    });\n\n    let formik = useFormik({\n        initialValues: initialValues,\n        enableReinitialize: true,\n        onSubmit: values => {\n            props.submitHandler(values);\n        },\n    });\n\n    const onDrop = (pictureSelected, pictureDataURLs) => {\n        props.handleImageSelected(pictureSelected, pictureDataURLs);\n    };\n\n    const uploadButtonLabel = (formData.id !== undefined && formData.id !== '') ?\n        'Choose new image to replace current one' : 'Choose image';\n\n    return (\n        <div className=\"box box-primary\">\n            <SpinnerComponent show={props.isCallingApi}> </SpinnerComponent>\n            <FormikProvider value={formik}>\n                <Form onSubmit={formik.handleSubmit}>\n                    <div className=\"box-body\">\n                        <Tabs defaultActiveKey=\"general\">\n                            <Tab eventKey=\"general\" title=\"General\">\n                                <Form.Group>\n                                    <Form.Label>Room</Form.Label>\n                                    <Form.Control as=\"select\"\n                                                  id=\"room_id\"\n                                                  name=\"room_id\"\n                                                  onChange={formik.handleChange}\n                                                  value={formik.values.room_id}>\n                                        <option value=\"0\">{lang['common.select.default']}</option>\n                                        {listRoom.map(d => (\n                                            <option key={d.id} value={d.id}>{d.name.vi} | {d.name.en} | {d.name.jp.kanji} | {d.name.jp.romaji} | {d.name.kr} </option>\n                                        ))}\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group>\n                                    <Field\n                                        component={DatePickerWithFormik}\n                                        required\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Status</Form.Label>\n                                    <Form.Group>\n                                        <Form.Check inline label=\"Active\" type=\"radio\" name=\"status\"\n                                                    checked={parseInt(formik.values.status) === 1}\n                                                    onChange={formik.handleChange}\n                                                    value=\"1\"/>\n                                        <Form.Check inline label=\"Inactive\" type=\"radio\" name=\"status\"\n                                                    checked={parseInt(formik.values.status) === 0}\n                                                    onChange={formik.handleChange}\n                                                    value=\"0\" />\n                                    </Form.Group>\n                                </Form.Group>\n                                {formData.id !== '' ? (\n                                        <Form.Group>\n                                            <Form.Label>Current Image</Form.Label>\n                                            <Form.Text>\n                                                <img style={{width:'400px'}} src={formData.image} alt=\"Current Image\"/>\n                                            </Form.Text>\n                                        </Form.Group>)\n                                    : ''}\n                                <Form.Group>\n                                    <Form.Label> Image *</Form.Label>\n                                    <ImageUploader\n                                        singleImage={true}\n                                        withIcon={true}\n                                        buttonText={uploadButtonLabel}\n                                        onChange={onDrop}\n                                        imgExtension={['.jpg', '.png', '.gif']}\n                                        maxFileSize={5242880}\n                                        withPreview={true}\n                                        buttonStyles={buttonStyle}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"home\" title=\"Title\">\n                                <Form.Group>\n                                    <Form.Label>Vi</Form.Label>\n                                    <Form.Control\n                                        id=\"name_vi\"\n                                        name=\"name_vi\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_vi}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>En</Form.Label>\n                                    <Form.Control\n                                        id=\"name_en\"\n                                        name=\"name_en\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_en}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Jp Kanji</Form.Label>\n                                    <Form.Control\n                                        id=\"name_jp_kanji\"\n                                        name=\"name_jp_kanji\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_jp_kanji}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Jp Romaji</Form.Label>\n                                    <Form.Control\n                                        id=\"name_jp_romaji\"\n                                        name=\"name_jp_romaji\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_jp_romaji}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Kr</Form.Label>\n                                    <Form.Control\n                                        id=\"name_kr\"\n                                        name=\"name_kr\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_kr}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"short_desc\" title=\"Short Description\">\n                                <Form.Group>\n                                    <Form.Label>Vi</Form.Label>\n                                    <Form.Control\n                                        id=\" short_description_vi\"\n                                        name=\"short_description_vi\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.short_description_vi}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>En</Form.Label>\n                                    <Form.Control\n                                        id=\"short_description_en\"\n                                        name=\"short_description_en\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.short_description_en}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Jp Kanji</Form.Label>\n                                    <Form.Control\n                                        id=\"short_description_jp_kanji\"\n                                        name=\"short_description_jp_kanji\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.short_description_jp_kanji}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Jp Romaji</Form.Label>\n                                    <Form.Control\n                                        id=\"short_description_jp_romaji\"\n                                        name=\"short_description_jp_romaji\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.short_description_jp_romaji}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Kr</Form.Label>\n                                    <Form.Control\n                                        id=\" short_description_kr\"\n                                        name=\"short_description_kr\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.short_description_kr}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"description_vi\" title=\"Description Vi\">\n                                <Form.Group>\n                                    <CKEditor\n                                        editor={DecoupledEditor}\n                                        config={editorConfig}\n                                        data={formik.values.description_vi}\n                                        onChange={(event, editor) => {\n                                            formik.setFieldValue('description_vi', editor.getData());\n                                        }}\n                                        onInit={editor => {\n                                            editor.ui.getEditableElement().parentElement.insertBefore(\n                                                editor.ui.view.toolbar.element,\n                                                editor.ui.getEditableElement()\n                                            );\n                                        }}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"description_en\" title=\"Description En\">\n                                <Form.Group>\n                                    <CKEditor\n                                        editor={DecoupledEditor}\n                                        config={editorConfig}\n                                        data={formik.values.description_en}\n                                        onChange={(event, editor) => {\n                                            formik.setFieldValue('description_en', editor.getData());\n                                        }}\n                                        onInit={editor => {\n                                            editor.ui.getEditableElement().parentElement.insertBefore(\n                                                editor.ui.view.toolbar.element,\n                                                editor.ui.getEditableElement()\n                                            );\n                                        }}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"description_jp_kanji\" title=\"Description Jp Kanji\">\n                                <Form.Group>\n                                    <CKEditor\n                                        editor={DecoupledEditor}\n                                        config={editorConfig}\n                                        data={formik.values.description_jp_kanji}\n                                        onChange={(event, editor) => {\n                                            formik.setFieldValue('description_jp_kanji', editor.getData());\n                                        }}\n                                        onInit={editor => {\n                                            editor.ui.getEditableElement().parentElement.insertBefore(\n                                                editor.ui.view.toolbar.element,\n                                                editor.ui.getEditableElement()\n                                            );\n                                        }}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"description_jp_romanji\" title=\"Description Jp Romanji\">\n                                <Form.Group>\n                                    <CKEditor\n                                        editor={DecoupledEditor}\n                                        config={editorConfig}\n                                        data={formik.values.description_jp_romaji}\n                                        onChange={(event, editor) => {\n                                            formik.setFieldValue('description_jp_romaji', editor.getData());\n                                        }}\n                                        onInit={editor => {\n                                            editor.ui.getEditableElement().parentElement.insertBefore(\n                                                editor.ui.view.toolbar.element,\n                                                editor.ui.getEditableElement()\n                                            );\n                                        }}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"description_kr\" title=\"Description kr\">\n                                <Form.Group>\n                                    <CKEditor\n                                        editor={DecoupledEditor}\n                                        config={editorConfig}\n                                        data={formik.values.description_kr}\n                                        onChange={(event, editor) => {\n                                            formik.setFieldValue('description_kr', editor.getData());\n                                        }}\n                                        onInit={editor => {\n                                            editor.ui.getEditableElement().parentElement.insertBefore(\n                                                editor.ui.view.toolbar.element,\n                                                editor.ui.getEditableElement()\n                                            );\n                                        }}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                        </Tabs>\n                    </div>\n                    <div className=\"box-footer text-center\">\n                        <button type=\"submit\" className=\"btn btn-info\">{lang['layout.button.save']}</button>\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={(event) => {\n                            props.history.push(PAGE_PROMOTION_LIST)\n                        }}>{lang['layout.button.cancel']}</button>\n                    </div>\n                </Form>\n            </FormikProvider>\n        </div>\n    );\n};\nconst mapStateToProps = (state) => ({\n    ...state.promotionReducer,\n    ...state.layoutReducer,\n    ...state\n});\nexport default withRouter(connect(mapStateToProps, {})(PromotionForm));\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/promotion/action\";\nimport { withRouter } from 'react-router-dom';\nimport PromotionForm from './Form';\nimport notification from \"../../helpers/Notification\";\nimport PageForm from \"../Page/Form\";\n\nclass PromotionAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            localImageFile: [],\n            localImageData: [],\n        };\n        this.props.resetFormData();\n    }\n\n    handleImageSelected = (pictureSelected, pictureDataURLs)  => {\n        if (pictureSelected.length > 0) {\n            this.setState({\n                localImageFile: [pictureSelected[pictureSelected.length - 1]],\n                localImageData: [pictureDataURLs[pictureDataURLs.length - 1]]\n            });\n        } else {\n            this.setState({\n                localImageFile: [],\n                localImageData: []\n            });\n        }\n    };\n\n    onSubmit = values => {\n        if (!this.validate(values)) {\n            return;\n        }\n\n        const data = {\n            id: values.id,\n            name: {\n                vi: values.name_vi,\n                en: values.name_en,\n                jp: {\n                    kanji: values.name_jp_kanji,\n                    romaji: values.name_jp_romaji\n                },\n                kr: values.name_kr\n            },\n            short_description: {\n                vi: values.short_description_vi,\n                en: values.short_description_en,\n                jp: {\n                    kanji: values.short_description_jp_kanji,\n                    romaji: values.short_description_jp_romaji\n                },\n                kr: values.short_description_kr\n            },\n            description: {\n                vi: values.description_vi,\n                en: values.description_en,\n                jp: {\n                    kanji: values.description_jp_kanji,\n                    romaji: values.description_jp_romaji\n                },\n                kr: values.description_kr\n            },\n            start_date: values.start_date,\n            end_date: values.end_date,\n            status: values.status,\n            image: values.image,\n            image_origin: values.image_origin,\n            room_id: values.room_id,\n        };\n        //add promotion\n        this.props.add({\n            data: data,\n            image: this.state.localImageFile[0]\n        });\n    };\n\n    validate(values) {\n\n        let errors = [];\n        // if (values.room_id === '' || values.room_id === 0) {\n        //     errors.push('Room is required');\n        // }\n        // if (values.start_date === '' || values.start_date === null) {\n        //     errors.push('Start date is required');\n        // }\n        if (this.state.localImageFile.length === 0) {\n            errors.push('Image is required');\n        }\n        if (values.name_vi === '' || values.name_en === '' || values.name_jp_kanji === '' || values.name_jp_romaji === '' || values.name_kr === '') {\n            errors.push('All title are required');\n        }\n        if (values.short_description_vi === '' || values.short_description_en === ''\n            && values.short_description_jp_kanji === '' || values.short_description_jp_romaji === '' || values.short_description_kr === '') {\n            errors.push('All short description are required');\n        }\n\n        if (errors.length > 0) {\n            notification.error(errors);\n            return false;\n        }\n        return true;\n    }\n\n    componentDidMount() {\n        this.props.getListRoom();\n    }\n\n    render() {\n\n        let buttonStyle = {};\n        if (this.state.localImageData.length > 0) {\n            buttonStyle = {display: 'none'};\n        }\n\n        return (\n            <PromotionForm\n                submitHandler={this.onSubmit}\n                handleUploadImage={this.handleUploadImage}\n                handleImageSelected={this.handleImageSelected}\n                buttonStyle={buttonStyle}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.promotionReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(PromotionAdd));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport actions from \"../../redux/promotion/action\";\nimport { Link, withRouter } from 'react-router-dom';\nimport { Breadcrumb } from \"react-bootstrap\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport * as PageUrls from '../../configs/PagesUrl';\nimport PromotionAdd from '../../components/Promotion/Add';\n\nclass ScreensPromotionAdd extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_PROMOTION_LIST}>\n                            {messages['promotion.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['promotion.add.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <PromotionAdd />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensPromotionAdd));","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/promotion/action\";\nimport { withRouter } from 'react-router-dom';\nimport PromotionForm from './Form';\nimport notification from \"../../helpers/Notification\";\nimport PageForm from \"../Page/Form\";\n\nclass PromotionEdit extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            localImageFile: [],\n            localImageData: [],\n        };\n        this.props.resetFormData();\n    }\n\n    handleImageSelected = (pictureSelected, pictureDataURLs)  => {\n        if (pictureSelected.length > 0) {\n            this.setState({\n                localImageFile: [pictureSelected[pictureSelected.length - 1]],\n                localImageData: [pictureDataURLs[pictureDataURLs.length - 1]]\n            });\n        } else {\n            this.setState({\n                localImageFile: [],\n                localImageData: []\n            });\n        }\n    };\n\n    onSubmit = values => {\n        if (!this.validate(values)) {\n            return;\n        }\n\n        const data = {\n            id: values.id,\n            name: {\n                vi: values.name_vi,\n                en: values.name_en,\n                jp: {\n                    kanji: values.name_jp_kanji,\n                    romaji: values.name_jp_romaji\n                },\n                kr: values.name_kr\n            },\n            short_description: {\n                vi: values.short_description_vi,\n                en: values.short_description_en,\n                jp: {\n                    kanji: values.short_description_jp_kanji,\n                    romaji: values.short_description_jp_romaji\n                },\n                kr: values.short_description_kr\n            },\n            description: {\n                vi: values.description_vi,\n                en: values.description_en,\n                jp: {\n                    kanji: values.description_jp_kanji,\n                    romaji: values.description_jp_romaji\n                },\n                kr: values.description_kr\n            },\n            start_date: values.start_date,\n            end_date: values.end_date,\n            status: values.status,\n            image: values.image,\n            image_origin: values.image_origin,\n            room_id: values.room_id,\n        };\n        //update\n        if (this.state.localImageFile.length > 0) {\n            this.props.edit({\n                data: data,\n                image: this.state.localImageFile[0]\n            });\n        } else {\n            this.props.edit({\n                data: data,\n            });\n        }\n    };\n\n    validate = values => {\n\n        if (values.id === '') {\n            notification.error('Record does not exist');\n            return false;\n        }\n\n        let errors = [];\n        // if (values.room_id === '' || values.room_id === 0) {\n        //     errors.push('Room is required');\n        // }\n        // if (values.start_date === '' || values.start_date === null) {\n        //     errors.push('Start date is required');\n        // }\n        if (values.name_vi === '' || values.name_en === '' || values.name_jp_kanji === '' || values.name_jp_romaji === '' || values.name_kr === '') {\n            errors.push('All title are required');\n        }\n        if (values.short_description_vi === '' || values.short_description_en === ''\n            && values.short_description_jp_kanji === '' || values.short_description_jp_romaji === '' || values.short_description_kr === '') {\n            errors.push('All short description are required');\n        }\n\n        if (errors.length > 0) {\n            notification.error(errors);\n            return false;\n        }\n        return true;\n    };\n\n    componentDidMount() {\n        this.props.getListRoom();\n        this.props.getById(this.props.match.params.promotionId);\n    }\n\n    render() {\n        let buttonStyle = {};\n        if (this.state.localImageData.length > 0) {\n            buttonStyle = {display: 'none'};\n        }\n\n        return (\n            <PromotionForm\n                submitHandler={this.onSubmit}\n                handleUploadImage={this.handleUploadImage}\n                handleImageSelected={this.handleImageSelected}\n                buttonStyle={buttonStyle}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.promotionReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(PromotionEdit));\n","import React from 'react';\nimport {Breadcrumb} from \"react-bootstrap\";\nimport * as PageUrls from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport { withRouter } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/promotion/action\";\nimport PromotionEdit from \"../../components/Promotion/Edit\";\n\nclass ScreensPromotionEdit extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_PROMOTION_LIST}>\n                            {messages['promotion.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['promotion.edit.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <PromotionEdit />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensPromotionEdit));\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/promotion/action\";\nimport { withRouter } from 'react-router-dom';\nimport PromotionFormDetails from './FormDetails';\n\nclass PromotionDelete extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.resetFormData();\n    }\n\n    onSubmit = values => {\n        this.props.delete(values.id);\n    };\n\n    componentDidMount() {\n        this.props.getListRoom();\n        this.props.getById(this.props.match.params.promotionId);\n    }\n\n    render() {\n\n        const lang = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <React.Fragment>\n            <p>{lang['message.confirmDelete']}</p>\n            <PromotionFormDetails\n                submitHandler={this.onSubmit}\n            />\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.promotionReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(PromotionDelete));\n","import React from 'react';\nimport {Breadcrumb} from \"react-bootstrap\";\nimport * as PageUrls from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport { withRouter } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/promotion/action\";\nimport PromotionDelete from \"../../components/Promotion/Delete\";\n\nclass ScreensPromotionDelete extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_PROMOTION_LIST}>\n                            {messages['promotion.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['promotion.delete.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <PromotionDelete />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensPromotionDelete));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Modal } from 'react-bootstrap';\n\nclass Filter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleApplyFilterButton = this.applyFilter.bind(this);\n        this.handleDiscardsFilterButton = this.discardFilter.bind(this);\n        this.changeSearchText = this.changeSearchTextFunc.bind(this);\n\n        //need same param name in reducer.filter which we want override\n        this.state = {\n            ...this.props.filter\n        };\n    }\n    applyFilter() {\n        //simple clone value of state pass back to parent callback\n        this.props.onApplyFilter({...this.state});\n    }\n    discardFilter() {\n        //discard meaning reset all state params\n        this.setState({ s: ''}, () => {\n            //simple clone value of state pass back to parent callback\n            this.props.onApplyFilter({...this.state});\n        })\n    }\n    changeSearchTextFunc(e) {\n        this.setState({ s: e.target.value});\n    }\n\n    render() {\n\n        const lang = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <Modal\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                show={this.props.show}\n                onHide={this.props.closePopup}\n                className=\"popup_inner popup_inner_filter\"\n            >\n                <Modal.Header closeButton className=\"box-header-filter\">\n                    <Modal.Title id=\"contained-modal-title-vcenter\" className=\"box-title-filter\">\n                        {lang['layout.title.filterList']}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form className=\"form-horizontal\">\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"user\" className=\"col-md-3 control-label\">Search by name or guard name</label>\n                            <div className=\"col-md-9\">\n                                <input type=\"text\" className=\"form-control\"\n                                       value={this.state.s}\n                                       onChange={this.changeSearchText}\n                                       id=\"s\" name=\"s\" placeholder=\"Enter any chars to search\" />\n                            </div>\n                        </div>\n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={this.handleDiscardsFilterButton} >\n                        <i className=\"fa fa-times mr-1\"> </i>\n                        {lang['layout.button.discardFilter']}\n                    </button>\n                    <button type=\"button\" className=\"btn btn-primary ml-1\" onClick={this.handleApplyFilterButton} >\n                        <i className=\"fa fa-check mr-1\"> </i>\n                        {lang['layout.button.applyFilter']}\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n}\nconst mapStateToProps = (state) => ({\n    ...state.roomFacilityReducer,\n    ...state,\n});\n\nexport default connect(mapStateToProps, {})(Filter);\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport actions from '../../redux/role/action';\nimport {withRouter} from 'react-router-dom';\nimport Paginator from \"../../common/Paginator\";\nimport Filter from \"./Popup/Filter\";\nimport {Table} from 'react-bootstrap';\nimport {PAGE_ROLE_LIST} from \"../../configs/PagesUrl\";\n\nclass RoleList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showPopupFilter: false,\n        };\n        this.onChangePageNumber = this.handlePaging.bind(this);\n        this.onChangeItemPerPage = this.handleItemPerPage.bind(this);\n        this.onApplyFilter = this.handleFilter.bind(this);\n    }\n\n    togglePopupFilter() {\n        this.setState({\n            showPopupFilter: !this.state.showPopupFilter\n        });\n    }\n\n    componentDidMount() {\n        this.props.getList({\n            ...this.props.filter\n        });\n    }\n\n    async handlePaging(pageNumber) {\n        //update filter first, so paging number can changed\n        await this.props.updateFilter({\n            ...this.props.filter,\n            page: pageNumber\n        });\n        await this.getList();\n    }\n\n    async handleItemPerPage(itemPerPage) {\n        //update filter first, so paging number can changed\n        //change item per page must reset page to 1\n        await this.props.updateFilter({\n            ...this.props.filter,\n            per_page: itemPerPage,\n            page: 1\n        });\n        await this.getList();\n    }\n\n    async handleFilter(params) {\n        this.setState({showPopupFilter: false}, async () => {\n            //update filter first, so paging number can changed\n            //change item per page must reset page to 1\n            await this.props.updateFilter({\n                ...this.props.filter,\n                ...params,\n                page: 1\n            });\n            await this.getList();\n        });\n    }\n\n    getList() {\n        this.props.getList(this.props.filter);\n    }\n\n\n    renderList(listData) {\n        if (listData === undefined || listData.items === undefined) return;\n        console.log(listData.items);\n\n        return listData.items.map((row) => {\n            return (\n                <tr key={row.id}>\n                    <td>{row.name}</td>\n                    <td>{row.guard_name}</td>\n                    <td className=\"text-nowrap text-center\">\n                        {/*<span className=\"action-link ml-1\">*/}\n                        {/*    <Link to={PAGE_ROOM_FACILITY_EDIT + '/' + row.id} className=\"btn btn-sm btn-success\">*/}\n                        {/*        <i className=\"fa fa-pencil\"> </i>*/}\n                        {/*    </Link>*/}\n                        {/*</span>*/}\n                        {/*<span className=\"action-link ml-1\">*/}\n                        {/*    <Link to={PAGE_ROOM_FACILITY_DELETE+ '/' + row.id} className=\"btn btn-sm btn-danger\">*/}\n                        {/*        <i className=\"fa fa-trash\"> </i>*/}\n                        {/*    </Link>*/}\n                        {/*</span>*/}\n                    </td>\n                </tr>\n            );\n        });\n    }\n\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n\n        return (\n\n\n            <div className=\"box\">\n                <div className=\"box-header with-border\">\n                    <h3 className=\"box-title\">{messages['role.list.title']}</h3>\n                    <div className=\"float-md-right mt-2 mt-md-0\">\n                        {/*<button type=\"button\" className=\"btn btn-secondary btn-sm ml-1\"*/}\n                        {/*        >{messages['layout.button.export']}*/}\n                        {/*</button>*/}\n                        {/*<Link to={PAGE_ROOM_FACILITY_ADD}>*/}\n                        {/*    <button type=\"button\"*/}\n                        {/*            className=\"btn btn-primary btn-sm ml-1\">{messages['layout.button.register']}</button>*/}\n                        {/*</Link>*/}\n                    </div>\n                </div>\n                <div className=\"box-body\">\n                    <div className=\"datatable_container\">\n                        <Paginator\n                            total={this.props.listData.total}\n                            itemPerPage={this.props.filter.per_page}\n                            currentPage={this.props.filter.page}\n                            onChangePageNumber={this.onChangePageNumber}\n                            onChangeItemPerPage={this.onChangeItemPerPage}\n                            onTogglePopupFilter={this.togglePopupFilter.bind(this)}\n                            filterData={this.props.filter}\n                        />\n                        <div className=\"row m-0 my-2\">\n                            <div className=\"col-sm-12 p-0\">\n                                <Table bordered hover responsive size=\"sm\"\n                                       className=\"table-custom mb-0\">\n                                    <thead>\n                                    <tr>\n                                        <th>Tên</th>\n                                        <th>Guard</th>\n                                        <th style={{width: '100px'}} rowSpan={2}>{messages['layout.column.action']}</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    {this.renderList(this.props.listData)}\n                                    </tbody>\n                                </Table>\n                            </div>\n                        </div>\n                        <div className=\"block-paging-bottom\">\n                            <Paginator\n                                total={this.props.listData.total}\n                                itemPerPage={this.props.filter.per_page}\n                                currentPage={this.props.filter.page}\n                                onChangePageNumber={this.onChangePageNumber}\n                                onChangeItemPerPage={this.onChangeItemPerPage}\n                                filterData={this.props.filter}\n                            />\n                        </div>\n                    </div>\n                </div>\n                {this.state.showPopupFilter ?\n                    <Filter\n                        show={this.state.showPopupFilter}\n                        closePopup={this.togglePopupFilter.bind(this)}\n                        onApplyFilter={this.onApplyFilter}\n                    />\n                    : null\n                }\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.roleReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(RoleList));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport RoleList from '../../components/Role/List';\nimport actions from \"../../redux/auth/action\";\nimport { withRouter } from 'react-router-dom';\n\nclass ScreensRoleList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <h1>\n                        {messages['role.title']}\n                    </h1>\n                </section>\n                <section className=\"content\">\n                    <div className=\"row m-0\">\n                        <div className=\"col-12 p-0\">\n                            <RoleList />\n                        </div>\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps,actions)(ScreensRoleList));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Modal } from 'react-bootstrap';\nimport actions from '../../../redux/page/action';\n\nclass Filter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleApplyFilterButton = this.applyFilter.bind(this);\n        this.handleDiscardsFilterButton = this.discardFilter.bind(this);\n        this.changeSearchText = this.changeSearchTextFunc.bind(this);\n        this.changeGroup = this.changeGroupFunc.bind(this);\n\n        //need same param name in reducer.filter which we want override\n        this.state = {\n            ...this.props.filter,\n            group_id: this.props.filter.group_id\n        };\n    }\n    applyFilter() {\n        //simple clone value of state pass back to parent callback\n        this.props.onApplyFilter({...this.state});\n    }\n    discardFilter() {\n        //discard meaning reset all state params\n        this.setState({ s: '', group_id: 0}, () => {\n            //simple clone value of state pass back to parent callback\n            this.props.onApplyFilter({...this.state});\n        })\n    }\n    changeSearchTextFunc(e) {\n        this.setState({ s: e.target.value});\n    }\n    changeGroupFunc(e) {\n        this.setState({ group_id: e.target.value});\n    }\n    componentDidMount() {\n        this.props.getListGroup();\n    }\n\n    render() {\n\n        const lang = this.props.languageSwitcher.languageMessages;\n        const { listGroup } = this.props;\n\n        return (\n            <Modal\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                show={this.props.show}\n                onHide={this.props.closePopup}\n                className=\"popup_inner popup_inner_filter\"\n            >\n                <Modal.Header closeButton className=\"box-header-filter\">\n                    <Modal.Title id=\"contained-modal-title-vcenter\" className=\"box-title-filter\">\n                        {lang['layout.title.filterList']}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form className=\"form-horizontal\">\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"user\" className=\"col-md-3 control-label\">Search</label>\n                            <div className=\"col-md-9\">\n                                <input type=\"text\" className=\"form-control\"\n                                       value={this.state.s}\n                                       onChange={this.changeSearchText}\n                                       id=\"s\" name=\"s\" placeholder=\"Enter any chars to search\" />\n                            </div>\n                        </div>\n                        {/*<div className=\"form-group row\">*/}\n                            {/*<label htmlFor=\"group_id\" className=\"col-md-3 control-label\">Group</label>*/}\n                            {/*<div className=\"col-md-9\">*/}\n                                {/*<select className=\"form-control\"*/}\n                                      {/*onChange={this.changeGroup}*/}\n                                      {/*value={this.state.group_id}>*/}\n                                    {/*<option value=\"0\">{lang['common.select.default']}</option>*/}\n                                    {/*{listGroup.map(d => (*/}\n                                        {/*<option key={d.id} value={d.id}>{d.name.vi} - {d.name.en} - {d.name.jp.kanji} - {d.name.jp.romaji}</option>*/}\n                                    {/*))}*/}\n                                {/*</select>*/}\n                            {/*</div>*/}\n                        {/*</div>*/}\n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={this.handleDiscardsFilterButton} >\n                        <i className=\"fa fa-times mr-1\"> </i>\n                        {lang['layout.button.discardFilter']}\n                    </button>\n                    <button type=\"button\" className=\"btn btn-primary ml-1\" onClick={this.handleApplyFilterButton} >\n                        <i className=\"fa fa-check mr-1\"> </i>\n                        {lang['layout.button.applyFilter']}\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n}\nconst mapStateToProps = (state) => ({\n    ...state.homepageReducer,\n    ...state,\n});\n\nexport default connect(mapStateToProps, actions)(Filter);","import React from 'react';\nimport * as PagesUrl from '../../configs/PagesUrl';\nimport {Link} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport actions from '../../redux/homepage/action';\nimport {withRouter} from 'react-router-dom';\nimport Paginator from \"../../common/Paginator\";\nimport Filter from \"./Popup/Filter\";\nimport {Table} from 'react-bootstrap';\nimport { toVND } from \"../../helpers/Ultis\";\nimport SpinnerComponent from \"../Common/Spinner\";\n\nclass HomepageList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showPopupFilter: false,\n        };\n        this.onChangePageNumber = this.handlePaging.bind(this);\n        this.onChangeItemPerPage = this.handleItemPerPage.bind(this);\n        this.onApplyFilter = this.handleFilter.bind(this);\n    }\n\n    togglePopupFilter() {\n        this.setState({\n            showPopupFilter: !this.state.showPopupFilter\n        });\n    }\n\n    componentDidMount() {\n        this.props.getList({\n            ...this.props.filter\n        });\n    }\n\n    async handlePaging(pageNumber) {\n        //update filter first, so paging number can changed\n        await this.props.updateFilter({\n            ...this.props.filter,\n            page: pageNumber\n        });\n        await this.getList();\n    }\n\n    async handleItemPerPage(itemPerPage) {\n        //update filter first, so paging number can changed\n        //change item per page must reset page to 1\n        await this.props.updateFilter({\n            ...this.props.filter,\n            per_page: itemPerPage,\n            page: 1\n        });\n        await this.getList();\n    }\n\n    async handleFilter(params) {\n        console.log(params);\n        this.setState({showPopupFilter: false}, async () => {\n            //update filter first, so paging number can changed\n            //change item per page must reset page to 1\n            await this.props.updateFilter({\n                ...this.props.filter,\n                ...params,\n                page: 1\n            });\n            await this.getList();\n        });\n    }\n\n    getList() {\n        this.props.getList(this.props.filter);\n    }\n\n    renderList(listData) {\n        if (listData === undefined || listData.items === undefined) return;\n\n        return listData.items.map((row) => {\n            return (\n                <tr key={row.id}>\n                    <td>{row.id}</td>\n                    <td>{row.title}</td>\n                    <td>{row.description}</td>\n                    <td style={{width: '200px', textAlign: 'center'}}>\n                        <img style={{width: '100%'}} alt={row.image} src={row.image} />\n                    </td>\n                    <td className=\"text-nowrap text-center\">\n                        <span className=\"action-link ml-1\">\n                            <Link to={PagesUrl.PAGE_HOMEPAGE_GALLERY_EDIT + '/' + row.id} className=\"btn btn-sm btn-success\">\n                                <i className=\"fa fa-pencil\"> </i>\n                            </Link>\n                        </span>\n                        <span className=\"action-link ml-1\">\n                            <Link to={PagesUrl.PAGE_HOMEPAGE_GALLERY_DELETE + '/' + row.id} className=\"btn btn-sm btn-danger\">\n                                <i className=\"fa fa-trash\"> </i>\n                            </Link>\n                        </span>\n                    </td>\n                </tr>\n            );\n        });\n    }\n\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <React.Fragment>\n                <div className=\"box\">\n                    <div className=\"box-header with-border\">\n                        <div className=\"float-md-right mt-2 mt-md-0\">\n                            <button type=\"button\" className=\"btn btn-secondary btn-sm ml-1\"\n                                    >Import\n                            </button>\n                            <Link to={PagesUrl.PAGE_HOMEPAGE_GALLERY_ADD}>\n                                <button type=\"button\"\n                                        className=\"btn btn-primary btn-sm ml-1\">{messages['layout.button.register']}</button>\n                            </Link>\n                        </div>\n                    </div>\n                    <div className=\"box-body\">\n                        <div className=\"datatable_container\">\n                            <Paginator\n                                total={this.props.listData.total}\n                                itemPerPage={this.props.filter.per_page}\n                                currentPage={this.props.filter.page}\n                                onChangePageNumber={this.onChangePageNumber}\n                                onChangeItemPerPage={this.onChangeItemPerPage}\n                                onTogglePopupFilter={this.togglePopupFilter.bind(this)}\n                                filterData={this.props.filter}\n                            />\n                            <div className=\"row m-0 my-2\">\n                                <div className=\"col-sm-12 p-0\">\n                                    <Table bordered hover responsive size=\"sm\" className=\"table-custom mb-0\">\n                                        <thead>\n                                        <tr>\n                                            <th>Id</th>\n                                            <th>Title</th>\n                                            <th>Mô tả chi tiết</th>\n                                            <th>Image</th>\n                                            <th style={{ width: '100px' }} rowSpan={2}>{messages['layout.column.action']}</th>\n                                        </tr>\n                                        </thead>\n                                        <tbody>\n                                        {this.renderList(this.props.listData)}\n                                        </tbody>\n                                    </Table>\n                                </div>\n                            </div>\n                            <div className=\"block-paging-bottom\">\n                                <Paginator\n                                    total={this.props.listData.total}\n                                    itemPerPage={this.props.filter.per_page}\n                                    currentPage={this.props.filter.page}\n                                    onChangePageNumber={this.onChangePageNumber}\n                                    onChangeItemPerPage={this.onChangeItemPerPage}\n                                    filterData={this.props.filter}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    {this.state.showPopupFilter ?\n                        <Filter\n                            show={this.state.showPopupFilter}\n                            closePopup={this.togglePopupFilter.bind(this)}\n                            onApplyFilter={this.onApplyFilter}\n                        />\n                        : null\n                    }\n                </div>\n                <SpinnerComponent show={props.isCallingApi}> </SpinnerComponent>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.homepageReducer,\n    ...state.layoutReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(HomepageList));","import React from 'react';\nimport { connect } from \"react-redux\";\nimport HomepageList from '../../components/Homepage/List';\nimport actions from \"../../redux/auth/action\";\nimport { withRouter } from 'react-router-dom';\n\nclass ScreensHomepageList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <h1>\n                        {messages['homepage.gallery.title']}\n                    </h1>\n                </section>\n                <section className=\"content\">\n                    <div className=\"row m-0\">\n                        <div className=\"col-12 p-0\">\n                            <HomepageList />\n                        </div>\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps,actions)(ScreensHomepageList));","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {withRouter} from 'react-router-dom';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport {useFormik} from 'formik';\nimport Form from \"react-bootstrap/Form\";\nimport ImageUploader from 'react-images-upload';\nimport {PAGE_HOMEPAGE_GALLERY_LIST, PAGE_MASTER_PAGE_LIST} from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../Common/Spinner\";\n\nconst HomepageForm = (props) => {\n    const lang = props.languageSwitcher.languageMessages;\n    const {buttonStyle, listGroup, formData} = props;\n\n    let initialValues = {\n        id: formData.id,\n        title: formData.title,\n        short_description: formData.short_description,\n        description: formData.description,\n        image: formData.image,\n        category_id: formData.category_id,\n        image_origin: formData.image_origin\n    };\n\n    //convert null value to empty, else formik will not work\n    Object.keys(initialValues).forEach(key => {\n        if (initialValues[key] === undefined || initialValues[key] === null) {\n            initialValues[key] = '';\n        }\n    });\n\n    let formik = useFormik({\n        initialValues: initialValues,\n        enableReinitialize: true,\n        onSubmit: values => {\n            props.submitHandler(values);\n        },\n    });\n\n    const onDrop = (pictureSelected, pictureDataURLs) => {\n        props.handleImageSelected(pictureSelected, pictureDataURLs);\n    };\n\n    const uploadButtonLabel = (formData.id !== undefined && formData.id !== '') ?\n        'Chọn hình khác thay thế hình đang sử dụng' : 'Chọn hình';\n\n    return (\n        <div className=\"box box-primary\">\n            <SpinnerComponent show={props.isCallingApi}> </SpinnerComponent>\n            <Form onSubmit={formik.handleSubmit}>\n                <div className=\"box-body\">\n                    <Form.Group>\n                        <Form.Label>Tên *</Form.Label>\n                        <Form.Control\n                            id=\"title\"\n                            name=\"title\"\n                            type=\"text\"\n                            onChange={formik.handleChange}\n                            value={formik.values.title}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Mô tả ngắn</Form.Label>\n                        <Form.Control\n                            id=\"short_description\"\n                            name=\"short_description\"\n                            type=\"text\"\n                            onChange={formik.handleChange}\n                            value={formik.values.short_description}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Mô tả chi tiết</Form.Label>\n                        <Form.Control\n                            id=\"description\"\n                            name=\"description\"\n                            type=\"text\"\n                            onChange={formik.handleChange}\n                            value={formik.values.description}\n                        />\n                    </Form.Group>\n                    {formData.id !== '' ? (\n                            <Form.Group>\n                                <Form.Label>Hình đang sử dụng</Form.Label>\n                                <Form.Text>\n                                    <img style={{width:'400px'}} src={formData.image} alt=\"Current Image\"/>\n                                </Form.Text>\n                            </Form.Group>)\n                        : ''}\n                    <Form.Group>\n                        <Form.Label>Hình *</Form.Label>\n                        <ImageUploader\n                            singleImage={true}\n                            withIcon={true}\n                            buttonText={uploadButtonLabel}\n                            onChange={onDrop}\n                            imgExtension={['.jpg', '.png', '.gif']}\n                            maxFileSize={5242880}\n                            withPreview={true}\n                            buttonStyles={buttonStyle}\n                        />\n                    </Form.Group>\n                </div>\n                <div className=\"box-footer text-center\">\n                    <button type=\"submit\" className=\"btn btn-info\">{lang['layout.button.save']}</button>\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={(event) => {\n                        props.history.push(PAGE_HOMEPAGE_GALLERY_LIST)\n                    }}>{lang['layout.button.cancel']}</button>\n                </div>\n            </Form>\n        </div>\n    );\n};\nconst mapStateToProps = (state) => ({\n    ...state.homepageReducer,\n    ...state.layoutReducer,\n    ...state\n});\nexport default withRouter(connect(mapStateToProps, {})(HomepageForm));","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/homepage/action\";\nimport { withRouter } from 'react-router-dom';\nimport HomepageForm from './Form';\nimport notification from \"../../helpers/Notification\";\n\nclass HomepageAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            localImageFile: [],\n            localImageData: [],\n        };\n        this.props.resetFormData();\n    }\n\n    handleImageSelected = (pictureSelected, pictureDataURLs)  => {\n        if (pictureSelected.length > 0) {\n            this.setState({\n                localImageFile: [pictureSelected[pictureSelected.length - 1]],\n                localImageData: [pictureDataURLs[pictureDataURLs.length - 1]]\n            });\n        } else {\n            this.setState({\n                localImageFile: [],\n                localImageData: []\n            });\n        }\n    };\n\n    onSubmit = values => {\n        if (!this.validate(values)) {\n            return;\n        }\n\n        const data = {\n            id: values.id,\n            title: values.title,\n            description: values.description,\n            short_description: values.short_description,\n            image: values.image,\n            category_id: 2,//values.category_id\n        };\n        //add\n        this.props.add({\n            data: data,\n            image: this.state.localImageFile[0]\n        });\n    };\n\n    validate(values) {\n\n        let errors = [];\n        if (values.title === '') {\n            errors.push('Title is required');\n        }\n        if (this.state.localImageFile.length === 0) {\n            errors.push('Image is required');\n        }\n\n        if (errors.length > 0) {\n            notification.error(errors);\n            return false;\n        }\n        return true;\n    }\n\n    componentDidMount() {\n        this.props.getListGroup();\n    }\n\n    render() {\n\n        let buttonStyle = {};\n        if (this.state.localImageData.length > 0) {\n            buttonStyle = {display: 'none'};\n        }\n\n        return (\n            <HomepageForm\n                submitHandler={this.onSubmit}\n                handleUploadImage={this.handleUploadImage}\n                handleImageSelected={this.handleImageSelected}\n                buttonStyle={buttonStyle}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.pageReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(HomepageAdd));","import React from 'react';\nimport { connect } from \"react-redux\";\nimport actions from \"../../redux/homepage/action\";\nimport { Link, withRouter } from 'react-router-dom';\nimport { Breadcrumb } from \"react-bootstrap\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport * as PageUrls from '../../configs/PagesUrl';\nimport HomepageAdd from '../../components/Homepage/Add';\n\nclass ScreensHomepageAdd extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_HOMEPAGE_GALLERY_LIST}>\n                            {messages['homepage.gallery.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['homepage.gallery.add.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <HomepageAdd />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensHomepageAdd));","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/homepage/action\";\nimport { withRouter } from 'react-router-dom';\nimport HomepageForm from './Form';\nimport notification from \"../../helpers/Notification\";\n\nclass HomepageEdit extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            localImageFile: [],\n            localImageData: [],\n        };\n        this.props.resetFormData();\n    }\n\n    handleImageSelected = (pictureSelected, pictureDataURLs)  => {\n        if (pictureSelected.length > 0) {\n            this.setState({\n                localImageFile: [pictureSelected[pictureSelected.length - 1]],\n                localImageData: [pictureDataURLs[pictureDataURLs.length - 1]]\n            });\n        } else {\n            this.setState({\n                localImageFile: [],\n                localImageData: []\n            });\n        }\n    };\n\n    onSubmit = values => {\n        if (!this.validate(values)) {\n            return;\n        }\n\n        const data = {\n            id: values.id,\n            title: values.title,\n            short_description: values.short_description,\n            description: values.description,\n            image: values.image,\n            category_id: 2,//values.category_id,\n            image_origin: values.image_origin\n        };\n        //update\n        if (this.state.localImageFile.length > 0) {\n            this.props.edit({\n                data: data,\n                image: this.state.localImageFile[0]\n            });\n        } else {\n            this.props.edit({\n                data: data,\n            });\n        }\n    };\n\n    validate(values) {\n\n        if (values.id === '') {\n            notification.error('Record does not exist');\n            return false;\n        }\n\n        let errors = [];\n        if (values.title === '') {\n            errors.push('Title is required');\n        }\n\n        if (errors.length > 0) {\n            notification.error(errors);\n            return false;\n        }\n        return true;\n    }\n\n    componentDidMount() {\n        this.props.getListGroup();\n        this.props.getById(this.props.match.params.pageId);\n    }\n\n    render() {\n\n        let buttonStyle = {};\n        if (this.state.localImageData.length > 0) {\n            buttonStyle = {display: 'none'};\n        }\n\n        return (\n            <HomepageForm\n                submitHandler={this.onSubmit}\n                handleUploadImage={this.handleUploadImage}\n                handleImageSelected={this.handleImageSelected}\n                buttonStyle={buttonStyle}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.homepageReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(HomepageEdit));","import React from 'react';\nimport {Breadcrumb} from \"react-bootstrap\";\nimport * as PageUrls from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport { withRouter } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/homepage/action\";\nimport HomepageEdit from \"../../components/Homepage/Edit\";\n\nclass ScreensHomepageEdit extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_HOMEPAGE_GALLERY_LIST}>\n                            {messages['homepage.gallery.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['homepage.gallery.edit.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <HomepageEdit />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensHomepageEdit));","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {withRouter} from 'react-router-dom';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport {useFormik} from 'formik';\nimport Form from \"react-bootstrap/Form\";\nimport {PAGE_GROUP_LIST, PAGE_HOMEPAGE_GALLERY_LIST, PAGE_MASTER_PAGE_LIST} from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../Common/Spinner\";\nimport ImageUploader from \"react-images-upload\";\n\nconst HomepageFormDetails = (props) => {\n    const lang = props.languageSwitcher.languageMessages;\n    const { listGroup, formData } = props;\n\n    let initialValues = {\n        id: formData.id,\n        short_description: formData.short_description,\n        description: formData.description,\n        image: formData.image,\n        image_origin: formData.image_origin\n    };\n    //convert null value to empty, else formik will not work\n    Object.keys(initialValues).forEach(key => {\n        if (initialValues[key] === undefined || initialValues[key] === null) {\n            initialValues[key] = '';\n        }\n    });\n\n    let formik = useFormik({\n        initialValues: initialValues,\n        enableReinitialize: true,\n        onSubmit: values => {\n            props.submitHandler(values);\n        },\n    });\n\n    return (\n        <div className=\"box box-primary\">\n            <SpinnerComponent show={props.isCallingApi}> </SpinnerComponent>\n            <div className=\"box box-primary\">\n                <SpinnerComponent show={props.isCallingApi}> </SpinnerComponent>\n                <Form onSubmit={formik.handleSubmit}>\n                    <div className=\"box-body\">\n                        <Form.Group>\n                            <Form.Label>Tên *</Form.Label>\n                            <Form.Control disabled\n                                id=\"title\"\n                                name=\"title\"\n                                type=\"text\"\n                                onChange={formik.handleChange}\n                                value={formik.values.title}\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Mô tả ngắn</Form.Label>\n                            <Form.Control disabled\n                                          id=\"short_description\"\n                                          name=\"short_description\"\n                                          type=\"text\"\n                                          onChange={formik.handleChange}\n                                          value={formik.values.short_description}\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Mô tả chi tiết</Form.Label>\n                            <Form.Control disabled\n                                id=\"description\"\n                                name=\"description\"\n                                type=\"text\"\n                                onChange={formik.handleChange}\n                                value={formik.values.description}\n                            />\n                        </Form.Group>\n                        {formData.id !== '' ? (\n                                <Form.Group>\n                                    <Form.Label>Image</Form.Label>\n                                    <Form.Text>\n                                        <img style={{width:'400px'}} src={formData.image} alt=\"Current Image\"/>\n                                    </Form.Text>\n                                </Form.Group>)\n                            : ''}\n                    </div>\n                    <div className=\"box-footer text-center\">\n                        <button type=\"submit\" className=\"btn btn-info\">{lang['layout.button.delete']}</button>\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={(event) => {\n                            props.history.push(PAGE_HOMEPAGE_GALLERY_LIST)\n                        }}>{lang['layout.button.cancel']}</button>\n                    </div>\n                </Form>\n            </div>\n        </div>\n    );\n};\nconst mapStateToProps = (state) => ({\n    ...state.homepageReducer,\n    ...state.layoutReducer,\n    ...state\n});\nexport default withRouter(connect(mapStateToProps, {})(HomepageFormDetails));","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/homepage/action\";\nimport { withRouter } from 'react-router-dom';\nimport HomepageFormDetails from './FormDetails';\n\nclass HomepageDelete extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.resetFormData();\n    }\n\n    onSubmit = values => {\n        console.log(values);\n        this.props.delete({id: values.id, image: values.sample_image_origin});\n    };\n\n    componentDidMount() {\n        this.props.getById(this.props.match.params.pageId);\n        this.props.getListGroup();\n    }\n\n    render() {\n\n        const lang = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <React.Fragment>\n            <p>{lang['message.confirmDelete']}</p>\n            <HomepageFormDetails\n                submitHandler={this.onSubmit}\n            />\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.pageReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(HomepageDelete));","import React from 'react';\nimport {Breadcrumb} from \"react-bootstrap\";\nimport * as PageUrls from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport { withRouter } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/homepage/action\";\nimport HomepageDelete from \"../../components/Homepage/Delete\";\n\nclass ScreensHomepageDelete extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_HOMEPAGE_GALLERY_LIST}>\n                            {messages['homepage.gallery.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['homepage.gallery.delete.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <HomepageDelete />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensHomepageDelete));","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Modal } from 'react-bootstrap';\nimport actions from '../../../redux/page/action';\n\nclass Filter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleApplyFilterButton = this.applyFilter.bind(this);\n        this.handleDiscardsFilterButton = this.discardFilter.bind(this);\n        this.changeSearchText = this.changeSearchTextFunc.bind(this);\n        this.changeGroup = this.changeGroupFunc.bind(this);\n\n        //need same param name in reducer.filter which we want override\n        this.state = {\n            ...this.props.filter,\n            group_id: this.props.filter.group_id\n        };\n    }\n    applyFilter() {\n        //simple clone value of state pass back to parent callback\n        this.props.onApplyFilter({...this.state});\n    }\n    discardFilter() {\n        //discard meaning reset all state params\n        this.setState({ s: '', group_id: 0}, () => {\n            //simple clone value of state pass back to parent callback\n            this.props.onApplyFilter({...this.state});\n        })\n    }\n    changeSearchTextFunc(e) {\n        this.setState({ s: e.target.value});\n    }\n    changeGroupFunc(e) {\n        this.setState({ group_id: e.target.value});\n    }\n    componentDidMount() {\n        this.props.getListGroup();\n    }\n\n    render() {\n\n        const lang = this.props.languageSwitcher.languageMessages;\n        const { listGroup } = this.props;\n\n        return (\n            <Modal\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                show={this.props.show}\n                onHide={this.props.closePopup}\n                className=\"popup_inner popup_inner_filter\"\n            >\n                <Modal.Header closeButton className=\"box-header-filter\">\n                    <Modal.Title id=\"contained-modal-title-vcenter\" className=\"box-title-filter\">\n                        {lang['layout.title.filterList']}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form className=\"form-horizontal\">\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"user\" className=\"col-md-3 control-label\">Search</label>\n                            <div className=\"col-md-9\">\n                                <input type=\"text\" className=\"form-control\"\n                                       value={this.state.s}\n                                       onChange={this.changeSearchText}\n                                       id=\"s\" name=\"s\" placeholder=\"Enter any chars to search\" />\n                            </div>\n                        </div>\n                        {/*<div className=\"form-group row\">*/}\n                            {/*<label htmlFor=\"group_id\" className=\"col-md-3 control-label\">Group</label>*/}\n                            {/*<div className=\"col-md-9\">*/}\n                                {/*<select className=\"form-control\"*/}\n                                      {/*onChange={this.changeGroup}*/}\n                                      {/*value={this.state.group_id}>*/}\n                                    {/*<option value=\"0\">{lang['common.select.default']}</option>*/}\n                                    {/*{listGroup.map(d => (*/}\n                                        {/*<option key={d.id} value={d.id}>{d.name.vi} - {d.name.en} - {d.name.jp.kanji} - {d.name.jp.romaji}</option>*/}\n                                    {/*))}*/}\n                                {/*</select>*/}\n                            {/*</div>*/}\n                        {/*</div>*/}\n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={this.handleDiscardsFilterButton} >\n                        <i className=\"fa fa-times mr-1\"> </i>\n                        {lang['layout.button.discardFilter']}\n                    </button>\n                    <button type=\"button\" className=\"btn btn-primary ml-1\" onClick={this.handleApplyFilterButton} >\n                        <i className=\"fa fa-check mr-1\"> </i>\n                        {lang['layout.button.applyFilter']}\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n}\nconst mapStateToProps = (state) => ({\n    ...state.galleryReducer,\n    ...state,\n});\n\nexport default connect(mapStateToProps, actions)(Filter);","import React from 'react';\nimport * as PagesUrl from '../../configs/PagesUrl';\nimport {Link} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport actions from '../../redux/gallery/action';\nimport {withRouter} from 'react-router-dom';\nimport Paginator from \"../../common/Paginator\";\nimport Filter from \"./Popup/Filter\";\nimport {Table} from 'react-bootstrap';\nimport { toVND } from \"../../helpers/Ultis\";\nimport SpinnerComponent from \"../Common/Spinner\";\n\nclass GalleryList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showPopupFilter: false,\n        };\n        this.onChangePageNumber = this.handlePaging.bind(this);\n        this.onChangeItemPerPage = this.handleItemPerPage.bind(this);\n        this.onApplyFilter = this.handleFilter.bind(this);\n    }\n\n    togglePopupFilter() {\n        this.setState({\n            showPopupFilter: !this.state.showPopupFilter\n        });\n    }\n\n    componentDidMount() {\n        this.props.getList({\n            ...this.props.filter\n        });\n    }\n\n    async handlePaging(pageNumber) {\n        //update filter first, so paging number can changed\n        await this.props.updateFilter({\n            ...this.props.filter,\n            page: pageNumber\n        });\n        await this.getList();\n    }\n\n    async handleItemPerPage(itemPerPage) {\n        //update filter first, so paging number can changed\n        //change item per page must reset page to 1\n        await this.props.updateFilter({\n            ...this.props.filter,\n            per_page: itemPerPage,\n            page: 1\n        });\n        await this.getList();\n    }\n\n    async handleFilter(params) {\n        console.log(params);\n        this.setState({showPopupFilter: false}, async () => {\n            //update filter first, so paging number can changed\n            //change item per page must reset page to 1\n            await this.props.updateFilter({\n                ...this.props.filter,\n                ...params,\n                page: 1\n            });\n            await this.getList();\n        });\n    }\n\n    getList() {\n        this.props.getList(this.props.filter);\n    }\n\n    renderList(listData) {\n        if (listData === undefined || listData.items === undefined) return;\n\n        return listData.items.map((row) => {\n            return (\n                <tr key={row.id}>\n                    <td>{row.id}</td>\n                    <td>{row.title}</td>\n                    <td>{row.description}</td>\n                    <td style={{width: '200px', textAlign: 'center'}}>\n                        <img style={{width: '100%'}} alt={row.image} src={row.image} />\n                    </td>\n                    <td className=\"text-nowrap text-center\">\n                        <span className=\"action-link ml-1\">\n                            <Link to={PagesUrl.PAGE_GALLERY_EDIT + '/' + row.id} className=\"btn btn-sm btn-success\">\n                                <i className=\"fa fa-pencil\"> </i>\n                            </Link>\n                        </span>\n                        <span className=\"action-link ml-1\">\n                            <Link to={PagesUrl.PAGE_GALLERY_DELETE + '/' + row.id} className=\"btn btn-sm btn-danger\">\n                                <i className=\"fa fa-trash\"> </i>\n                            </Link>\n                        </span>\n                    </td>\n                </tr>\n            );\n        });\n    }\n\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <React.Fragment>\n                <div className=\"box\">\n                    <div className=\"box-header with-border\">\n                        <div className=\"float-md-right mt-2 mt-md-0\">\n                            <button type=\"button\" className=\"btn btn-secondary btn-sm ml-1\"\n                                    >Import\n                            </button>\n                            <Link to={PagesUrl.PAGE_GALLERY_ADD}>\n                                <button type=\"button\"\n                                        className=\"btn btn-primary btn-sm ml-1\">{messages['layout.button.register']}</button>\n                            </Link>\n                        </div>\n                    </div>\n                    <div className=\"box-body\">\n                        <div className=\"datatable_container\">\n                            <Paginator\n                                total={this.props.listData.total}\n                                itemPerPage={this.props.filter.per_page}\n                                currentPage={this.props.filter.page}\n                                onChangePageNumber={this.onChangePageNumber}\n                                onChangeItemPerPage={this.onChangeItemPerPage}\n                                onTogglePopupFilter={this.togglePopupFilter.bind(this)}\n                                filterData={this.props.filter}\n                            />\n                            <div className=\"row m-0 my-2\">\n                                <div className=\"col-sm-12 p-0\">\n                                    <Table bordered hover responsive size=\"sm\" className=\"table-custom mb-0\">\n                                        <thead>\n                                        <tr>\n                                            <th>Id</th>\n                                            <th>Title</th>\n                                            <th>Mô tả chi tiết</th>\n                                            <th>Image</th>\n                                            <th style={{ width: '100px' }} rowSpan={2}>{messages['layout.column.action']}</th>\n                                        </tr>\n                                        </thead>\n                                        <tbody>\n                                        {this.renderList(this.props.listData)}\n                                        </tbody>\n                                    </Table>\n                                </div>\n                            </div>\n                            <div className=\"block-paging-bottom\">\n                                <Paginator\n                                    total={this.props.listData.total}\n                                    itemPerPage={this.props.filter.per_page}\n                                    currentPage={this.props.filter.page}\n                                    onChangePageNumber={this.onChangePageNumber}\n                                    onChangeItemPerPage={this.onChangeItemPerPage}\n                                    filterData={this.props.filter}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    {this.state.showPopupFilter ?\n                        <Filter\n                            show={this.state.showPopupFilter}\n                            closePopup={this.togglePopupFilter.bind(this)}\n                            onApplyFilter={this.onApplyFilter}\n                        />\n                        : null\n                    }\n                </div>\n                <SpinnerComponent show={props.isCallingApi}> </SpinnerComponent>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.galleryReducer,\n    ...state.layoutReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(GalleryList));","import React from 'react';\nimport { connect } from \"react-redux\";\nimport GalleryList from '../../components/Gallery/List';\nimport actions from \"../../redux/auth/action\";\nimport { withRouter } from 'react-router-dom';\n\nclass ScreensGalleryList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <h1>\n                        {messages['gallery.title']}\n                    </h1>\n                </section>\n                <section className=\"content\">\n                    <div className=\"row m-0\">\n                        <div className=\"col-12 p-0\">\n                            <GalleryList />\n                        </div>\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps,actions)(ScreensGalleryList));","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {withRouter} from 'react-router-dom';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport {useFormik} from 'formik';\nimport Form from \"react-bootstrap/Form\";\nimport ImageUploader from 'react-images-upload';\nimport {PAGE_GALLERY_LIST, PAGE_MASTER_PAGE_LIST} from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../Common/Spinner\";\n\nconst GalleryForm = (props) => {\n    const lang = props.languageSwitcher.languageMessages;\n    const {buttonStyle, listGroup, formData} = props;\n\n    let initialValues = {\n        id: formData.id,\n        title: formData.title,\n        short_description: formData.short_description,\n        description: formData.description,\n        image: formData.image,\n        category_id: formData.category_id,\n        image_origin: formData.image_origin\n    };\n\n    //convert null value to empty, else formik will not work\n    Object.keys(initialValues).forEach(key => {\n        if (initialValues[key] === undefined || initialValues[key] === null) {\n            initialValues[key] = '';\n        }\n    });\n\n    let formik = useFormik({\n        initialValues: initialValues,\n        enableReinitialize: true,\n        onSubmit: values => {\n            props.submitHandler(values);\n        },\n    });\n\n    const onDrop = (pictureSelected, pictureDataURLs) => {\n        props.handleImageSelected(pictureSelected, pictureDataURLs);\n    };\n\n    const uploadButtonLabel = (formData.id !== undefined && formData.id !== '') ?\n        'Choose new image to replace current one' : 'Choose image';\n\n    return (\n        <div className=\"box box-primary\">\n            <SpinnerComponent show={props.isCallingApi}> </SpinnerComponent>\n            <Form onSubmit={formik.handleSubmit}>\n                <div className=\"box-body\">\n                    <Form.Group>\n                        <Form.Label>Title *</Form.Label>\n                        <Form.Control\n                            id=\"title\"\n                            name=\"title\"\n                            type=\"text\"\n                            onChange={formik.handleChange}\n                            value={formik.values.title}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Short Description</Form.Label>\n                        <Form.Control\n                            id=\"short_description\"\n                            name=\"short_description\"\n                            type=\"text\"\n                            onChange={formik.handleChange}\n                            value={formik.values.short_description}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Mô tả chi tiết</Form.Label>\n                        <Form.Control\n                            id=\"description\"\n                            name=\"description\"\n                            type=\"text\"\n                            onChange={formik.handleChange}\n                            value={formik.values.description}\n                        />\n                    </Form.Group>\n                    {formData.id !== '' ? (\n                            <Form.Group>\n                                <Form.Label>Current Image</Form.Label>\n                                <Form.Text>\n                                    <img style={{width:'400px'}} src={formData.image} alt=\"Current Image\"/>\n                                </Form.Text>\n                            </Form.Group>)\n                        : ''}\n                    <Form.Group>\n                        <Form.Label>Image *</Form.Label>\n                        <ImageUploader\n                            singleImage={true}\n                            withIcon={true}\n                            buttonText={uploadButtonLabel}\n                            onChange={onDrop}\n                            imgExtension={['.jpg', '.png', '.gif']}\n                            maxFileSize={5242880}\n                            withPreview={true}\n                            buttonStyles={buttonStyle}\n                        />\n                    </Form.Group>\n                </div>\n                <div className=\"box-footer text-center\">\n                    <button type=\"submit\" className=\"btn btn-info\">{lang['layout.button.save']}</button>\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={(event) => {\n                        props.history.push(PAGE_GALLERY_LIST)\n                    }}>{lang['layout.button.cancel']}</button>\n                </div>\n            </Form>\n        </div>\n    );\n};\nconst mapStateToProps = (state) => ({\n    ...state.galleryReducer,\n    ...state.layoutReducer,\n    ...state\n});\nexport default withRouter(connect(mapStateToProps, {})(GalleryForm));","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/gallery/action\";\nimport { withRouter } from 'react-router-dom';\nimport GalleryForm from './Form';\nimport notification from \"../../helpers/Notification\";\n\nclass GalleryAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            localImageFile: [],\n            localImageData: [],\n        };\n        this.props.resetFormData();\n    }\n\n    handleImageSelected = (pictureSelected, pictureDataURLs)  => {\n        if (pictureSelected.length > 0) {\n            this.setState({\n                localImageFile: [pictureSelected[pictureSelected.length - 1]],\n                localImageData: [pictureDataURLs[pictureDataURLs.length - 1]]\n            });\n        } else {\n            this.setState({\n                localImageFile: [],\n                localImageData: []\n            });\n        }\n    };\n\n    onSubmit = values => {\n        if (!this.validate(values)) {\n            return;\n        }\n\n        const data = {\n            id: values.id,\n            title: values.title,\n            description: values.description,\n            short_description: values.short_description,\n            image: values.image,\n            category_id: 1,//values.category_id\n        };\n        //add\n        this.props.add({\n            data: data,\n            image: this.state.localImageFile[0]\n        });\n    };\n\n    validate(values) {\n\n        let errors = [];\n        if (values.title === '') {\n            errors.push('Title is required');\n        }\n        if (this.state.localImageFile.length === 0) {\n            errors.push('Image is required');\n        }\n\n        if (errors.length > 0) {\n            notification.error(errors);\n            return false;\n        }\n        return true;\n    }\n\n    componentDidMount() {\n        this.props.getListGroup();\n    }\n\n    render() {\n\n        let buttonStyle = {};\n        if (this.state.localImageData.length > 0) {\n            buttonStyle = {display: 'none'};\n        }\n\n        return (\n            <GalleryForm\n                submitHandler={this.onSubmit}\n                handleUploadImage={this.handleUploadImage}\n                handleImageSelected={this.handleImageSelected}\n                buttonStyle={buttonStyle}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.galleryReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(GalleryAdd));","import React from 'react';\nimport { connect } from \"react-redux\";\nimport actions from \"../../redux/gallery/action\";\nimport { Link, withRouter } from 'react-router-dom';\nimport { Breadcrumb } from \"react-bootstrap\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport * as PageUrls from '../../configs/PagesUrl';\nimport GalleryAdd from '../../components/Gallery/Add';\n\nclass ScreensGalleryAdd extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_GALLERY_LIST}>\n                            {messages['gallery.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['gallery.add.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <GalleryAdd />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensGalleryAdd));","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/gallery/action\";\nimport { withRouter } from 'react-router-dom';\nimport GalleryForm from './Form';\nimport notification from \"../../helpers/Notification\";\n\nclass GalleryEdit extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            localImageFile: [],\n            localImageData: [],\n        };\n        this.props.resetFormData();\n    }\n\n    handleImageSelected = (pictureSelected, pictureDataURLs)  => {\n        if (pictureSelected.length > 0) {\n            this.setState({\n                localImageFile: [pictureSelected[pictureSelected.length - 1]],\n                localImageData: [pictureDataURLs[pictureDataURLs.length - 1]]\n            });\n        } else {\n            this.setState({\n                localImageFile: [],\n                localImageData: []\n            });\n        }\n    };\n\n    onSubmit = values => {\n        if (!this.validate(values)) {\n            return;\n        }\n\n        const data = {\n            id: values.id,\n            title: values.title,\n            short_description: values.short_description,\n            description: values.description,\n            image: values.image,\n            category_id: 1,//values.category_id,\n            image_origin: values.image_origin\n        };\n        //update\n        if (this.state.localImageFile.length > 0) {\n            this.props.edit({\n                data: data,\n                image: this.state.localImageFile[0]\n            });\n        } else {\n            this.props.edit({\n                data: data,\n            });\n        }\n    };\n\n    validate(values) {\n\n        if (values.id === '') {\n            notification.error('Record does not exist');\n            return false;\n        }\n\n        let errors = [];\n        if (values.title === '') {\n            errors.push('Title is required');\n        }\n\n        if (errors.length > 0) {\n            notification.error(errors);\n            return false;\n        }\n        return true;\n    }\n\n    componentDidMount() {\n        this.props.getListGroup();\n        this.props.getById(this.props.match.params.pageId);\n    }\n\n    render() {\n\n        let buttonStyle = {};\n        if (this.state.localImageData.length > 0) {\n            buttonStyle = {display: 'none'};\n        }\n\n        return (\n            <GalleryForm\n                submitHandler={this.onSubmit}\n                handleUploadImage={this.handleUploadImage}\n                handleImageSelected={this.handleImageSelected}\n                buttonStyle={buttonStyle}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.galleryReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(GalleryEdit));","import React from 'react';\nimport {Breadcrumb} from \"react-bootstrap\";\nimport * as PageUrls from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport { withRouter } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/gallery/action\";\nimport GalleryEdit from \"../../components/Gallery/Edit\";\n\nclass ScreensGalleryEdit extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_GALLERY_LIST}>\n                            {messages['gallery.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['gallery.edit.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <GalleryEdit />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensGalleryEdit));","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {withRouter} from 'react-router-dom';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport {useFormik} from 'formik';\nimport Form from \"react-bootstrap/Form\";\nimport {PAGE_GROUP_LIST, PAGE_GALLERY_LIST, PAGE_MASTER_PAGE_LIST} from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../Common/Spinner\";\nimport ImageUploader from \"react-images-upload\";\n\nconst GalleryFormDetails = (props) => {\n    const lang = props.languageSwitcher.languageMessages;\n    const { listGroup, formData } = props;\n\n    let initialValues = {\n        id: formData.id,\n        short_description: formData.short_description,\n        description: formData.description,\n        image: formData.image,\n        image_origin: formData.image_origin\n    };\n    //convert null value to empty, else formik will not work\n    Object.keys(initialValues).forEach(key => {\n        if (initialValues[key] === undefined || initialValues[key] === null) {\n            initialValues[key] = '';\n        }\n    });\n\n    let formik = useFormik({\n        initialValues: initialValues,\n        enableReinitialize: true,\n        onSubmit: values => {\n            props.submitHandler(values);\n        },\n    });\n\n    return (\n        <div className=\"box box-primary\">\n            <SpinnerComponent show={props.isCallingApi}> </SpinnerComponent>\n            <div className=\"box box-primary\">\n                <SpinnerComponent show={props.isCallingApi}> </SpinnerComponent>\n                <Form onSubmit={formik.handleSubmit}>\n                    <div className=\"box-body\">\n                        <Form.Group>\n                            <Form.Label>Title *</Form.Label>\n                            <Form.Control disabled\n                                id=\"title\"\n                                name=\"title\"\n                                type=\"text\"\n                                onChange={formik.handleChange}\n                                value={formik.values.title}\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Short Description</Form.Label>\n                            <Form.Control disabled\n                                          id=\"short_description\"\n                                          name=\"short_description\"\n                                          type=\"text\"\n                                          onChange={formik.handleChange}\n                                          value={formik.values.short_description}\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Mô tả chi tiết</Form.Label>\n                            <Form.Control disabled\n                                id=\"description\"\n                                name=\"description\"\n                                type=\"text\"\n                                onChange={formik.handleChange}\n                                value={formik.values.description}\n                            />\n                        </Form.Group>\n                        {formData.id !== '' ? (\n                                <Form.Group>\n                                    <Form.Label>Image</Form.Label>\n                                    <Form.Text>\n                                        <img style={{width:'400px'}} src={formData.image} alt=\"Current Image\"/>\n                                    </Form.Text>\n                                </Form.Group>)\n                            : ''}\n                    </div>\n                    <div className=\"box-footer text-center\">\n                        <button type=\"submit\" className=\"btn btn-info\">{lang['layout.button.delete']}</button>\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={(event) => {\n                            props.history.push(PAGE_GALLERY_LIST)\n                        }}>{lang['layout.button.cancel']}</button>\n                    </div>\n                </Form>\n            </div>\n        </div>\n    );\n};\nconst mapStateToProps = (state) => ({\n    ...state.galleryReducer,\n    ...state.layoutReducer,\n    ...state\n});\nexport default withRouter(connect(mapStateToProps, {})(GalleryFormDetails));","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/gallery/action\";\nimport { withRouter } from 'react-router-dom';\nimport GalleryFormDetails from './FormDetails';\n\nclass GalleryDelete extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.resetFormData();\n    }\n\n    onSubmit = values => {\n        console.log(values);\n        this.props.delete({id: values.id, image: values.sample_image_origin});\n    };\n\n    componentDidMount() {\n        this.props.getById(this.props.match.params.pageId);\n        this.props.getListGroup();\n    }\n\n    render() {\n\n        const lang = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <React.Fragment>\n            <p>{lang['message.confirmDelete']}</p>\n            <GalleryFormDetails\n                submitHandler={this.onSubmit}\n            />\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.galleryReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(GalleryDelete));","import React from 'react';\nimport {Breadcrumb} from \"react-bootstrap\";\nimport * as PageUrls from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport { withRouter } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/gallery/action\";\nimport GalleryDelete from \"../../components/Gallery/Delete\";\n\nclass ScreensGalleryDelete extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_GALLERY_LIST}>\n                            {messages['gallery.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['gallery.delete.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <GalleryDelete />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensGalleryDelete));","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Modal } from 'react-bootstrap';\nimport actions from '../../../redux/room/action';\n\nclass Filter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleApplyFilterButton = this.applyFilter.bind(this);\n        this.handleDiscardsFilterButton = this.discardFilter.bind(this);\n        this.changeSearchText = this.changeSearchTextFunc.bind(this);\n        this.changeGroup = this.changeGroupFunc.bind(this);\n\n        //need same param name in reducer.filter which we want override\n        this.state = {\n            ...this.props.filter,\n            group_id: this.props.filter.group_id\n        };\n    }\n    applyFilter() {\n        //simple clone value of state pass back to parent callback\n        this.props.onApplyFilter({...this.state});\n    }\n    discardFilter() {\n        //discard meaning reset all state params\n        this.setState({ s: '', group_id: 0}, () => {\n            //simple clone value of state pass back to parent callback\n            this.props.onApplyFilter({...this.state});\n        })\n    }\n    changeSearchTextFunc(e) {\n        this.setState({ s: e.target.value});\n    }\n    changeGroupFunc(e) {\n        this.setState({ group_id: e.target.value});\n    }\n    componentDidMount() {\n        // this.props.getListGroup();\n    }\n\n    render() {\n\n        const lang = this.props.languageSwitcher.languageMessages;\n        const { listGroup } = this.props;\n\n        return (\n            <Modal\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                show={this.props.show}\n                onHide={this.props.closePopup}\n                className=\"popup_inner popup_inner_filter\"\n            >\n                <Modal.Header closeButton className=\"box-header-filter\">\n                    <Modal.Title id=\"contained-modal-title-vcenter\" className=\"box-title-filter\">\n                        {lang['layout.title.filterList']}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form className=\"form-horizontal\">\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"user\" className=\"col-md-3 control-label\">Tìm theo tên</label>\n                            <div className=\"col-md-9\">\n                                <input type=\"text\" className=\"form-control\"\n                                       value={this.state.s}\n                                       onChange={this.changeSearchText}\n                                       id=\"s\" name=\"s\" placeholder=\"Enter any chars to search\" />\n                            </div>\n                        </div>\n                        {/*<div className=\"form-group row\">\n                            <label htmlFor=\"group_id\" className=\"col-md-3 control-label\">Group</label>\n                            <div className=\"col-md-9\">\n                                <select className=\"form-control\"\n                                        onChange={this.changeGroup}\n                                        value={this.state.group_id}>\n                                    <option value=\"0\">{lang['common.select.default']}</option>\n                                    {listGroup.map(d => (\n                                        <option key={d.id} value={d.id}>{d.name.vi} - {d.name.en} - {d.name.jp.kanji} - {d.name.jp.romaji}</option>\n                                    ))}\n                                </select>\n                            </div>\n                        </div>*/}\n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={this.handleDiscardsFilterButton} >\n                        <i className=\"fa fa-times mr-1\"> </i>\n                        {lang['layout.button.discardFilter']}\n                    </button>\n                    <button type=\"button\" className=\"btn btn-primary ml-1\" onClick={this.handleApplyFilterButton} >\n                        <i className=\"fa fa-check mr-1\"> </i>\n                        {lang['layout.button.applyFilter']}\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n}\nconst mapStateToProps = (state) => ({\n    ...state.roomReducer,\n    ...state,\n});\n\nexport default connect(mapStateToProps, actions)(Filter);\n","import React from 'react';\nimport * as PagesUrl from '../../configs/PagesUrl';\nimport {Link} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport actions from '../../redux/information/action';\nimport {withRouter} from 'react-router-dom';\nimport Paginator from \"../../common/Paginator\";\nimport Filter from \"./Popup/Filter\";\nimport {Table} from 'react-bootstrap';\nimport { toVND } from \"../../helpers/Ultis\";\nimport SpinnerComponent from \"../Common/Spinner\";\n\nclass InformationList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showPopupFilter: false,\n        };\n        this.onChangePageNumber = this.handlePaging.bind(this);\n        this.onChangeItemPerPage = this.handleItemPerPage.bind(this);\n        this.onApplyFilter = this.handleFilter.bind(this);\n    }\n\n    togglePopupFilter() {\n        this.setState({\n            showPopupFilter: !this.state.showPopupFilter\n        });\n    }\n\n    componentDidMount() {\n        this.props.getList({\n            ...this.props.filter\n        });\n    }\n\n    async handlePaging(pageNumber) {\n        //update filter first, so paging number can changed\n        await this.props.updateFilter({\n            ...this.props.filter,\n            page: pageNumber\n        });\n        await this.getList();\n    }\n\n    async handleItemPerPage(itemPerPage) {\n        //update filter first, so paging number can changed\n        //change item per page must reset page to 1\n        await this.props.updateFilter({\n            ...this.props.filter,\n            per_page: itemPerPage,\n            page: 1\n        });\n        await this.getList();\n    }\n\n    async handleFilter(params) {\n        this.setState({showPopupFilter: false}, async () => {\n            //update filter first, so paging number can changed\n            //change item per page must reset page to 1\n            await this.props.updateFilter({\n                ...this.props.filter,\n                ...params,\n                page: 1\n            });\n            await this.getList();\n        });\n    }\n\n    getList() {\n        this.props.getList(this.props.filter);\n    }\n\n    renderList(listData) {\n        if (listData === undefined || listData.items === undefined) return;\n\n        return listData.items.map((row) => {\n            return (\n                <tr key={row.id}>\n                    <td>{row.id}</td>\n                    <td>{row.name.en}</td>\n                    <td>{row.name.vi}</td>\n                    {/*<td>{row.name.jp.kanji}</td>*/}\n                    {/*<td>{row.name.jp.romaji}</td>*/}\n                    {/*<td>{row.name.kr}</td>*/}\n                    {/*<td style={{width: '200px', textAlign: 'center'}}>*/}\n                        {/*<img style={{width: '100%'}} alt={row.name_vi} src={row.images.thumbnail} />*/}\n                    {/*</td>*/}\n                    <td className=\"text-nowrap text-center\">\n                        <span className=\"action-link\">\n                            <Link to={PagesUrl.PAGE_INFORMATION_DETAIL + '/' + row.id} className=\"btn btn-sm btn-info\">\n                                <i className=\"fa fa-eye\"> </i>\n                            </Link>\n                        </span>\n                        <span className=\"action-link ml-1\">\n                            <Link to={PagesUrl.PAGE_INFORMATION_EDIT + '/' + row.id} className=\"btn btn-sm btn-success\">\n                                <i className=\"fa fa-pencil\"> </i>\n                            </Link>\n                        </span>\n                        {/*<span className=\"action-link ml-1\">*/}\n                            {/*<Link to={PagesUrl.PAGE_INFORMATION_DELETE + '/' + row.id} className=\"btn btn-sm btn-danger\">*/}\n                                {/*<i className=\"fa fa-trash\"> </i>*/}\n                            {/*</Link>*/}\n                        {/*</span>*/}\n                    </td>\n                </tr>\n            );\n        });\n    }\n\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <React.Fragment>\n                <div className=\"box\">\n                    {/*<div className=\"box-header with-border\">*/}\n                        {/*<div className=\"float-md-right mt-2 mt-md-0\">*/}\n                            {/*<button type=\"button\" className=\"btn btn-secondary btn-sm ml-1\"*/}\n                                    {/*>Export*/}\n                            {/*</button>*/}\n                            {/*<Link to={PagesUrl.PAGE_INFORMATION_ADD}>*/}\n                                {/*<button type=\"button\"*/}\n                                        {/*className=\"btn btn-primary btn-sm ml-1\">{messages['layout.button.register']}</button>*/}\n                            {/*</Link>*/}\n                        {/*</div>*/}\n                    {/*</div>*/}\n                    <div className=\"box-body\">\n                        <div className=\"datatable_container\">\n                            <Paginator\n                                total={this.props.listData.total}\n                                itemPerPage={this.props.filter.per_page}\n                                currentPage={this.props.filter.page}\n                                onChangePageNumber={this.onChangePageNumber}\n                                onChangeItemPerPage={this.onChangeItemPerPage}\n                                onTogglePopupFilter={this.togglePopupFilter.bind(this)}\n                                filterData={this.props.filter}\n                            />\n                            <div className=\"row m-0 my-2\">\n                                <div className=\"col-sm-12 p-0\">\n                                    <Table bordered hover responsive size=\"sm\" className=\"table-custom mb-0\">\n                                        <thead>\n                                        <tr>\n                                            <th>Id</th>\n                                            <th colSpan={2}>Tên</th>\n                                            {/*<th>Image</th>*/}\n                                            <th style={{ width: '100px' }} rowSpan={2}>{messages['layout.column.action']}</th>\n                                        </tr>\n                                        <tr>\n                                            <th> </th>\n                                            <th>En</th>\n                                            <th>Vi</th>\n                                            {/*<th>Jp - Kanji</th>*/}\n                                            {/*<th>Jp - Romanji</th>*/}\n                                            {/*<th>Kr</th>*/}\n                                            {/*<th> </th>*/}\n                                        </tr>\n                                        </thead>\n                                        <tbody>\n                                        {this.renderList(this.props.listData)}\n                                        </tbody>\n                                    </Table>\n                                </div>\n                            </div>\n                            <div className=\"block-paging-bottom\">\n                                <Paginator\n                                    total={this.props.listData.total}\n                                    itemPerPage={this.props.filter.per_page}\n                                    currentPage={this.props.filter.page}\n                                    onChangePageNumber={this.onChangePageNumber}\n                                    onChangeItemPerPage={this.onChangeItemPerPage}\n                                    filterData={this.props.filter}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    {this.state.showPopupFilter ?\n                        <Filter\n                            show={this.state.showPopupFilter}\n                            closePopup={this.togglePopupFilter.bind(this)}\n                            onApplyFilter={this.onApplyFilter}\n                        />\n                        : null\n                    }\n                </div>\n                <SpinnerComponent show={props.isCallingApi}> </SpinnerComponent>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.informationReducer,\n    ...state.layoutReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(InformationList));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport InformationList from '../../components/Information/List';\nimport actions from \"../../redux/auth/action\";\nimport { withRouter } from 'react-router-dom';\n\nclass ScreensInformationList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <h1>\n                        {messages['information.title']}\n                    </h1>\n                </section>\n                <section className=\"content\">\n                    <div className=\"row m-0\">\n                        <div className=\"col-12 p-0\">\n                            <InformationList />\n                        </div>\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps,actions)(ScreensInformationList));\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {withRouter} from 'react-router-dom';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport {useFormik} from 'formik';\nimport Form from \"react-bootstrap/Form\";\nimport ImageUploader from 'react-images-upload';\nimport {PAGE_INFORMATION_LIST} from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../Common/Spinner\";\nimport Button from \"react-bootstrap/Button\";\nimport {Field, FieldArray, FormikProvider} from \"formik\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport DecoupledEditor from '@ckeditor/ckeditor5-build-decoupled-document';\nimport editorConfig from \"../../services/CKEditorUploadAdapter\";\nimport moment from \"moment\";\nimport siteConfig from \"../../configs/siteConfig\";\nimport {DatePicker} from \"antd\";\nimport {SingleDatePicker, DateRangePicker} from 'react-dates';\nimport DatePickerWithFormik from \"../../common/DatePickerWithFormmik\";\n\n\nconst InformationForm = (props) => {\n    const lang = props.languageSwitcher.languageMessages;\n    const {listRoomType, buttonStyle, listRoomFacility, formData} = props;\n\n    console.log(listRoomType);\n\n    let initialValues = {\n        id: formData.id,\n        name_en: formData.name.en,\n        name_vi: formData.name.vi,\n        name_jp_kanji: formData.name.jp.kanji,\n        name_jp_romaji: formData.name.jp.romaji,\n        name_kr: formData.name.kr,\n        description_en: formData.description.en,\n        description_vi: formData.description.vi,\n        description_jp_kanji: formData.description.jp.kanji,\n        description_jp_romaji: formData.description.jp.romaji,\n        description_kr: formData.description.kr,\n        images_source: formData.images && formData.images.source ? formData.images.source : '',\n        images_thumbnail: formData.images ? formData.images.thumbnail : '',\n        images_origin_source: formData.images_origin && formData.images_origin.source ? formData.images_origin.source : '',\n        images_origin_thumbnail: formData.images_origin ? formData.images_origin.thumbnail : '',\n    };\n    //convert null value to empty, else formik will not work\n    Object.keys(initialValues).forEach(key => {\n        if (initialValues[key] === undefined || initialValues[key] === null) {\n            initialValues[key] = '';\n        }\n    });\n\n    let formik = useFormik({\n        initialValues: initialValues,\n        enableReinitialize: true,\n        onSubmit: values => {\n            props.submitHandler(values);\n        },\n    });\n\n    const onDrop = (pictureSelected, pictureDataURLs)  => {\n        props.handleImageSelected(pictureSelected, pictureDataURLs);\n    };\n\n    const uploadButtonLabel = (formData.id !== undefined && formData.id !== '') ?\n        'Choose new image to replace current one' : 'Choose image';\n\n    return (\n        <div className=\"box box-primary\">\n            <SpinnerComponent show={props.isCallingApi}> </SpinnerComponent>\n            <FormikProvider value={formik}>\n                <Form onSubmit={formik.handleSubmit}>\n                    <div className=\"box-body\">\n                        <Tabs defaultActiveKey=\"home\">\n                            <Tab eventKey=\"home\" title=\"Tên\">\n                                <Form.Group>\n                                    <Form.Label>Vi</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"name_vi\"\n                                        name=\"name_vi\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_vi}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>En</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"name_en\"\n                                        name=\"name_en\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_en}\n                                    />\n                                </Form.Group>\n                                <Form.Group className=\"hide\">\n                                    <Form.Label>Jp Kanji</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"name_jp_kanji\"\n                                        name=\"name_jp_kanji\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_jp_kanji}\n                                    />\n                                </Form.Group>\n                                <Form.Group className=\"hide\">>\n                                    <Form.Label>Jp Romaji</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"name_jp_romaji\"\n                                        name=\"name_jp_romaji\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_jp_romaji}\n                                    />\n                                </Form.Group>\n                                <Form.Group className=\"hide\">>\n                                    <Form.Label>Kr</Form.Label>\n                                    <Form.Control disabled\n                                        id=\"name_kr\"\n                                        name=\"name_kr\"\n                                        type=\"text\"\n                                        onChange={formik.handleChange}\n                                        value={formik.values.name_kr}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"description_vi\" title=\"Tiếng việt\">\n                                <Form.Group>\n                                    <CKEditor\n                                        editor={DecoupledEditor}\n                                        config={editorConfig}\n                                        data={formik.values.description_vi}\n                                        onChange={(event, editor) => {\n                                            formik.setFieldValue('description_vi', editor.getData());\n                                        }}\n                                        onInit={editor => {\n                                            editor.ui.getEditableElement().parentElement.insertBefore(\n                                                editor.ui.view.toolbar.element,\n                                                editor.ui.getEditableElement()\n                                            );\n                                        }}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"description_en\" title=\"Tiếng Anh\">\n                                <Form.Group>\n                                    <CKEditor\n                                        editor={DecoupledEditor}\n                                        config={editorConfig}\n                                        data={formik.values.description_en}\n                                        onChange={(event, editor) => {\n                                            formik.setFieldValue('description_en', editor.getData());\n                                        }}\n                                        onInit={editor => {\n                                            editor.ui.getEditableElement().parentElement.insertBefore(\n                                                editor.ui.view.toolbar.element,\n                                                editor.ui.getEditableElement()\n                                            );\n                                        }}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            {/*<Tab eventKey=\"description_jp_kanji\" title=\"Description Jp Kanji\">*/}\n                                {/*<Form.Group>*/}\n                                    {/*<CKEditor*/}\n                                        {/*editor={DecoupledEditor}*/}\n                                        {/*config={editorConfig}*/}\n                                        {/*data={formik.values.description_jp_kanji}*/}\n                                        {/*onChange={(event, editor) => {*/}\n                                            {/*formik.setFieldValue('description_jp_kanji', editor.getData());*/}\n                                        {/*}}*/}\n                                        {/*onInit={editor => {*/}\n                                            {/*editor.ui.getEditableElement().parentElement.insertBefore(*/}\n                                                {/*editor.ui.view.toolbar.element,*/}\n                                                {/*editor.ui.getEditableElement()*/}\n                                            {/*);*/}\n                                        {/*}}*/}\n                                    {/*/>*/}\n                                {/*</Form.Group>*/}\n                            {/*</Tab>*/}\n                            {/*<Tab eventKey=\"description_jp_romanji\" title=\"Description Jp Romanji\">*/}\n                                {/*<Form.Group>*/}\n                                    {/*<CKEditor*/}\n                                        {/*editor={DecoupledEditor}*/}\n                                        {/*config={editorConfig}*/}\n                                        {/*data={formik.values.description_jp_romaji}*/}\n                                        {/*onChange={(event, editor) => {*/}\n                                            {/*formik.setFieldValue('description_jp_romaji', editor.getData());*/}\n                                        {/*}}*/}\n                                        {/*onInit={editor => {*/}\n                                            {/*editor.ui.getEditableElement().parentElement.insertBefore(*/}\n                                                {/*editor.ui.view.toolbar.element,*/}\n                                                {/*editor.ui.getEditableElement()*/}\n                                            {/*);*/}\n                                        {/*}}*/}\n                                    {/*/>*/}\n                                {/*</Form.Group>*/}\n                            {/*</Tab>*/}\n                            {/*<Tab eventKey=\"description_kr\" title=\"Description Kr\">*/}\n                                {/*<Form.Group>*/}\n                                    {/*<CKEditor*/}\n                                        {/*editor={DecoupledEditor}*/}\n                                        {/*config={editorConfig}*/}\n                                        {/*data={formik.values.description_kr}*/}\n                                        {/*onChange={(event, editor) => {*/}\n                                            {/*formik.setFieldValue('description_kr', editor.getData());*/}\n                                        {/*}}*/}\n                                        {/*onInit={editor => {*/}\n                                            {/*editor.ui.getEditableElement().parentElement.insertBefore(*/}\n                                                {/*editor.ui.view.toolbar.element,*/}\n                                                {/*editor.ui.getEditableElement()*/}\n                                            {/*);*/}\n                                        {/*}}*/}\n                                    {/*/>*/}\n                                {/*</Form.Group>*/}\n                            {/*</Tab>*/}\n                            {/*<Tab eventKey=\"image\" title=\"Image\">*/}\n                                {/*{ formData.id !== '' ? (*/}\n                                        {/*<Form.Group>*/}\n                                            {/*<Form.Label>Current Image</Form.Label>*/}\n                                            {/*<Form.Text>*/}\n                                                {/*<img src={formData.images.thumbnail} alt=\"Current Image\" />*/}\n                                            {/*</Form.Text>*/}\n                                        {/*</Form.Group>)*/}\n                                    {/*: ''}*/}\n                                {/*<Form.Group>*/}\n                                    {/*<ImageUploader*/}\n                                        {/*singleImage={true}*/}\n                                        {/*withIcon={true}*/}\n                                        {/*buttonText={uploadButtonLabel}*/}\n                                        {/*onChange={onDrop}*/}\n                                        {/*imgExtension={['.jpg', '.png', '.gif']}*/}\n                                        {/*maxFileSize={5242880}*/}\n                                        {/*withPreview={true}*/}\n                                        {/*buttonStyles={buttonStyle}*/}\n                                    {/*/>*/}\n                                {/*</Form.Group>*/}\n                            {/*</Tab>*/}\n                        </Tabs>\n                    </div>\n                    <div className=\"box-footer text-center\">\n                        <button type=\"submit\" className=\"btn btn-info\">{lang['layout.button.save']}</button>\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={(event) => {props.history.push(PAGE_INFORMATION_LIST)} }>{lang['layout.button.cancel']}</button>\n                    </div>\n                </Form>\n            </FormikProvider>\n        </div>\n    );\n};\nconst mapStateToProps = (state) => ({\n    ...state.informationReducer,\n    ...state.layoutReducer,\n    ...state\n});\nexport default withRouter(connect(mapStateToProps, {})(InformationForm));\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/information/action\";\nimport { withRouter } from 'react-router-dom';\nimport InformationForm from './Form';\nimport notification from \"../../helpers/Notification\";\n\nclass InformationAdd extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            localImageFile: [],\n            localImageData: [],\n        };\n        this.props.resetFormData();\n    }\n\n    handleImageSelected = (pictureSelected, pictureDataURLs)  => {\n        if (pictureSelected.length > 0) {\n            this.setState({\n                localImageFile: [pictureSelected[pictureSelected.length - 1]],\n                localImageData: [pictureDataURLs[pictureDataURLs.length - 1]]\n            });\n        } else {\n            this.setState({\n                localImageFile: [],\n                localImageData: []\n            });\n        }\n    };\n\n    onSubmit = values => {\n        if (!this.validate(values)) {\n            return;\n        }\n\n        const data = {\n            id: values.id,\n            name: {\n                vi: values.name_vi,\n                en: values.name_en,\n                jp: {\n                    kanji: values.name_jp_kanji,\n                    romaji: values.name_jp_romaji\n                },\n                kr: values.name_kr\n            },\n            description: {\n                vi: values.description_vi,\n                en: values.description_en,\n                jp: {\n                    kanji: values.description_jp_kanji,\n                    romaji: values.description_jp_romaji\n                },\n                kr: values.description_kr\n            },\n            images: {\n                source: values.images_source,\n                thumbnail: values.images_thumbnail,\n            },\n            images_origin: {\n                source: values.images_origin_source,\n                thumbnail: values.images_origin_thumbnail\n            },\n        };\n        //add product\n        this.props.add({\n            data: data,\n            image: this.state.localImageFile[0]\n        });\n    };\n\n    validate(values) {\n        console.log(values);\n\n        let errors = [];\n        if (values.name_vi === '' || values.name_en === '' || values.name_jp_kanji === '' || values.name_jp_romaji === '' || values.name_kr === '') {\n            errors.push('All Name is required');\n        }\n        // if (this.state.localImageFile.length === 0) {\n        //     errors.push('Image is required');\n        // }\n\n        if (errors.length > 0) {\n            notification.error(errors);\n            return false;\n        }\n        return true;\n    }\n\n    componentDidMount() {\n        \n    }\n\n    render() {\n\n        let buttonStyle = {};\n        if (this.state.localImageData.length > 0) {\n            buttonStyle = {display: 'none'};\n        }\n\n        return (\n            <InformationForm\n                submitHandler={this.onSubmit}\n                handleUploadImage={this.handleUploadImage}\n                handleImageSelected={this.handleImageSelected}\n                buttonStyle={buttonStyle}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.informationReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(InformationAdd));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport actions from \"../../redux/information/action\";\nimport { Link, withRouter } from 'react-router-dom';\nimport { Breadcrumb } from \"react-bootstrap\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport * as PageUrls from '../../configs/PagesUrl';\nimport InformationAdd from '../../components/Information/Add';\n\nclass ScreensInformationAdd extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_INFORMATION_LIST}>\n                            {messages['information.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['information.add.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <InformationAdd />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensInformationAdd));\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/information/action\";\nimport { withRouter } from 'react-router-dom';\nimport InformationForm from './Form';\nimport notification from \"../../helpers/Notification\";\n\nclass InformationEdit extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            localImageFile: [],\n            localImageData: [],\n        };\n        this.props.resetFormData();\n    }\n\n    handleUploadImage = async event => {\n        console.log('upload product image');\n        console.log(event.target.files[0]);\n        // notification.info('Uploading...');\n        // let formData = {\n        //     image: event.target.files[0]\n        // };\n        // await this.props.uploadImage(formData);\n    };\n\n    handleImageSelected = (pictureSelected, pictureDataURLs)  => {\n        if (pictureSelected.length > 0) {\n            this.setState({\n                localImageFile: [pictureSelected[pictureSelected.length - 1]],\n                localImageData: [pictureDataURLs[pictureDataURLs.length - 1]]\n            });\n        } else {\n            this.setState({\n                localImageFile: [],\n                localImageData: []\n            });\n        }\n    };\n\n    onSubmit = values => {\n        if (!this.validate(values)) {\n            return;\n        }\n\n        const data = {\n            id: values.id,\n            name: {\n                vi: values.name_vi,\n                en: values.name_en,\n                jp: {\n                    kanji: values.name_jp_kanji,\n                    romaji: values.name_jp_romaji\n                },\n                kr: values.name_kr\n            },\n            description: {\n                vi: values.description_vi,\n                en: values.description_en,\n                jp: {\n                    kanji: values.description_jp_kanji,\n                    romaji: values.description_jp_romaji\n                },\n                kr: values.description_kr,\n            },\n            images: {\n                source: values.images_source,\n                thumbnail: values.images_thumbnail,\n            },\n            images_origin: {\n                source: values.images_origin_source,\n                thumbnail: values.images_origin_thumbnail\n            }\n        };\n        //update product\n        if (this.state.localImageFile.length > 0) {\n            this.props.edit({\n                data: data,\n                image: this.state.localImageFile[0]\n            });\n        } else {\n            this.props.edit({\n                data: data,\n            });\n        }\n    };\n\n    validate = values => {\n\n        if (values.id === '') {\n            notification.error('Record does not exist');\n            return false;\n        }\n\n        let errors = [];\n        if (values.name_vi === '' || values.name_en === '' || values.name_jp_kanji === '' || values.name_jp_romaji === '' || values.name_kr === '') {\n            errors.push('All Name is required');\n        }\n\n        if (errors.length > 0) {\n            notification.error(errors);\n            return false;\n        }\n        return true;\n    };\n\n    componentDidMount() {\n        this.props.getById(this.props.match.params.id);\n    }\n\n    render() {\n\n        let buttonStyle = {};\n        if (this.state.localImageData.length > 0) {\n            buttonStyle = {display: 'none'};\n        }\n\n        return (\n            <InformationForm\n                submitHandler={this.onSubmit}\n                handleUploadImage={this.handleUploadImage}\n                handleImageSelected={this.handleImageSelected}\n                buttonStyle={buttonStyle}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.informationReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(InformationEdit));\n","import React from 'react';\nimport {Breadcrumb} from \"react-bootstrap\";\nimport * as PageUrls from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport { withRouter } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/information/action\";\nimport InformationEdit from \"../../components/Information/Edit\";\n\nclass ScreensInformationEdit extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_INFORMATION_LIST}>\n                            {messages['information.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['information.edit.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <InformationEdit />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensInformationEdit));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport {FieldArray, FormikProvider, useFormik} from 'formik';\nimport Form from \"react-bootstrap/Form\";\nimport {PAGE_INFORMATION_LIST} from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../Common/Spinner\";\nimport Button from \"react-bootstrap/Button\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport DecoupledEditor from \"@ckeditor/ckeditor5-build-decoupled-document\";\nimport editorConfig from \"../../services/CKEditorUploadAdapter\";\n\nconst InformationFormDetails = (props) => {\n    const lang = props.languageSwitcher.languageMessages;\n    const { formData, isDetail } = props;\n\n    let initialValues = {\n        id: formData.id,\n        name_en: formData.name.en,\n        name_vi: formData.name.vi,\n        name_jp_kanji: formData.name.jp.kanji,\n        name_jp_romaji: formData.name.jp.romaji,\n        name_kr: formData.name.kr,\n        description_en: formData.description.en,\n        description_vi: formData.description.vi,\n        description_jp_kanji: formData.description.jp.kanji,\n        description_jp_romaji: formData.description.jp.romaji,\n        description_kr: formData.description.kr,\n        images_source: formData.images && formData.images.source ? formData.images.source : '',\n        images_thumbnail: formData.images ? formData.images.thumbnail : '',\n        images_origin_source: formData.images_origin && formData.images_origin.source ? formData.images_origin.source : '',\n        images_origin_thumbnail: formData.images_origin ? formData.images_origin.thumbnail : '',\n    };\n    //convert null value to empty, else formik will not work\n    Object.keys(initialValues).forEach(key => {\n        if (initialValues[key] === undefined || initialValues[key] === null) {\n            initialValues[key] = '';\n        }\n    });\n\n    let formik = useFormik({\n        initialValues: initialValues,\n        enableReinitialize: true,\n        onSubmit: values => {\n            props.submitHandler(values);\n        },\n    });\n\n    return (\n        <div className=\"box box-primary\">\n            <SpinnerComponent show={props.isCallingApi}> </SpinnerComponent>\n            <FormikProvider value={formik}>\n                <Form onSubmit={formik.handleSubmit}>\n                    <div className=\"box-body\">\n                        <Tabs defaultActiveKey=\"home\">\n                            <Tab eventKey=\"home\" title=\"Tên\">\n                                <Form.Group>\n                                    <Form.Label>Vi</Form.Label>\n                                    <Form.Control disabled\n                                                  id=\"name_vi\"\n                                                  name=\"name_vi\"\n                                                  type=\"text\"\n                                                  onChange={formik.handleChange}\n                                                  value={formik.values.name_vi}\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>En</Form.Label>\n                                    <Form.Control disabled\n                                                  id=\"name_en\"\n                                                  name=\"name_en\"\n                                                  type=\"text\"\n                                                  onChange={formik.handleChange}\n                                                  value={formik.values.name_en}\n                                    />\n                                </Form.Group>\n                                <Form.Group className=\"hide\">\n                                    <Form.Label>Jp Kanji</Form.Label>\n                                    <Form.Control disabled\n                                                  id=\"name_jp_kanji\"\n                                                  name=\"name_jp_kanji\"\n                                                  type=\"text\"\n                                                  onChange={formik.handleChange}\n                                                  value={formik.values.name_jp_kanji}\n                                    />\n                                </Form.Group>\n                                <Form.Group className=\"hide\">\n                                    <Form.Label>Jp Romaji</Form.Label>\n                                    <Form.Control disabled\n                                                  id=\"name_jp_romaji\"\n                                                  name=\"name_jp_romaji\"\n                                                  type=\"text\"\n                                                  onChange={formik.handleChange}\n                                                  value={formik.values.name_jp_romaji}\n                                    />\n                                </Form.Group>\n                                <Form.Group className=\"hide\">\n                                    <Form.Label>Kr</Form.Label>\n                                    <Form.Control disabled\n                                                  id=\"name_kr\"\n                                                  name=\"name_kr\"\n                                                  type=\"text\"\n                                                  onChange={formik.handleChange}\n                                                  value={formik.values.name_kr}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"description_vi\" title=\"Description Vi\">\n                                <Form.Group>\n                                    <CKEditor disabled\n                                              editor={DecoupledEditor}\n                                              config={editorConfig}\n                                              data={formik.values.description_vi}\n                                              onChange={(event, editor) => {\n                                                  formik.setFieldValue('description_vi', editor.getData());\n                                              }}\n                                              onInit={editor => {\n                                                  editor.ui.getEditableElement().parentElement.insertBefore(\n                                                      editor.ui.view.toolbar.element,\n                                                      editor.ui.getEditableElement()\n                                                  );\n                                              }}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            <Tab eventKey=\"description_en\" title=\"Description En\">\n                                <Form.Group>\n                                    <CKEditor disabled\n                                              editor={DecoupledEditor}\n                                              config={editorConfig}\n                                              data={formik.values.description_en}\n                                              onChange={(event, editor) => {\n                                                  formik.setFieldValue('description_en', editor.getData());\n                                              }}\n                                              onInit={editor => {\n                                                  editor.ui.getEditableElement().parentElement.insertBefore(\n                                                      editor.ui.view.toolbar.element,\n                                                      editor.ui.getEditableElement()\n                                                  );\n                                              }}\n                                    />\n                                </Form.Group>\n                            </Tab>\n                            {/*<Tab eventKey=\"description_jp_kanji\" title=\"Description Jp Kanji\">*/}\n                                {/*<Form.Group>*/}\n                                    {/*<CKEditor disabled*/}\n                                              {/*editor={DecoupledEditor}*/}\n                                              {/*config={editorConfig}*/}\n                                              {/*data={formik.values.description_jp_kanji}*/}\n                                              {/*onChange={(event, editor) => {*/}\n                                                  {/*formik.setFieldValue('description_jp_kanji', editor.getData());*/}\n                                              {/*}}*/}\n                                              {/*onInit={editor => {*/}\n                                                  {/*editor.ui.getEditableElement().parentElement.insertBefore(*/}\n                                                      {/*editor.ui.view.toolbar.element,*/}\n                                                      {/*editor.ui.getEditableElement()*/}\n                                                  {/*);*/}\n                                              {/*}}*/}\n                                    {/*/>*/}\n                                {/*</Form.Group>*/}\n                            {/*</Tab>*/}\n                            {/*<Tab eventKey=\"description_jp_romanji\" title=\"Description Jp Romanji\">*/}\n                                {/*<Form.Group>*/}\n                                    {/*<CKEditor disabled*/}\n                                              {/*editor={DecoupledEditor}*/}\n                                              {/*config={editorConfig}*/}\n                                              {/*data={formik.values.description_jp_romaji}*/}\n                                              {/*onChange={(event, editor) => {*/}\n                                                  {/*formik.setFieldValue('description_jp_romaji', editor.getData());*/}\n                                              {/*}}*/}\n                                              {/*onInit={editor => {*/}\n                                                  {/*editor.ui.getEditableElement().parentElement.insertBefore(*/}\n                                                      {/*editor.ui.view.toolbar.element,*/}\n                                                      {/*editor.ui.getEditableElement()*/}\n                                                  {/*);*/}\n                                              {/*}}*/}\n                                    {/*/>*/}\n                                {/*</Form.Group>*/}\n                            {/*</Tab>*/}\n                            {/*<Tab eventKey=\"description_kr\" title=\"Description Kr\">*/}\n                                {/*<Form.Group>*/}\n                                    {/*<CKEditor disabled*/}\n                                              {/*editor={DecoupledEditor}*/}\n                                              {/*config={editorConfig}*/}\n                                              {/*data={formik.values.description_kr}*/}\n                                              {/*onChange={(event, editor) => {*/}\n                                                  {/*formik.setFieldValue('description_kr', editor.getData());*/}\n                                              {/*}}*/}\n                                              {/*onInit={editor => {*/}\n                                                  {/*editor.ui.getEditableElement().parentElement.insertBefore(*/}\n                                                      {/*editor.ui.view.toolbar.element,*/}\n                                                      {/*editor.ui.getEditableElement()*/}\n                                                  {/*);*/}\n                                              {/*}}*/}\n                                    {/*/>*/}\n                                {/*</Form.Group>*/}\n                            {/*</Tab>*/}\n                            {/*<Tab eventKey=\"image\" title=\"Image\">*/}\n                                {/*{ formData.id !== '' ? (*/}\n                                        {/*<Form.Group>*/}\n                                            {/*<Form.Label>Current Image</Form.Label>*/}\n                                            {/*<Form.Text>*/}\n                                                {/*<img src={formData.images.thumbnail} alt=\"Current Image\" />*/}\n                                            {/*</Form.Text>*/}\n                                        {/*</Form.Group>)*/}\n                                    {/*: ''}*/}\n                            {/*</Tab>*/}\n                        </Tabs>\n                    </div>\n                    <div className=\"box-footer text-center\">\n                        {isDetail === undefined ?\n                            <React.Fragment>\n                                <button type=\"submit\" className=\"btn btn-info\">{lang['layout.button.delete']}</button>\n                                <button type=\"button\" className=\"btn btn-secondary\" onClick={(event) => {props.history.push(PAGE_INFORMATION_LIST)} }>{lang['layout.button.cancel']}</button>\n                            </React.Fragment>\n                            :\n                            <React.Fragment>\n                                <button type=\"button\" className=\"btn btn-secondary\" onClick={(event) => {props.history.push(PAGE_INFORMATION_LIST)} }>{lang['layout.button.back']}</button>\n                            </React.Fragment>\n                        }\n                    </div>\n                </Form>\n            </FormikProvider>\n        </div>\n    );\n};\nconst mapStateToProps = (state) => ({\n    ...state.informationReducer,\n    ...state.layoutReducer,\n    ...state\n});\nexport default withRouter(connect(mapStateToProps, {})(InformationFormDetails));\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/information/action\";\nimport { withRouter } from 'react-router-dom';\nimport InformationFormDetails from './FormDetails';\n\nclass InformationDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.resetFormData();\n    }\n\n    componentDidMount() {\n        this.props.getById(this.props.match.params.id);\n    }\n\n    render() {\n\n        const lang = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <React.Fragment>\n                <InformationFormDetails\n                    submitHandler={this.onSubmit}\n                    isDetail={true}\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.roomReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(InformationDetails));\n","import React from 'react';\nimport {Breadcrumb} from \"react-bootstrap\";\nimport * as PageUrls from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport { withRouter } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/information/action\";\nimport InformationDetail from \"../../components/Information/Detail\";\n\nclass ScreensInformationDetail extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_INFORMATION_LIST}>\n                            {messages['information.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['information.details.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <InformationDetail />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensInformationDetail));\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/information/action\";\nimport { withRouter } from 'react-router-dom';\nimport InformationFormDetails from './FormDetails';\n\nclass InformationDelete extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props.resetFormData();\n    }\n\n    onSubmit = values => {\n        this.props.delete(values.id);\n    };\n\n    componentDidMount() {\n        this.props.getById(this.props.match.params.id);\n    }\n\n    render() {\n\n        const lang = this.props.languageSwitcher.languageMessages;\n\n        return (\n            <React.Fragment>\n            <p>{lang['message.confirmDelete']}</p>\n            <InformationFormDetails\n                submitHandler={this.onSubmit}\n            />\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.roomReducer,\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(InformationDelete));\n","import React from 'react';\nimport {Breadcrumb} from \"react-bootstrap\";\nimport * as PageUrls from \"../../configs/PagesUrl\";\nimport SpinnerComponent from \"../../components/Common/Spinner\";\nimport { withRouter } from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport actions from \"../../redux/information/action\";\nimport InformationDelete from \"../../components/Information/Delete\";\n\nclass ScreensInformationDelete extends React.Component {\n    render() {\n        const messages = this.props.languageSwitcher.languageMessages;\n        const { props } = this;\n\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <Breadcrumb>\n                        <Breadcrumb.Item href={PageUrls.PAGE_INFORMATION_LIST}>\n                            {messages['information.title']}\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item active>\n                            {messages['information.delete.title']}\n                        </Breadcrumb.Item>\n                    </Breadcrumb>\n                </section>\n                <section className=\"content\">\n                    <InformationDelete />\n                </section>\n                <SpinnerComponent show={props.isLoading}> </SpinnerComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ...state\n});\n\nexport default withRouter(connect(mapStateToProps, actions)(ScreensInformationDelete));\n","import React, { Component } from 'react';\n\nclass PageNotFound extends Component {\n    render() {\n        return (\n            <div className=\"content-wrapper\">\n                <section className=\"content-header\">\n                    <h1>\n                        Page Not Found\n                    </h1>\n                </section>\n                <section className=\"content\">\n                    <div className=\"row\">\n\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}\n\nexport  default PageNotFound;","import React from \"react\";\nimport { Route, Switch } from 'react-router-dom';\n\nimport * as PagesUrl from './configs/PagesUrl';\nimport ScreensDashboardIndex from './screens/Dashboard/Index';\nimport ScreensUserRegister from \"./screens/User/Add\";\nimport ScreensUserList from './screens/User/List';\nimport ScreensUserEdit from './screens/User/Edit';\nimport ScreensUserDelete from './screens/User/Delete';\nimport ScreensUserDetail from './screens/User/Detail';\n\nimport ScreensCategoryList from './screens/Category/List';\nimport ScreensCategoryAdd from './screens/Category/Add';\nimport ScreensCategoryEdit from './screens/Category/Edit';\nimport ScreensCategoryDelete from './screens/Category/Delete';\n\nimport ScreensRoomTypeList from './screens/RoomType/List';\nimport ScreensRoomTypeAdd from './screens/RoomType/Add';\nimport ScreensRoomTypeEdit from './screens/RoomType/Edit';\nimport ScreensRoomTypeDelete from './screens/RoomType/Delete';\n\nimport ScreensRoomFacilityList from './screens/RoomFacility/List';\nimport ScreensRoomFacilityAdd from './screens/RoomFacility/Add';\nimport ScreensRoomFacilityEdit from './screens/RoomFacility/Edit';\nimport ScreensRoomFacilityDelete from './screens/RoomFacility/Delete';\n\nimport ScreensPageList from './screens/Page/List';\nimport ScreensPageDetail from './screens/Page/Detail';\nimport ScreensPageAdd from './screens/Page/Add';\nimport ScreensPageEdit from './screens/Page/Edit';\nimport ScreensPageDelete from './screens/Page/Delete';\n\nimport ScreensRoomList from './screens/Room/List';\nimport ScreensRoomDetail from './screens/Room/Detail';\nimport ScreensRoomAdd from './screens/Room/Add';\nimport ScreensRoomEdit from './screens/Room/Edit';\nimport ScreensRoomDelete from './screens/Room/Delete';\nimport ScreensRoomListImage from './screens/Room/ListImage';\n\nimport ScreensServiceList from './screens/Service/List';\nimport ScreensServiceAdd from './screens/Service/Add';\nimport ScreensServiceEdit from './screens/Service/Edit';\nimport ScreensServiceDetail from './screens/Service/Detail';\nimport ScreensServiceDelete from './screens/Service/Delete';\n\nimport ScreensPromotionList from './screens/Promotion/List';\nimport ScreensPromotionDetail from './screens/Promotion/Detail';\nimport ScreensPromotionAdd from './screens/Promotion/Add';\nimport ScreensPromotionEdit from './screens/Promotion/Edit';\nimport ScreensPromotionDelete from './screens/Promotion/Delete';\n\nimport ScreensRoleList from './screens/Role/List';\n\nimport ScreensHomePageList from './screens/Homepage/List';\nimport ScreensHomePageAdd from './screens/Homepage/Add';\nimport ScreensHomePageEdit from './screens/Homepage/Edit';\nimport ScreensHomePageDelete from './screens/Homepage/Delete';\n\nimport ScreensGalleryList from './screens/Gallery/List';\nimport ScreensGalleryAdd from './screens/Gallery/Add';\nimport ScreensGalleryEdit from './screens/Gallery/Edit';\nimport ScreensGalleryDelete from './screens/Gallery/Delete';\n\nimport ScreensInformationList from './screens/Information/List';\nimport ScreensInformationAdd from './screens/Information/Add';\nimport ScreensInformationEdit from './screens/Information/Edit';\nimport ScreensInformationDetail from './screens/Information/Detail';\nimport ScreensInformationDelete from './screens/Information/Delete';\n\nimport PageNotFound from \"./components/Layout/PageNotFound\";\n\nconst privateComponents = [\n    {\n        path: PagesUrl.PAGE_DASHBOARD,\n        component: ScreensDashboardIndex,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_CATEGORY_LIST,\n        component: ScreensCategoryList,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_CATEGORY_ADD,\n        component: ScreensCategoryAdd,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_CATEGORY_EDIT + '/:categoryId',\n        component: ScreensCategoryEdit,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_CATEGORY_DELETE + '/:categoryId',\n        component: ScreensCategoryDelete,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_GROUP_LIST,\n        component: ScreensRoomTypeList,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_GROUP_ADD,\n        component: ScreensRoomTypeAdd,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_GROUP_EDIT + '/:groupId',\n        component: ScreensRoomTypeEdit,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_GROUP_DELETE + '/:groupId',\n        component: ScreensRoomTypeDelete,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_MASTER_PAGE_LIST,\n        component: ScreensPageList,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_MASTER_PAGE_DETAIL + '/:pageId',\n        component: ScreensPageDetail,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_MASTER_PAGE_ADD,\n        component: ScreensPageAdd,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_MASTER_PAGE_EDIT + '/:pageId',\n        component: ScreensPageEdit,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_MASTER_PAGE_DELETE + '/:pageId',\n        component: ScreensPageDelete,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_ROOM_LIST,\n        component: ScreensRoomList,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_ROOM_DETAIL + '/:id',\n        component: ScreensRoomDetail,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_ROOM_ADD,\n        component: ScreensRoomAdd,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_ROOM_EDIT + '/:id',\n        component: ScreensRoomEdit,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_ROOM_DELETE + '/:id',\n        component: ScreensRoomDelete,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_ROOM_LIST_IMAGE + '/:id',\n        component: ScreensRoomListImage,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_ROOM_FACILITY_LIST,\n        component: ScreensRoomFacilityList,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_ROOM_FACILITY_ADD,\n        component: ScreensRoomFacilityAdd,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_ROOM_FACILITY_EDIT + '/:variantId',\n        component: ScreensRoomFacilityEdit,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_ROOM_FACILITY_DELETE + '/:variantId',\n        component: ScreensRoomFacilityDelete,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_ROOM_TYPE_LIST,\n        component: ScreensRoomTypeList,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_ROOM_TYPE_ADD,\n        component: ScreensRoomTypeAdd,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_ROOM_TYPE_EDIT + '/:id',\n        component: ScreensRoomTypeEdit,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_ROOM_TYPE_DELETE + '/:id',\n        component: ScreensRoomTypeDelete,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_PROMOTION_LIST,\n        component: ScreensPromotionList,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_PROMOTION_ADD,\n        component: ScreensPromotionAdd,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_PROMOTION_EDIT + '/:promotionId',\n        component: ScreensPromotionEdit,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_PROMOTION_DETAIL + '/:promotionId',\n        component: ScreensPromotionDetail,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_PROMOTION_DELETE + '/:promotionId',\n        component: ScreensPromotionDelete,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_ROLE_LIST,\n        component: ScreensRoleList,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_USER_ADD,\n        component: ScreensUserRegister,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_USER_LIST,\n        component: ScreensUserList,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_USER_DETAIL + '/:userId',\n        component: ScreensUserDetail,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_USER_EDIT + '/:userId',\n        component: ScreensUserEdit,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_USER_DELETE + '/:userId',\n        component: ScreensUserDelete,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_HOMEPAGE_GALLERY_LIST,\n        component: ScreensHomePageList,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_HOMEPAGE_GALLERY_ADD,\n        component: ScreensHomePageAdd,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_HOMEPAGE_GALLERY_EDIT + '/:pageId',\n        component: ScreensHomePageEdit,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_HOMEPAGE_GALLERY_DELETE + '/:pageId',\n        component: ScreensHomePageDelete,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_GALLERY_LIST,\n        component: ScreensGalleryList,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_GALLERY_ADD,\n        component: ScreensGalleryAdd,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_GALLERY_EDIT + '/:pageId',\n        component: ScreensGalleryEdit,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_GALLERY_DELETE + '/:pageId',\n        component: ScreensGalleryDelete,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_SERVICE_LIST,\n        component: ScreensServiceList,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_SERVICE_ADD,\n        component: ScreensServiceAdd,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_SERVICE_EDIT + '/:id',\n        component: ScreensServiceEdit,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_SERVICE_DETAIL + '/:id',\n        component: ScreensServiceDetail,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_SERVICE_DELETE + '/:id',\n        component: ScreensServiceDelete,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_INFORMATION_LIST,\n        component: ScreensInformationList,\n        exact: true\n    },\n    // {\n    //     path: PagesUrl.PAGE_INFORMATION_ADD,\n    //     component: ScreensInformationAdd,\n    //     exact: true\n    // },\n    {\n        path: PagesUrl.PAGE_INFORMATION_EDIT + '/:id',\n        component: ScreensInformationEdit,\n        exact: true\n    },\n    {\n        path: PagesUrl.PAGE_INFORMATION_DETAIL + '/:id',\n        component: ScreensInformationDetail,\n        exact: true\n    },\n    // {\n    //     path: PagesUrl.PAGE_INFORMATION_DELETE + '/:id',\n    //     component: ScreensInformationDelete,\n    //     exact: true\n    // },\n];\n\nclass GroupRestrictedRoute extends React.Component {\n    render() {\n        return (\n            <Switch>\n                {privateComponents.map(singleRoute => {\n                    const {path, exact, ...otherProps} = singleRoute;\n                    return (\n                        <Route\n                            exact={exact !== false}\n                            key={singleRoute.path}\n                            path={singleRoute.path}\n                            {...otherProps}\n                        />\n                    );\n                })}\n                <Route component={PageNotFound}/>\n            </Switch>\n        )\n    }\n}\n\nexport default GroupRestrictedRoute;\n","import React from 'react';\nimport { Route, Switch, Router } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { ConnectedRouter } from 'connected-react-router';\n\nimport * as PagesUrl from './configs/PagesUrl';\nimport ScreensUserLogin from './screens/User/Login';\nimport Sidebar from \"./components/Layout/Sidebar\";\nimport Header from \"./components/Layout/Header\";\nimport Footer from \"./components/Layout/Footer\";\nimport GroupRestrictedRoute from \"./RestrictedRouter\";\n\nconst RestrictedRoute = ({component: Component, isLoggedIn, ...rest}) => (\n    <Route {...rest} render={(props) => {\n        return (\n            isLoggedIn === true\n                ? (\n                    <div>\n                        <Header/>\n                        <Sidebar/>\n                        <Component {...props}/>\n                        <Footer/>\n                    </div>\n                )\n                : <Redirect to={PagesUrl.PAGE_LOGIN}/>\n        )\n    }}/>\n);\n\nconst PublicRoutes = ({history, isLoggedIn}) => (\n    <ConnectedRouter history={history}>\n        <Switch>\n            <Route exact path={PagesUrl.PAGE_ROOT} component={ScreensUserLogin}/>\n            <Route exact path={PagesUrl.PAGE_LOGIN} component={ScreensUserLogin}/>\n            <RestrictedRoute isLoggedIn={isLoggedIn} component={GroupRestrictedRoute} history={history}/>\n        </Switch>\n    </ConnectedRouter>\n);\n\nexport default connect(state => ({\n    isLoggedIn: state.authReducer.isLoggedIn\n}))(PublicRoutes);\n","import antdEn from 'antd/lib/locale-provider/en_US';\nimport appLocaleData from 'react-intl/locale-data/en';\nimport enMessages from '../locales/en_US.json';\n\nconst EnLang = {\n  messages: {\n    ...enMessages,\n  },\n  antd: antdEn,\n  locale: 'en-US',\n  data: appLocaleData,\n};\nexport default EnLang;\n","import antdJp from 'antd/lib/locale-provider/ja_JP';\nimport appLocaleData from 'react-intl/locale-data/ja';\nimport jpMessages from '../locales/ja-JP.json';\n\nconst JpLan = {\n  messages: {\n    ...jpMessages\n  },\n  antd: antdJp,\n  locale: 'ja-JP',\n  data: appLocaleData\n};\nexport default JpLan;\n","import antdVi from 'antd/lib/locale-provider/vi_VN';\nimport appLocaleData from 'react-intl/locale-data/vi';\nimport viMessages from '../locales/vi_VN.json';\n\nconst ViLang = {\n  messages: {\n    ...viMessages,\n  },\n  antd: antdVi,\n  locale: 'vi-VN',\n  data: appLocaleData,\n};\nexport default ViLang;\n","import Enlang from './entries/en-US';\nimport Jplang from './entries/ja-JP';\nimport Vnlang from './entries/vi-VN';\nimport { addLocaleData } from 'react-intl';\n\nconst AppLocale = {\n  en: Enlang,\n  jp: Jplang,\n  vi: Vnlang\n};\naddLocaleData(AppLocale.en.data);\naddLocaleData(AppLocale.jp.data);\naddLocaleData(AppLocale.vi.data);\n\nexport default AppLocale;\n","import React from 'react';\nimport {Helmet} from \"react-helmet\";\nimport PublicRoutes from './Router';\nimport Boot from './redux/boot';\nimport { Provider } from 'react-redux';\nimport { IntlProvider } from 'react-intl';\nimport { store, history } from './redux/store';\nimport { getCurrentLanguage } from \"./helpers/Ultis\";\nimport siteConfig from \"./configs/siteConfig\";\nimport AppLocale from \"./languageProvider\";\nimport './assets/css/app.css';\nimport 'antd/dist/antd.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ConfigProvider } from \"antd\";\n\nconst currentAppLocale = AppLocale[getCurrentLanguage(siteConfig.language.default || \"vietnam\").locale];\n\nclass App extends React.Component {\n    render() {\n        return (\n            <ConfigProvider locale={currentAppLocale.antd}>\n                <IntlProvider\n                    locale={currentAppLocale.locale}\n                    messages={currentAppLocale.messages}\n                >\n                <Provider store={store}>\n                  <Helmet>\n                    <meta charSet=\"utf-8\" />\n                    <title>{siteConfig.title}</title>\n                    <link rel=\"canonical\" href=\"http://mysite.com/example\" />\n                  </Helmet>\n                    <PublicRoutes history={history} />\n                </Provider>\n                </IntlProvider>\n            </ConfigProvider>\n        )\n    }\n}\n\nBoot()\n    .then(() => App())\n    .catch(error => console.error(error));\n\nexport default App;\n","import { store } from './store';\nimport authActions from './auth/action';\n\nexport default () =>\n    new Promise(() => {\n        store.dispatch(authActions.checkAuthorization());\n    });","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import AppTest from './AppTest';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// ReactDOM.render(<AppTest />, document.getElementById('root'));\n\n// Hot Module Replacement API\nif (module.hot) {\n    module.hot.accept('./App.js', () => {\n        const NextApp = require('./App').default;\n        ReactDOM.render(<NextApp />, document.getElementById('root'));\n    });\n}\nregisterServiceWorker();\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n          registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  // At this point, the old content will have been purged and\n                  // the fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in your web app.\n                } else {\n                  // At this point, everything has been precached.\n                  // It's the perfect time to display a\n                  // \"Content is cached for offline use.\" message.\n                }\n              }\n            };\n          };\n        })\n        .catch(error => {\n          console.error('Error during service worker registration:', error);\n        });\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}